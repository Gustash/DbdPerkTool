{"version":3,"file":"static/js/151.322f7942.chunk.js","mappings":"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CF,+CACE,sCACF,0CAA2C,iCAC3C,+CACE,sCACF,kDACE,yCACF,6CACE,oCACF,+CACE,sCACF,4CACE,mCACF,gDACE,wCACF,wCAAyC,+BACzC,6CACE,oCACF,0CAA2C,iCAC3C,yCAA0C,gCAC1C,mDACE,0CACF,4CACE,oCACF,kDACE,0CACF,4CACE,sCACF,6CACE,uCACF,4CACE,sCACF,8CACE,wCACF,8CACE,wCACF,8CACE,wCACF,4CACE,sCACF,+CACE,0CACF,qDACE,gDACF,gDACE,2CACF,+CACE,yCACF,gDACE,0CACF,8CACE,wCACF,iDACE,4CACF,iDACE,4CACF,8CACE,wCACF,+CACE,yCACF,gDACE,0CACF,6CACE,uCACF,0CACE,sCACF,iDACE,iCACF,iDACE,iCACF,8CAA+C,8BAC/C,gDACE,+BACF,gDACE,gCACF,4CAA6C,2BAC7C,qDACE,oCACF,wDACE,yCACF,iDACE,iCACF,oDACE,qCACF,4CAA6C,2BAC7C,6CAA8C,6BAC9C,8CACE,gCACF,oDACE,mCACF,oDACE,mCACF,oDACE,oCACF,iDACE,gCACF,iDACE,gCACF,6CAA8C,4BAC9C,kDACE,iCACF,uCAAwC,gCACxC,uDACE,4CACF,4CAA6C,gCAC7C,oDACE,0CACF,6CACE,iCACF,iDACE,sCACF,2CAA4C,+BAC5C,gDACE,oCACF,iDACE,sCACF,iDACE,sCACF,mDACE,uCACF,8CACE,kCACF,oDACE,yCACF,gDACE,qCACF,kDACE,uCACF,+CACE,mCACF,+CACE,mCACF,6CACE,iCACF,mDACE,uCACF,oDACE,yCACF,+CACE,yCACF,8CACE,kCACF,8CACE,0CACF,iDACE,uCACF,4CAA6C,gCAC7C,gDACE,oCACF,+CACE,mCACF,iDACE,sCACF,gDACE,oCACF,sCAAuC,8BACvC,6CAA8C,8BAC9C,uCAAwC,gCACxC,6CACE,sCACF,0CACE,oCACF,6CAA6C,4CAC7C,oCAAqC,oBACrC,mCAAoC,uBACpC,uCAAwC,qBACxC,qCAAsC,mBACtC,sCAAuC,oBACvC,yCACE,yCACF,4CACE,2CACF,0CACE,yCACF,0CACE,wCACF,sCAAuC,iCACvC,uCAAwC,iCACxC,wCAAyC,2BACzC,yCAA0C,0BAC1C,+CACE,0CACF,iDACE,+CACF,6CACE,4CACF,wCACE,uCACF,wCACE,wCACF,wCACE,sCACF,wCAAyC,oCACzC,oCAAqC,sBACrC,qCAAsC,uCACtC,sCACE,wCACF,4CACE,sCACF,uCAAwC,yBACxC,wCAAyC,iCACzC,2CACE,wCACF,0CACE,0CACF,wCACE,sCACF,0CACE,uCACF,wCAAyC,iCACzC,0CACE,qCACF,qCAAsC,0BACtC,yCAA0C,kCAC1C,qCAAsC,sBACtC,wCAAyC,yBACzC,kCAAmC,yBACnC,sCAAuC,wBACvC,4CACE,kCACF,wCAAyC,iCACzC,+CACE,sCACF,2CACE,0CACF,uCAAwC,kCACxC,wCAAyC,yBACzC,0CAA2C,+BAC3C,6CACE,wCACF,+CACE,0CACF,uCAAwC,4BACxC,wCAAyC,qCACzC,sCAAuC,iCACvC,wCACE,wCACF,2CAA4C,iCAC5C,uCAAwC,qBACxC,oCAAqC,4BACrC,oCAAqC,oBACrC,sCAAuC,+BACvC,sCAAuC,oBACvC,0CACE,0CACF,oCAAqC,kCACrC,wCACE,uCACF,wCAAyC,qCACzC,yCAA0C,2BAC1C,mCAAoC,wBACpC,oCAAqC,+BACrC,sCAAuC,iCACvC,wCAAyC,iCACzC,uCAAwC,gCACxC,qCAAsC,0BACtC,uCAAwC,qBACxC,sCAAuC,oBACvC,sCAAuC,qCACvC,4CAA6C,8BAC7C,0CAA2C,wBAC3C,qCAAsC,wBACtC,mCAAoC,kBACpC,sCAAuC,oBACvC,sCAAuC,2BACvC,sCAAuC,iCACvC,oCAAqC,4BACrC,kCAAmC,mBACnC,0CAA2C,wBAC3C,yCAA0C,oCAC1C,4CAA6C,8BAC7C,wCAAyC,mCACzC,wCAAyC,mCACzC,yCACE,sCACF,yCAA0C,2BAC1C,wCACE,uCACF,wCACE,uCACF,wCACE,uCACF,0CACE,yCACF,qCAAsC,kCACtC,2CACE,oCACF,wCACE,uCACF,uCAAwC,oCACxC,2CACE,0CACF,kCAAmC,kBACnC,uCAAwC,uBACxC,uCAAwC,yBACxC,oCAAqC,kBACrC,wCAAyC,sBACzC,sCAAuC,kCACvC,wCAAyC,yBACzC,0CAA2C,2BAC3C,mCAAoC,oCACpC,sCAAuC,kCACvC,qCAAsC,gCACtC,2CACE,0CACF,8CACE,4CACF,4CAA6C,gCAC7C,oCAAqC,yBACrC,wCAAyC,qBACzC,qCAAsC,mBACtC,wCAAyC,iCACzC,sCAAuC,iCACvC,yCAA0C,oCAC1C,uCAAwC,kCACxC,sCAAuC,4BACvC,wCACE,uCACF,oCAAqC,+BACrC,sCAAuC,oBACvC,6CACE,4CACF,sCAAuC,oCACvC,6CACE,yCACF,wCAAyC,kCACzC,4CACE,2CACF,0CACE,wCACF,oCAAqC,yBACrC,uCAAwC,gCACxC,0CAA2C,8BAC3C,qDACE,uCACF,6CACE,iCACF,6CACE,iCACF,+CACE,qCACF,oDACE,wCACF,+CACE,oCACF,kDACE,sCACF,8CACE,oCACF,+CACE,qCACF,8CACE,kCACF,6CACE,iCACF,4CAA6C,gCAC7C,iDACE,sCACF,gDACE,oCACF,kDACE,oCACF,iDACE,sCACF,kDACE,uCACF,+CACE,qCACF,iDACE,mCACF,2CAA4C,gCAC5C,6CACE,kCACF,+CACE,qCACF,6CACE,kCACF,+CACE,oCACF,6CACE,kCACF,6CACE,kCACF,iDACE,sCACF,+CACE,oCACF,+CACE,oCACF,8CACE,mCACF,gDACE,qCACF,+CACE,oCACF,4CACE,kCACF,qDACE,2CACF,mDACE,wCACF,2CAA4C,gCAC5C,2CAA4C,gCAC5C,2CAA4C,gCAC5C,8CACE,mCACF,6CACE,6DACF,6CACE,qCACF,0CAA2C,kCAC3C,+CACE,wCACF,mDACE,6CACF,iDACE,yCACF,8CACE,uCACF,+CACE,uCACF,mDACE,4CACF,0CAA2C,kCAC3C,oDACE,8CACF,kDACE,4CACF,8CACE,4CACF,6CACE,2CACF,sDACE,+CACF,uCAAwC,0CACxC,qDACE,qCACF,8CACE,sCACF,uDACE,sDACF,kDACE,0CACF,8CACE,uCACF,4CACE,oCACF,kDACE,2CACF,0CAA2C,kCAC3C,6CACE,sCACF,+CACE,uCACF,kDACE,0CACF,0CAA2C,mCAC3C,0CAA2C,kCAC3C,yCAA0C,iCAC1C,yCAA0C,iCAC1C,kDACE,2CACF,+CACE,uCACF,8CACE,sCACF,6CACE,qCACF,4CACE,oCACF,iDACE,0CACF,kDACE,0CACF,8CACE,sCACF,gDACE,wCACF,+CACE,gCACF,mDACE,mCACF,6CAA8C,6BAC9C,oDACE,sCACF,gDACE,gCACF,kDACE,kCACF,0CAA2C,0BAC3C,wDACE,yCACF,qDACE,sCACF,2CAA4C,2BAC5C,+CACE,oCACF,kDACE,kCACF,qDACE,6CACF,8CAA+C,8BAC/C,iDACE,iCACF,qDACE,qCACF,iDACE,iCACF,oDACE,qCACF,gDACE,iCACF,mDACE,mCACF,8CACE,sCACF,kDACE,gDACF,sDACE,qDACF,kDACE,0CACF,qDACE,6CACF,iDACE,yCACF,qDACE,+CACF,kDACE,0CACF,8CACE,uCACF,iDACE,2CACF,oDACE,8CACF,mDACE,4CACF,+CACE,uCACF,gDACE,wCACF,+CACE,wCACF,4CACE,qCACF,iDACE,2CACF,6CACE,uCACF,gDACE,yCACF,+CACE,8CACF,kDACE,0CACF,sCAAuC,4BACvC,+CACE,sCACF,8CACE,oCACF,0CAA2C,iCAC3C,mDACE,wCACF,+CACE,oCACF,yCAA0C,6BAC1C,wCAAyC,iCACzC,wCAAyC,iCACzC,8CACE,mCACF,gDACE,qCACF,iDACE,uCACF,oDACE,yCACF,wCAAyC,4BACzC,+BAAgC,eAChC,mCAAoC,mBACpC,2CACE,0CACF,4CACE,qCACF,oDACE,8CACF,oDACE,8CACF,4CACE,qCACF,qDACE,+CACF,+CACE,wCACF,oDACE,6CACF,gDACE,qDACF,0CAA2C,mCAC3C,oDACE,8CACF,kDACE,4CACF,+CACE,wCACF,0CACE,yDACF,gDACE,yCACF,gDACE,0CACF,4CACE,qCACF,2CACE,mCACF,sDACE,iDACF,uDACE,iDACF,yCAA0C,kCAC1C,oDACE,uCACF,6CACE,oCACF,2CAA4C,kCAC5C,6CACE,oCACF,2CACE,mCACF,iDACE,wCACF,gDACE,uCACF,6CACE,oCACF,iDACE,wCACF,mDACE,2CACF,2CAA4C,kCAC5C,mDACE,2CACF,8CACE,oCACF,gDACE,wCACF,kDACE,2CACF,gDACE,uCACF,kDACE,yCACF,8CACE,qCACF,6CACE,oCACF,+CACE,uCACF,iDACE,wCACF,gDACE,oCACF,gDACE,qCACF,8CACE,kCACF,6CAA8C,gCAC9C,6CACE,iCACF,gDACE,oCACF,+CACE,mCACF,qDACE,0CACF,mDACE,uCACF,0CAA2C,6BAC3C,qDACE,0CACF,+CACE,mCACF,4CAA6C,gCAC7C,6CACE,iCACF,2CAA4C,+BAC5C,+CACE,mCACF,8CACE,kCACF,gDACE,oCACF,4CAA6C,gCAC7C,8CACE,mCACF,gDACE,kCACF,kDACE,oCACF,uDACE,0CACF,6CACE,kCACF,4CACE,kCACF,oDACE,2CACF,8CACE,oCACF,0CAA2C,iCAC3C,wDACE,8CACF,gDACE,uCACF,6CACE,mCACF,oDACE,0CACF,kDACE,wCACF,kDACE,wCACF,+CACE,qCACF,8CACE,oCACF,iDACE,uCACF,6CACE,mCACF,8CACE,oCACF,+CACE,qCACF,iDACE,uCACF,2CAA4C,iCAC5C,iDACE,wCACF,gDACE,sCACF,6CACE,sCACF,8CACE,uCACF,mDACE,6CACF,kDACE,6CACF,0DACE,oDACF,oDACE,6CACF,sDACE,iDACF,gDACE,0CACF,gDACE,yCACF,uDACE,gDACF,oDACE,+CACF,qDACE,+CACF,8CACE,uCACF,iDACE,0CACF,kDACE,4CACF,+CACE,wCACF,mDACE,6CACF,+CACE,wCACF,8CACE,uCACF,sDACE,iDACF,+CACE,wCACF,4CACE,oCACF,kDACE,4CACF,kDACE,qCACF,sDACE,yCACF,oDACE,wCACF,sDACE,0CACF,kDACE,qCACF,qDACE,yCACF,2DACE,+CACF,gDACE,qCACF,gDACE,mCACF,gDACE,oCACF,+CACE,mCACF,+CACE,kCACF,gDACE,oCACF,qDACE,wCACF,uDACE,2CACF,kDACE,qCACF,0DACE,8CACF,gDACE,oCACF,8CACE,iCACF,oDACE,yCACF,+CACE,kCACF,mDACE,+CACF,sDACE,mDACF,yCAA0C,oCAC1C,+CACE,2CACF,6CACE,wCACF,0CACE,qCACF,8CACE,yCACF,2CACE,oCACF,gDACE,yCACF,kDACE,4CACF,gDACE,0CACF,uDACE,gDACF,8CACE,wCACF,kDACE,4CACF,+CACE,wCACF,gEACE,0DACF,8CACE,wCACF,gDACE,0CACF,+CACE,wCACF,gDACE,yCACF,iDACE,0CACF,+CACE,wCACF,8CACE,uCACF,+CACE,yCACF,8CACE,uCACF,gDACE,yCACF,mDACE,4CACF,wCAAyC,8BACzC,iDACE,wCACF,iDACE,yCACF,8CACE,qCACF,yCAA0C,+BAC1C,mCAAoC,kCACpC,wCACE,uCACF,0CACE,yCACF,yCACE,wCACF,yCACE,wCACF,gDACE,0CACF,6CACE,uCACF,0CACE,oCACF,0CACE,oCACF,gDACE,0CACF,2CACE,sCACF,sCAAuC,gCACvC,iDACE,2CACF,+CACE,2CACF,4CACE,yCACF,yCAA0C,mCAC1C,4CACE,sCACF,6CACE,uCACF,0CACE,oCACF,6CACE,wCACF,wCAAyC,kCACzC,0CACE,oCACF,6CACE,uCACF,4CACE,sCACF,+CACE,0CC5hCJ,IAAMC,GAAyC,CAC7C,gCAAiC,uBACjC,uCAAwC,wBACxC,gCAAiC,uBACjC,kCAAmC,yBACnC,2CAA4C,0BAC5C,wCAAyC,uBACzC,wCAAyC,uBACzC,0CAA2C,2BAC3C,0CAA2C,4BAC3C,2CAA4C,yBAC5C,2CAA4C,uBAC5C,6CACE,iCACF,6CAA8C,6BCdhD,IAAMA,GAAyC,CAC7C,6BAA8B,qBAC9B,6BAA8B,qBAC9B,6BAA8B,qBAC9B,6BAA8B,qBAC9B,6BAA8B,qBAC9B,6BAA8B,sBCNhC,IAAMA,GAAyC,CAC7C,4CAA6C,WAC7C,4CAA6C,WAC7C,6CAA8C,YAC9C,+CAAgD,cAChD,0CAA2C,SAC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","sources":["app/components/Badge.tsx","app/components/Form/PlainTextInput.tsx","app/components/SuccessModal.tsx","app/components/ErrorModal.tsx","app/components/AuthorModal.tsx","app/components/PackDisplayHeader.tsx","app/components/PackDisplayFilters.tsx","app/components/IconPack/PerkPack/HasItem.tsx","app/components/IconPack/PerkPack/Has.tsx","app/components/language/ItemAddons.ts","app/components/language/Archive.ts","app/components/language/AuricCellPacks.ts","app/components/language/DailyRituals.ts","app/components/language/Emblems.ts","app/components/language/Help.ts","app/components/language/Items.ts","app/components/language/Offerings.ts","app/components/language/Perks.ts","app/components/language/Powers.ts","app/components/language/StatusEffects.ts","app/components/language/StoreTabs.ts","app/components/language/Language.ts","app/components/language/Actions.ts","app/components/language/Portraits.ts","app/components/language/Root.ts","app/components/IconPack/PerkPack/Details.tsx","app/components/IconPack/InstallButton.tsx","app/components/IconPack/Author.tsx","app/components/IconPack/LatestChapter.tsx","app/components/IconPack/MainPreview.tsx","app/components/IconPack/PackLink.tsx","app/components/IconPack/Title.tsx","app/components/IconPack/EditPackModal.tsx","app/components/IconPack/AdminControls.tsx","app/components/IconPack/ApprovalControls.tsx","app/components/Pack.tsx","app/pages/PerksPage/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Badge = styled.i`\n  margin-left: 3px;\n  margin-right: 3px;\n\n  &:hover {\n    color: var(--main-color);\n    cursor: pointer;\n  }\n`;\n\nexport default Badge;\n","// @ts-nocheck\nimport React, { Component, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport styled from 'styled-components';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Badge from '../Badge';\nimport { ReactNode } from 'react-bootstrap/node_modules/@types/react';\n\ntype MyProps = {\n  onChange: Function;\n  onInputChange?: Function;\n  disabled?: boolean;\n  options?: any;\n  value: string;\n  label: string;\n  help?: any;\n};\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst InputValueWrapper = styled.div`\n  flex: 1;\n  margin-left: 10px;\n`;\n\nexport default function PlainTextInput(props: MyProps) {\n  let input;\n  let tooltip: ReactNode = undefined;\n\n  const helpTxt = props.help;\n\n  if (props.help) {\n    const renderTooltip = props => (\n      <Tooltip id=\"pti-tooltip\" {...props}>\n        {helpTxt}\n      </Tooltip>\n    );\n    tooltip = (\n      <OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 1000 }}\n        overlay={renderTooltip}\n        trigger={['click']}\n      >\n        <Badge className=\"fas fa-question-circle ml-2\"></Badge>\n      </OverlayTrigger>\n    );\n  }\n\n  if (props.options) {\n    input = (\n      <Typeahead\n        onChange={props.onChange}\n        onInputChange={props.onInputChange}\n        allowNew={true}\n        labelKey=\"name\"\n        options={props.options}\n        value={props.value}\n      />\n    );\n  } else {\n    input = (\n      <Form.Control\n        type=\"plaintext\"\n        value={props.value}\n        disabled={props.disabled}\n        className=\"dbd-input-field\"\n        onChange={props.onChange}\n      />\n    );\n  }\n  return (\n    <Form.Group>\n      <InputWrapper>\n        <Form.Label className=\"field-label-text\">{props.label}</Form.Label>\n        {tooltip}\n        <InputValueWrapper>{input}</InputValueWrapper>\n      </InputWrapper>\n    </Form.Group>\n  );\n}\n","import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\ntype MyProps = { show: any; onHide: any; title: string; text: string };\n\nexport default function SuccessModal(props: MyProps) {\n  return (\n    <Modal\n      closeVariant=\"white\"\n      show={props.show}\n      size=\"lg\"\n      onHide={props.onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton closeVariant=\"white\">\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>{props.text}</h4>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\ntype MyProps = {\n  show: any;\n  onHide: any;\n  title?: string;\n  text: string;\n  link?: string;\n};\n\nexport default function ErrorModal(props: MyProps) {\n  const link =\n    props.link?.length !== undefined && props.link.length > 0 ? (\n      <p>\n        More information available at:{' '}\n        <a href={props.link} target=\"_blank\">\n          this help page!\n        </a>\n      </p>\n    ) : null;\n  return (\n    <Modal\n      closeVariant=\"white\"\n      show={props.show}\n      size=\"lg\"\n      onHide={props.onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton closeVariant=\"white\">\n        <Modal.Title id=\"contained-modal-title-vcenter\">Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>{props?.title}</h4>\n        <p>{props.text}</p>\n        {link}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport api from 'utils/api/api';\nimport { ReactNode } from 'react-bootstrap/node_modules/@types/react';\n\ntype MyProps = { author: string; show: boolean; onHide: any; onShowPacks: any };\ntype MyState = { authorData: any };\n\nexport default class AuthorModal extends Component<MyProps, MyState> {\n  constructor(params: MyProps) {\n    super(params);\n    this.state = { authorData: { links: [] } };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.author !== prevProps.author) {\n      try {\n        const author = await api.getAuthor(this.props.author);\n        this.setState({ authorData: author });\n      } catch (err) {\n        this.setState({\n          authorData: undefined,\n        });\n      }\n    }\n  }\n\n  render() {\n    const viewPacksButton = (\n      <Button variant=\"secondary\" onClick={this.props.onShowPacks}>\n        View Packs\n      </Button>\n    );\n\n    let body = (\n      <Modal.Body>\n        <h4>No profile set!</h4> {viewPacksButton}\n      </Modal.Body>\n    );\n\n    if (this.state.authorData) {\n      let links: ReactNode = undefined;\n      if (\n        this.state.authorData.links &&\n        this.state.authorData.links.length > 0\n      ) {\n        const linkList = this.state.authorData.links.map((linkData, index) => {\n          return (\n            <ListGroup.Item key={`authormodal-link-${index}`}>\n              <a href={linkData.link} target=\"_blank\">\n                {linkData.label}\n              </a>\n            </ListGroup.Item>\n          );\n        });\n\n        links = (\n          <div>\n            <h4 className=\"mt-4\">Links</h4>{' '}\n            <ListGroup className=\"shadow\">{linkList}</ListGroup>\n          </div>\n        );\n      }\n\n      let donateButton: ReactNode = undefined;\n      if (this.state.authorData.donateLink) {\n        donateButton = (\n          <Button\n            variant=\"secondary\"\n            href={this.state.authorData.donateLink}\n            target=\"_blank\"\n          >\n            Donate\n          </Button>\n        );\n      }\n\n      let footer: ReactNode = undefined;\n\n      if (donateButton) {\n        footer = (\n          <Row className=\"mt-4\">\n            <Col>{viewPacksButton}</Col>\n            <Col className=\"d-flex justify-content-end\">{donateButton}</Col>\n          </Row>\n        );\n      } else {\n        footer = <div className=\"mt-4\">{viewPacksButton}</div>;\n      }\n\n      body = (\n        <Modal.Body>\n          <p>{this.state.authorData.blurb}</p>\n          {links}\n          {footer}\n        </Modal.Body>\n      );\n    }\n\n    return (\n      <Modal\n        closeVariant=\"white\"\n        show={this.props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        onHide={this.props.onHide}\n        centered\n      >\n        <Modal.Header closeButton closeVariant=\"white\">\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {this.props.author}\n          </Modal.Title>\n        </Modal.Header>\n        {body}\n      </Modal>\n    );\n  }\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Toast from 'react-bootstrap/Toast';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { useDebouncedCallback } from 'use-debounce';\nimport log from '../../utils/log';\nimport styled from 'styled-components';\nimport AppContext from '../UserProvider';\n\ntype MyProps = {\n  onSortKeySet: Function;\n  initialSortKey: string;\n  onSearchFilter: Function;\n  initialFilterText: string;\n  onPageSizeSet: Function;\n  initialPageSize: number;\n  initialShowFavorites?: boolean;\n  onShowFavoritesSet: Function;\n  refresh: Function;\n};\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: 6px;\n  flex-wrap: nowrap;\n`;\n\nconst DropdownButtonWrapper = styled.div`\n  margin-right: 3px;\n`;\n\nconst ShowFavoritesWrapper = styled.div`\n  padding-left: 8px;\n  padding-right: 8px;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst RefreshWrapper = ShowFavoritesWrapper;\n\nconst ShowFavoritesStarWrapper = styled.span`\n  color: #d4af37;\n  margin-right: 4px;\n\n  &:hover {\n    color: yellow;\n    cursor: pointer;\n  }\n`;\n\nconst RefreshIconWrapper = ShowFavoritesStarWrapper;\n\nexport default function PackDisplayHeader(props: MyProps) {\n  const appContext = useContext(AppContext);\n  const [searchText, setSearchText] = useState(props.initialFilterText);\n  const [sortKeyText, setSortKeyText] = useState(props.initialSortKey);\n  const [pageSizeText, setPageSizeText] = useState(props.initialPageSize);\n  const [showFavorites, setShowFavorites] = useState(\n    props.initialShowFavorites ?? false,\n  );\n\n  // The idea here is to only actually run the search after the user is finished typing\n  const debounceSearchCallback = useDebouncedCallback(text => {\n    log.info(`Running search: ${text}`);\n    props.onSearchFilter(text);\n  }, 500);\n\n  const setSortKey = (text: string) => {\n    setSortKeyText(text);\n    props.onSortKeySet(text);\n  };\n\n  const setSearchFilter = (text: string) => {\n    if (text.startsWith('dbdicontoolbox://')) {\n      text = text.split('dbdicontoolbox://')[1];\n    }\n    setSearchText(text);\n    debounceSearchCallback(text);\n  };\n\n  const setPageSize = (size: number) => {\n    setPageSizeText(size);\n    props.onPageSizeSet(size);\n  };\n\n  useEffect(\n    () => setSearchText(props.initialFilterText),\n    [props.initialFilterText],\n  );\n\n  const favoriteStarClass = showFavorites\n    ? 'fas fa-star fa-lg'\n    : 'far fa-star fa-lg';\n\n  return (\n    <Container>\n      <DropdownButtonWrapper>\n        <DropdownButton\n          variant=\"secondary\"\n          id=\"sortDropDown\"\n          title={\n            <span>\n              <i className=\"fas fa-sort-amount-down\"></i> Sort ({sortKeyText})\n            </span>\n          }\n        >\n          {['Name', 'Downloads', 'Date', 'Author', 'Chapter'].map(\n            (sortKey: string) => {\n              return (\n                <NavDropdown.Item\n                  key={`sortkey-${sortKey}`}\n                  className=\"field-label-text\"\n                  href=\"#\"\n                  onClick={e => {\n                    e.preventDefault();\n                    setSortKey(sortKey);\n                  }}\n                >\n                  {sortKey}\n                </NavDropdown.Item>\n              );\n            },\n          )}\n        </DropdownButton>\n      </DropdownButtonWrapper>\n      <DropdownButtonWrapper>\n        <DropdownButton\n          variant=\"secondary\"\n          id=\"viewModeDropDown\"\n          title={`Packs Per Page (${pageSizeText})`}\n        >\n          {[6, 12, 18, 24, 48].map((pageSize: number) => {\n            return (\n              <NavDropdown.Item\n                key={`pgsize-${pageSize}`}\n                className=\"field-label-text\"\n                href=\"#\"\n                onClick={(e: any) => {\n                  e.preventDefault();\n                  setPageSize(pageSize);\n                }}\n              >\n                {pageSize}\n              </NavDropdown.Item>\n            );\n          })}\n        </DropdownButton>\n      </DropdownButtonWrapper>\n\n      {appContext.user && (\n        <ShowFavoritesWrapper>\n          <ShowFavoritesStarWrapper\n            onClick={() => {\n              const newShowFavorites = !showFavorites;\n              setShowFavorites(newShowFavorites);\n              props.onShowFavoritesSet(newShowFavorites);\n            }}\n          >\n            <i className={favoriteStarClass} />\n          </ShowFavoritesStarWrapper>\n          <h5>Show Favorites</h5>\n        </ShowFavoritesWrapper>\n      )}\n\n      <RefreshWrapper>\n        <RefreshIconWrapper\n          onClick={() => {\n            props.refresh();\n          }}\n        >\n          <i className=\"fas fa-sync\" />\n        </RefreshIconWrapper>\n        <h5>Refresh</h5>\n      </RefreshWrapper>\n\n      <Form.Control\n        style={{\n          maxWidth: '400px',\n          minWidth: '100px',\n          marginLeft: 'auto',\n        }}\n        type=\"text\"\n        placeholder=\"Search/Link\"\n        className=\"mr-sm-2 dbd-input-field\"\n        onChange={e => {\n          setSearchFilter(e.target.value);\n        }}\n        value={searchText}\n      />\n    </Container>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport ReactDOM from 'react-dom';\n\ntype MyProps = {\n  onFiltersSet: Function;\n  initialFilters: string[];\n};\n\nconst FilterCheckboxContainer = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-content: center;\n  padding-bottom: 0px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 6px;\n`;\n\nconst FilterCheckBox = styled.div`\n  margin-right: 20px;\n  margin-bottom: 0px;\n`;\n\nenum CheckboxState {\n  CHECKED,\n  UNCHECKED,\n  INDETERMINATE,\n}\n\nfunction fromStateGetChecked(state: CheckboxState) {\n  return state === CheckboxState.CHECKED;\n}\n\nfunction fromStateGetIndeterminate(state: CheckboxState) {\n  return state === CheckboxState.INDETERMINATE;\n}\n\nfunction nextCheckboxState(state: CheckboxState): CheckboxState {\n  switch (state) {\n    case CheckboxState.CHECKED:\n      return CheckboxState.INDETERMINATE;\n    case CheckboxState.UNCHECKED:\n      return CheckboxState.CHECKED;\n    default:\n      return CheckboxState.UNCHECKED;\n  }\n}\n\ninterface FilterCategory {\n  label: string;\n  field: string;\n  state: CheckboxState;\n  ref: React.RefObject<HTMLInputElement>;\n}\n\nexport default function PackDisplayFilter(props: MyProps) {\n  const [filters, setFilters] = useState([\n    {\n      label: 'Perks',\n      field: 'hasPerks',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n    {\n      label: 'Portraits',\n      field: 'hasPortraits',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n    {\n      label: 'Status Effects',\n      field: 'hasStatusEffects',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n    {\n      label: 'Powers',\n      field: 'hasPowers',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n    {\n      label: 'Offerings',\n      field: 'hasFavors',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n    {\n      label: 'Items',\n      field: 'hasItems',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n    {\n      label: 'Add-Ons',\n      field: 'hasItemAddOns',\n      state: CheckboxState.UNCHECKED,\n      ref: React.createRef<HTMLInputElement>(),\n    },\n  ]);\n\n  const setFiltersAndNotify = (newFilters: Array<FilterCategory>) => {\n    setFilters(newFilters);\n    const displayFilters: Array<string> = [];\n\n    newFilters.forEach(filter => {\n      if (filter.state !== CheckboxState.UNCHECKED) {\n        displayFilters.push(\n          filter.state === CheckboxState.CHECKED\n            ? filter.field\n            : `no${filter.field}`,\n        );\n      }\n    });\n\n    console.log(displayFilters);\n\n    props.onFiltersSet(displayFilters);\n  };\n\n  const setFilterFieldState = (field: string, state: CheckboxState) => {\n    const targetFilterIndex = filters.findIndex(\n      filter => filter.field === field,\n    );\n\n    if (targetFilterIndex >= 0) {\n      const targetFilter = filters[targetFilterIndex];\n      const newFilter: FilterCategory = { ...targetFilter, state };\n      const newFilters = [...filters];\n      newFilters.splice(targetFilterIndex, 1, newFilter);\n      setFiltersAndNotify(newFilters);\n    }\n  };\n\n  // useEffect(() => setFilters(props.initialFilters), [props.initiialFilters]);\n\n  const checkBoxes = filters.map((category: FilterCategory, index) => {\n    return (\n      <FilterCheckBox>\n        <Form.Group className=\"mb-0\">\n          <input\n            type=\"checkbox\"\n            className=\"mr-2\"\n            checked={fromStateGetChecked(category.state)}\n            ref={category.ref}\n            onChange={() => {\n              const newState = nextCheckboxState(category.state);\n              setFilterFieldState(category.field, newState);\n            }}\n          />\n          <label>{category.label}</label>\n        </Form.Group>\n      </FilterCheckBox>\n    );\n  });\n\n  useEffect(() => {\n    filters.forEach(filter => {\n      if (filter.ref.current) {\n        const node: any = ReactDOM.findDOMNode(filter.ref.current);\n        node.indeterminate = fromStateGetIndeterminate(filter.state);\n      }\n    });\n  }, [filters]);\n\n  return (\n    <Container>\n      <FilterCheckboxContainer>\n        <h5 style={{ marginRight: 10 }}>Filters: </h5>\n        {checkBoxes}\n      </FilterCheckboxContainer>\n      <FilterCheckboxContainer>\n        <h5 style={{ marginRight: 10 }}>Shortcuts: </h5>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          className=\"mr-1\"\n          onClick={() => {\n            const newFilters = filters.map(field => {\n              const newField = { ...field };\n              if (newField.field === 'hasPerks') {\n                newField.state = CheckboxState.INDETERMINATE;\n              } else {\n                newField.state = CheckboxState.UNCHECKED;\n              }\n              return newField;\n            });\n            setFiltersAndNotify(newFilters);\n          }}\n        >\n          Portraits Only\n        </Button>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          className=\"mr-1\"\n          onClick={() => {\n            const newFilters = filters.map(field => {\n              const newField = { ...field };\n              if (newField.field === 'hasPortraits') {\n                newField.state = CheckboxState.INDETERMINATE;\n              } else {\n                newField.state = CheckboxState.UNCHECKED;\n              }\n              return newField;\n            });\n            setFiltersAndNotify(newFilters);\n          }}\n        >\n          No Portraits\n        </Button>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          className=\"mr-5\"\n          onClick={() => {\n            const newFilters = filters.map(field => {\n              const newField = { ...field, state: CheckboxState.CHECKED };\n              return newField;\n            });\n            setFiltersAndNotify(newFilters);\n          }}\n        >\n          Pack With Everything\n        </Button>\n        <Button\n          variant=\"warning\"\n          size=\"sm\"\n          onClick={() => {\n            const newFilters = filters.map(field => {\n              const newField = { ...field, state: CheckboxState.UNCHECKED };\n              return newField;\n            });\n            setFiltersAndNotify(newFilters);\n          }}\n        >\n          Reset Filters\n        </Button>\n      </FilterCheckboxContainer>\n    </Container>\n  );\n}\n","import React, { Component, useState } from 'react';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\ntype MyProps = {\n  label: string;\n  has: boolean;\n};\ntype MyState = {};\n\nexport default function HasItem(props: MyProps) {\n  return (\n    <span className=\"mb-2\">\n      <b>{props.label}</b>:{'  '}\n      {props.has ? (\n        <i className=\"has-item-check fas fa-check ml-2\" />\n      ) : (\n        <i className=\"no-item-check  fas fa-times ml-2\" />\n      )}\n    </span>\n  );\n}\n","import React, { Component, useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport HasItem from './HasItem';\n\ntype MyProps = {\n  portraits: boolean;\n  powers: boolean;\n  items: boolean;\n  statusEffects: boolean;\n  offerings: boolean;\n  addons: boolean;\n  perks: boolean;\n};\ntype MyState = {};\n\nexport default function PerkPackHas(props: MyProps) {\n  return (\n    <div>\n      <Row className=\"justify-content-center no-gutters\">\n        <Col className=\"col-md\">\n          <HasItem label=\"Perks\" has={props.perks} />\n        </Col>\n        <Col className=\"col-md\">\n          <HasItem label=\"Portraits\" has={props.portraits} />\n        </Col>\n        <Col className=\"col-md\">\n          <HasItem label=\"Powers\" has={props.powers} />\n        </Col>\n        <Col className=\"col-md\">\n          <HasItem label=\"Items\" has={props.items} />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center no-gutters\">\n        <Col className=\"col-md\">\n          <HasItem label=\"Status\" has={props.statusEffects} />\n        </Col>\n        <Col className=\"col-md\">\n          <HasItem label=\"Offerings\" has={props.offerings} />\n        </Col>\n        <Col className=\"col-md\">\n          <HasItem label=\"Add-Ons\" has={props.addons} />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","const addons: { [key: string]: string } = {\n  'customization/missing.png': 'undefined / ',\n  'itemaddons/cannibal/iconaddon_awardwinningchili.png':\n    'Killer / Leatherface / Award-Winning Chili',\n  'itemaddons/cannibal/iconaddon_chili.png': 'Killer / Leatherface / Chili',\n  'itemaddons/cannibal/iconaddon_knifescratches.png':\n    'Killer / Leatherface / Knife Scratches',\n  'itemaddons/cannibal/iconaddon_thebeastsmark.png':\n    \"Killer / Leatherface / The Beast's Marks\",\n  'itemaddons/cannibal/iconaddon_thegrease.png':\n    'Killer / Leatherface / The Grease',\n  'itemaddons/dlc2/iconaddon_blondehair.png': 'Killer / Shape / Blond Hair',\n  'itemaddons/dlc2/iconaddon_boyfriendsmemo.png':\n    \"Killer / Shape / Boyfriend's Memo\",\n  'itemaddons/dlc2/iconaddon_deadrabbit.png': 'Killer / Shape / Dead Rabbit',\n  'itemaddons/dlc2/iconaddon_glassfragment.png':\n    'Killer / Shape / Glass Fragment',\n  'itemaddons/dlc2/iconaddon_hairbow.png': 'Killer / Shape / Hair Bow',\n  'itemaddons/dlc2/iconaddon_hairbrush.png': 'Killer / Shape / Hair Brush',\n  'itemaddons/dlc2/iconaddon_jewelry.png': 'Killer / Shape / Jewelry',\n  'itemaddons/dlc2/iconaddon_jewelrybox.png': 'Killer / Shape / Jewelry Box',\n  'itemaddons/dlc2/iconaddon_jmyersmemorial.png':\n    'Killer / Shape / J.Myers Memorial',\n  'itemaddons/dlc2/iconaddon_judithsjournal.png':\n    \"Killer / Shape / Judith's Journal\",\n  'itemaddons/dlc2/iconaddon_judithstombstone.png':\n    \"Killer / Shape / Judith's Tombstone\",\n  'itemaddons/dlc2/iconaddon_lockofhair.png': 'Killer / Shape / Lock of Hair',\n  'itemaddons/dlc2/iconaddon_memorialflower.png':\n    'Killer / Shape / Memorial Flower',\n  'itemaddons/dlc2/iconaddon_mirrorshard.png': 'Killer / Shape / Mirror Shard',\n  'itemaddons/dlc2/iconaddon_reflectivefragment.png':\n    'Killer / Shape / Reflective Fragment',\n  'itemaddons/dlc2/iconaddon_scratchedmirror.png':\n    'Killer / Shape / Scratched Mirror',\n  'itemaddons/dlc2/iconaddon_tackyearrings.png':\n    'Killer / Shape / Tacky Earrings',\n  'itemaddons/dlc2/iconaddon_tombstonepiece.png':\n    'Killer / Shape / Tombstone Piece',\n  'itemaddons/dlc2/iconaddon_tuftofhair.png':\n    'Killer / Shape / Fragrant Tuft of Hair',\n  'itemaddons/dlc2/iconaddon_vanitymirror.png':\n    'Killer / Shape / Vanity Mirror',\n  'itemaddons/dlc3/iconaddon_bloodiedmud.png': 'Killer / Hag / Bloodied Mud',\n  'itemaddons/dlc3/iconaddon_bloodiedwater.png':\n    'Killer / Hag / Bloodied Water',\n  'itemaddons/dlc3/iconaddon_bogwater.png': 'Killer / Hag / Bog Water',\n  'itemaddons/dlc3/iconaddon_crackedturtleegg.png':\n    'Killer / Hag / Cracked Turtle Egg',\n  'itemaddons/dlc3/iconaddon_cypressnecklet.png':\n    'Killer / Hag / Cypress Necklet',\n  'itemaddons/dlc3/iconaddon_deadflymud.png': 'Killer / Hag / Dead Fly Mud',\n  'itemaddons/dlc3/iconaddon_disfiguredear.png':\n    'Killer / Hag / Disfigured Ear',\n  'itemaddons/dlc3/iconaddon_dragonflywings.png':\n    'Killer / Hag / Dragonfly Wings',\n  'itemaddons/dlc3/iconaddon_driedcicada.png': 'Killer / Hag / Dried Cicada',\n  'itemaddons/dlc3/iconaddon_granmasheart.png': \"Killer / Hag / Granma's Heart\",\n  'itemaddons/dlc3/iconaddon_halfeggshell.png': 'Killer / Hag / Half Eggshell',\n  'itemaddons/dlc3/iconaddon_mintrag.png': 'Killer / Hag / Mint Rag',\n  'itemaddons/dlc3/iconaddon_powderedeggshell.png':\n    'Killer / Hag / Powdered Eggshell',\n  'itemaddons/dlc3/iconaddon_pussywillowcatkins.png':\n    'Killer / Hag / Pussy Willow Catkins',\n  'itemaddons/dlc3/iconaddon_ropenecklet.png': 'Killer / Hag / Rope Necklet',\n  'itemaddons/dlc3/iconaddon_rustyshackles.png':\n    'Killer / Hag / Rusty Shackles',\n  'itemaddons/dlc3/iconaddon_scarredhand.png': 'Killer / Hag / Scarred Hand',\n  'itemaddons/dlc3/iconaddon_swamporchidnecklet.png':\n    'Killer / Hag / Swamp Orchid Necklet',\n  'itemaddons/dlc3/iconaddon_waterloggedshoe.png':\n    'Killer / Hag / Waterlogged Shoe',\n  'itemaddons/dlc3/iconaddon_willowwreath.png': 'Killer / Hag / Willow Wreath',\n  'itemaddons/dlc4/iconaddon_calmcartersnotes.png': `Killer / Doctor / \"Calm\" - Carter's Notes`,\n  'itemaddons/dlc4/iconaddon_calmclassi.png':\n    'Killer / Doctor / \"Calm\" - Class I',\n  'itemaddons/dlc4/iconaddon_calmclassii.png':\n    'Killer / Doctor / \"Calm\" - Class II',\n  'itemaddons/dlc4/iconaddon_diciplinecartersnotes.png': `Killer / Doctor / \"Discipline\" - Carter's Notes`,\n  'itemaddons/dlc4/iconaddon_diciplineclassii.png':\n    'Killer / Doctor / \"Discipline\" - Class II',\n  'itemaddons/dlc4/iconaddon_diciplineclassiii.png':\n    'Killer / Doctor / \"Discipline\" - Class III',\n  'itemaddons/dlc4/iconaddon_highstimuluselectrode.png':\n    'Killer / Doctor / High Stimulus Electrode',\n  'itemaddons/dlc4/iconaddon_interviewtape.png':\n    'Killer / Doctor / Interview Tape',\n  'itemaddons/dlc4/iconaddon_iridescentking.png':\n    'Killer / Doctor / Iridescent King',\n  'itemaddons/dlc4/iconaddon_iridescentqueen.png':\n    'Killer / Doctor / Iridescent Queen',\n  'itemaddons/dlc4/iconaddon_mapleknight.png': 'Killer / Doctor / Maple Knight',\n  'itemaddons/dlc4/iconaddon_moldyelectrode.png':\n    'Killer / Doctor / Moldy Electrode',\n  'itemaddons/dlc4/iconaddon_ordercartersnotes.png': `Killer / Doctor / \"Order\" - Carter's Notes`,\n  'itemaddons/dlc4/iconaddon_orderclassi.png':\n    'Killer / Doctor / \"Order\" - Class I',\n  'itemaddons/dlc4/iconaddon_orderclassii.png':\n    'Killer / Doctor / \"Order\" - Class II',\n  'itemaddons/dlc4/iconaddon_polishedelectrode.png':\n    'Killer / Doctor / Polished Electrode',\n  'itemaddons/dlc4/iconaddon_restraintcartersnotes.png': `Killer / Doctor / \"Restraint\" - Carter's Notes`,\n  'itemaddons/dlc4/iconaddon_restraintclassii.png':\n    'Killer / Doctor / \"Restraint\" - Class II',\n  'itemaddons/dlc4/iconaddon_restraintclassiii.png':\n    'Killer / Doctor / \"Restraint\" - Class III',\n  'itemaddons/dlc4/iconaddon_scrappedtape.png':\n    'Killer / Doctor / Scrapped Tape',\n  'itemaddons/dlc5/iconaddon_amanitatoxin.png':\n    'Killer / Huntress / Amanita Toxin',\n  'itemaddons/dlc5/iconaddon_bandagedhaft.png':\n    'Killer / Huntress / Bandaged Haft',\n  'itemaddons/dlc5/iconaddon_begrimedhead.png':\n    'Killer / Huntress / Begrimed Head',\n  'itemaddons/dlc5/iconaddon_berustoxin.png': 'Killer / Huntress / Berus Toxin',\n  'itemaddons/dlc5/iconaddon_coarsestone.png':\n    'Killer / Huntress / Coarse Stone',\n  'itemaddons/dlc5/iconaddon_deerskingloves.png':\n    'Killer / Huntress / Deerskin Gloves',\n  'itemaddons/dlc5/iconaddon_finestone.png': 'Killer / Huntress / Fine Stone',\n  'itemaddons/dlc5/iconaddon_flowerbabushka.png':\n    'Killer / Huntress / Flower Babushka',\n  'itemaddons/dlc5/iconaddon_glowingconcoction.png':\n    'Killer / Huntress / Glowing Concoction',\n  'itemaddons/dlc5/iconaddon_infantrybelt.png':\n    'Killer / Huntress / Infantry Belt',\n  'itemaddons/dlc5/iconaddon_iridescenthead.png':\n    'Killer / Huntress / Iridescent Head',\n  'itemaddons/dlc5/iconaddon_leatherloop.png':\n    'Killer / Huntress / Leather Loop',\n  'itemaddons/dlc5/iconaddon_mannagrassbraid.png':\n    'Killer / Huntress / Manna Grass Braid',\n  'itemaddons/dlc5/iconaddon_oakhaft.png': 'Killer / Huntress / Oak Haft',\n  'itemaddons/dlc5/iconaddon_pungentfiale.png':\n    'Killer / Huntress / Pungent Fiale',\n  'itemaddons/dlc5/iconaddon_rustyhead.png': 'Killer / Huntress / Rusty Head',\n  'itemaddons/dlc5/iconaddon_shinypin.png': 'Killer / Huntress / Shiny Pin',\n  'itemaddons/dlc5/iconaddon_venomousconcoction.png':\n    'Killer / Huntress / Venomous Concoction',\n  'itemaddons/dlc5/iconaddon_yewseedbrew.png':\n    'Killer / Huntress / Yew Seed Brew',\n  'itemaddons/dlc5/iconaddon_yewseedconcoction.png':\n    'Killer / Huntress / Yew Seed Concoction',\n  'itemaddons/england/iconaddon_blackbox.png':\n    'Killer / Freddy Krueger / Black Box',\n  'itemaddons/england/iconaddon_bluedress.png':\n    'Killer / Freddy Krueger / Blue Dress',\n  'itemaddons/england/iconaddon_catblock.png':\n    'Killer / Freddy Krueger / Cat Block',\n  'itemaddons/england/iconaddon_classphoto.png':\n    'Killer / Freddy Krueger / Class Photo',\n  'itemaddons/england/iconaddon_gardenrake.png':\n    'Killer / Freddy Krueger / Garden Rake',\n  'itemaddons/england/iconaddon_greendress.png':\n    'Killer / Freddy Krueger / Green Dress',\n  'itemaddons/england/iconaddon_jumprope.png':\n    'Killer / Freddy Krueger / Jump Rope',\n  'itemaddons/england/iconaddon_kidsdrawing.png':\n    \"Killer / Freddy Krueger / Kid's Drawing\",\n  'itemaddons/england/iconaddon_nancysmasterpiece.png':\n    \"Killer / Freddy Krueger / Nancy's Masterpiece\",\n  'itemaddons/england/iconaddon_nancyssketch.png':\n    \"Killer / Freddy Krueger / Nancy's Sketch\",\n  'itemaddons/england/iconaddon_outdoorrope.png':\n    'Killer / Freddy Krueger / Outdoor Rope',\n  'itemaddons/england/iconaddon_paintthinner.png':\n    'Killer / Freddy Krueger / Paint Thinner',\n  'itemaddons/england/iconaddon_pillbottle.png':\n    'Killer / Freddy Krueger / Pill Bottle',\n  'itemaddons/england/iconaddon_prototypeclaw.png':\n    'Killer / Freddy Krueger / Prototype Claws',\n  'itemaddons/england/iconaddon_redpaintbrush.png':\n    'Killer / Freddy Krueger / Red Paint Brush',\n  'itemaddons/england/iconaddon_sheepblock.png':\n    'Killer / Freddy Krueger / Sheep Block',\n  'itemaddons/england/iconaddon_swingchains.png':\n    'Killer / Freddy Krueger / Swing Chains',\n  'itemaddons/england/iconaddon_unicornblock.png':\n    'Killer / Freddy Krueger / Unicorn Block',\n  'itemaddons/england/iconaddon_woolshirt.png':\n    'Killer / Freddy Krueger / Wool Shirt',\n  'itemaddons/england/iconaddon_zblock.png':\n    'Killer / Freddy Krueger / \"Z\" Block',\n  'itemaddons/finland/iconaddon_amandasletter.png':\n    \"Killer / Pig / Amanda's Letter\",\n  'itemaddons/finland/iconaddon_amandassecret.png':\n    \"Killer / Pig / Amanda's Secret\",\n  'itemaddons/finland/iconaddon_bagofgears.png': 'Killer / Pig / Bag of Gears',\n  'itemaddons/finland/iconaddon_combatstraps.png':\n    'Killer / Pig / Combat Straps',\n  'itemaddons/finland/iconaddon_crateofgears.png':\n    'Killer / Pig / Crate of Gears',\n  'itemaddons/finland/iconaddon_facemask.png': 'Killer / Pig / Face Mask',\n  'itemaddons/finland/iconaddon_interlockingrazor.png':\n    'Killer / Pig / Interlocking Razor',\n  'itemaddons/finland/iconaddon_jigsawsannotatedplan.png':\n    \"Killer / Pig / Jigsaw's Annotated Plan\",\n  'itemaddons/finland/iconaddon_jigsawssketch.png':\n    \"Killer / Pig / Jigsaw's Sketch\",\n  'itemaddons/finland/iconaddon_johnsmedicalfile.png':\n    \"Killer / Pig / John's Medical File\",\n  'itemaddons/finland/iconaddon_lastwill.png': 'Killer / Pig / Last Will',\n  'itemaddons/finland/iconaddon_razerwire.png': 'Killer / Pig / Razor Wires',\n  'itemaddons/finland/iconaddon_rulessetn2.png':\n    'Killer / Pig / Rules Set No.2',\n  'itemaddons/finland/iconaddon_rustyattachments.png':\n    'Killer / Pig / Rusty Attachments',\n  'itemaddons/finland/iconaddon_shatteredsyringe.png':\n    'Killer / Pig / Shattered Syringe',\n  'itemaddons/finland/iconaddon_slowreleasetoxin.png':\n    'Killer / Pig / Slow-Release Toxin',\n  'itemaddons/finland/iconaddon_tamperedtimer.png':\n    'Killer / Pig / Tampered Timer',\n  'itemaddons/finland/iconaddon_utilityblades.png':\n    'Killer / Pig / Utility Blades',\n  'itemaddons/finland/iconaddon_videotape.png': 'Killer / Pig / Video Tape',\n  'itemaddons/finland/iconaddon_workshopgrease.png':\n    'Killer / Pig / Workshop Grease',\n  'itemaddons/guam/iconaddon_ether5.png': 'Killer / Clown / Ether 5 vol%',\n  'itemaddons/guam/iconaddon_fingerlessparadegloves.png':\n    'Killer / Clown / Fingerless Parade Gloves',\n  'itemaddons/guam/iconaddon_kerosenecan.png': 'Killer / Clown / Kerosene Can',\n  'itemaddons/guam/iconaddon_redheadspinkyfinger.png':\n    \"Killer / Clown / Redhead's Pinky Finger\",\n  'itemaddons/guam/iconaddon_robinfeather.png':\n    'Killer / Clown / Robin Feather',\n  'itemaddons/guam/iconaddon_smellyinnersoles.png':\n    'Killer / Clown / Smelly Inner Soles',\n  'itemaddons/guam/iconaddon_solventjug.png': 'Killer / Clown / Solvent Jug',\n  'itemaddons/guam/iconaddon_starlingfeather.png':\n    'Killer / Clown / Starling Feather',\n  'itemaddons/guam/iconaddon_stickysodabottle.png':\n    'Killer / Clown / Sticky Soda Bottle',\n  'itemaddons/guam/iconaddon_thickcorkstopper.png':\n    'Killer / Clown / Thick Cork Stopper',\n  'itemaddons/haiti/iconaddon_bloodyhairbroochi.png':\n    'Killer / Spirit / Bloody Hair Brooch',\n  'itemaddons/haiti/iconaddon_dirtyuwabaki.png':\n    'Killer / Spirit / Dirty Uwabaki',\n  'itemaddons/haiti/iconaddon_driedcherryblossom.png':\n    'Killer / Spirit / Dried Cherry Blossom',\n  'itemaddons/haiti/iconaddon_fathersglasses.png':\n    \"Killer / Spirit / Father's Glasses\",\n  'itemaddons/haiti/iconaddon_giftedbamboocomb.png':\n    'Killer / Spirit / Gifted Bamboo Comb',\n  'itemaddons/haiti/iconaddon_juniperbonzai.png':\n    'Killer / Spirit / Juniper Bonsai',\n  'itemaddons/haiti/iconaddon_kaiuntalisman.png':\n    'Killer / Spirit / Kaiun Talisman',\n  'itemaddons/haiti/iconaddon_katanatsuba.png':\n    'Killer / Spirit / Katana Tsuba',\n  'itemaddons/haiti/iconaddon_katsumoritalisman.png':\n    'Killer / Spirit / Katsumori Talisman',\n  'itemaddons/haiti/iconaddon_motherdaughterring.png':\n    'Killer / Spirit / Mother-Daughter Ring',\n  'itemaddons/haiti/iconaddon_muddysportcap.png':\n    'Killer / Spirit / Muddy Sports Day Cap',\n  'itemaddons/haiti/iconaddon_origamicrane.png':\n    'Killer / Spirit / Origami Crane',\n  'itemaddons/haiti/iconaddon_prayersbeads.png':\n    'Killer / Spirit / Prayer Beads Bracelet',\n  'itemaddons/haiti/iconaddon_rinsbrokenwatch.png':\n    \"Killer / Spirit / Rin's Broken Watch\",\n  'itemaddons/haiti/iconaddon_rustyflute.png': 'Killer / Spirit / Rusty Flute',\n  'itemaddons/haiti/iconaddon_shiawaseamulet.png':\n    'Killer / Spirit / Shiawase Amulet',\n  'itemaddons/haiti/iconaddon_wakizashisaya.png':\n    'Killer / Spirit / Wakizashi Saya',\n  'itemaddons/haiti/iconaddon_whitehairribbon.png':\n    'Killer / Spirit / White Hair Ribbon',\n  'itemaddons/haiti/iconaddon_yakuyokeamulet.png':\n    'Killer / Spirit / Yakuyoke Amulet',\n  'itemaddons/haiti/iconaddon_zori.png': 'Killer / Spirit / Zōri',\n  'itemaddons/iconaddon_abdominaldressing.png': 'MedKit / Abdominal Dressing',\n  'itemaddons/iconaddon_anxiousgasp.png': 'Killer / Nurse / Anxious Gasp',\n  'itemaddons/iconaddon_ataxicrespiration.png':\n    'Killer / Nurse / Ataxic Respiration',\n  'itemaddons/iconaddon_badmankeepsake.png':\n    'Killer / Nurse / Bad Man Keepsake',\n  'itemaddons/iconaddon_badmanslastbreath.png': `Killer / Nurse / \"Bad Man's\" Last Breath`,\n  'itemaddons/iconaddon_bandages.png': 'MedKit / Bandages',\n  'itemaddons/iconaddon_battery.png': 'Flashlight / Battery',\n  'itemaddons/iconaddon_beadcrystal.png': 'Map / Crystal Bead',\n  'itemaddons/iconaddon_beadglass.png': 'Map / Glass Bead',\n  'itemaddons/iconaddon_bloodamber.png': 'Key / Blood Amber',\n  'itemaddons/iconaddon_bloodkrafabai.png':\n    'Killer / Wraith / \"All Seeing\" - Blood',\n  'itemaddons/iconaddon_bloodshadowdance.png':\n    'Killer / Wraith / \"Shadow Dance\" - Blood',\n  'itemaddons/iconaddon_bloodswifthunt.png':\n    'Killer / Wraith / \"Swift Hunt\" - Blood',\n  'itemaddons/iconaddon_bloodwindstorm.png':\n    'Killer / Wraith / \"Windstorm\" - Blood',\n  'itemaddons/iconaddon_bloodycoil.png': 'Killer / Trapper / Bloody Coil',\n  'itemaddons/iconaddon_boneclapper.png': 'Killer / Wraith / Bone Clapper',\n  'itemaddons/iconaddon_brandnewpart.png': 'Toolbox / Brand New Part',\n  'itemaddons/iconaddon_butterflytape.png': 'MedKit / Butterfly Tape',\n  'itemaddons/iconaddon_campbellslastbreath.png':\n    \"Killer / Nurse / Campbell's Last Breath\",\n  'itemaddons/iconaddon_carburetortuningguide.png':\n    'Killer / Hillbilly / Carburetor Tuning Guide',\n  'itemaddons/iconaddon_catatonictreasure.png':\n    \"Killer / Nurse / Catatonic Boy's Treasure\",\n  'itemaddons/iconaddon_chainsawfile.png':\n    'Killer / Leatherface / Chainsaw File',\n  'itemaddons/iconaddon_chainsbloody.png':\n    'Killer / Leatherface / Begrimed Chain',\n  'itemaddons/iconaddon_chainsgrisly.png':\n    'Killer / Leatherface / Grisly Chain',\n  'itemaddons/iconaddon_chainsrusted.png': 'Killer / Hillbilly / Rusted Chain',\n  'itemaddons/iconaddon_cleanrag.png': 'Toolbox / Clean Rag',\n  'itemaddons/iconaddon_coilskit4.png': 'Killer / Trapper / 4-Coil Spring Kit',\n  'itemaddons/iconaddon_coilspring.png':\n    'Killer / Trapper / Strong Coil Spring',\n  'itemaddons/iconaddon_coxcombedclapper.png':\n    'Killer / Wraith / Coxcombed Clapper',\n  'itemaddons/iconaddon_cuttingwire.png': 'Toolbox / Cutting Wire',\n  'itemaddons/iconaddon_darkcincture.png': 'Killer / Nurse / Dark Cincture',\n  'itemaddons/iconaddon_deathengravings.png':\n    'Killer / Hillbilly / Death Engravings',\n  'itemaddons/iconaddon_depthgaugerake.png':\n    'Killer / Leatherface / Depth Gauge Rake',\n  'itemaddons/iconaddon_diamondstone.png':\n    'Killer / Trapper / Iridescent Stone',\n  'itemaddons/iconaddon_doomengravings.png':\n    'Killer / Hillbilly / Doom Engravings',\n  'itemaddons/iconaddon_dullbracelet.png': 'Killer / Nurse / Dull Bracelet',\n  'itemaddons/iconaddon_fasteningtools.png':\n    'Killer / Trapper / Fastening Tools',\n  'itemaddons/iconaddon_focuslens.png': 'Flashlight / Focus Lens',\n  'itemaddons/iconaddon_fragilewheeze.png': 'Killer / Nurse / Fragile Wheeze',\n  'itemaddons/iconaddon_gauseroll.png': 'MedKit / Gauze Roll',\n  'itemaddons/iconaddon_geldressings.png': 'MedKit / Gel Dressings',\n  'itemaddons/iconaddon_gloves.png': 'MedKit / Rubber Gloves',\n  'itemaddons/iconaddon_gripwrench.png': 'Toolbox / Grip Wrench',\n  'itemaddons/iconaddon_heavydutybattery.png':\n    'Flashlight / Heavy Duty Battery',\n  'itemaddons/iconaddon_heavypanting.png': 'Killer / Nurse / Heavy Panting',\n  'itemaddons/iconaddon_highendsapphirelens.png':\n    'Flashlight / High-end Sapphire lens',\n  'itemaddons/iconaddon_homemademuffler.png':\n    'Killer / Leatherface / Homemade Muffler',\n  'itemaddons/iconaddon_honingstone.png': 'Killer / Trapper / Honing Stone',\n  'itemaddons/iconaddon_instructions.png': 'Toolbox / Instructions',\n  'itemaddons/iconaddon_intensehalogen.png': 'Flashlight / Intense Halogen',\n  'itemaddons/iconaddon_jennerslastbreath.png':\n    \"Killer / Nurse / Jenner's Last Breath\",\n  'itemaddons/iconaddon_kavanaghslastbreath.png':\n    \"Killer / Nurse / Kavanagh's Last Breath\",\n  'itemaddons/iconaddon_leathergrip.png': 'Flashlight / Leather Grip',\n  'itemaddons/iconaddon_lightchassis.png': 'Killer / Hillbilly / Light Chassis',\n  'itemaddons/iconaddon_logwooddye.png': 'Killer / Trapper / Logwood Dye',\n  'itemaddons/iconaddon_longguidebar.png':\n    'Killer / Leatherface / Long Guide Bar',\n  'itemaddons/iconaddon_longlifebattery.png': 'Flashlight / Long Life Battery',\n  'itemaddons/iconaddon_mapaddendum.png': 'Map / Map Addendum',\n  'itemaddons/iconaddon_matchbox.png': 'Killer / Nurse / Matchbox',\n  'itemaddons/iconaddon_metalsaw.png': 'Toolbox / Hacksaw',\n  'itemaddons/iconaddon_metalspoon.png': 'Killer / Nurse / Metal Spoon',\n  'itemaddons/iconaddon_milkyglass.png': 'Key / Milky Glass',\n  'itemaddons/iconaddon_mudbaikrakaeug.png':\n    'Killer / Wraith / \"Blind Warrior\" - Mud',\n  'itemaddons/iconaddon_mudblink.png': 'Killer / Wraith / \"Blink\" - Mud',\n  'itemaddons/iconaddon_mudswifthunt.png':\n    'Killer / Wraith / \"Swift Hunt\" - Mud',\n  'itemaddons/iconaddon_mudwindstorm.png': 'Killer / Wraith / \"Windstorm\"- Mud',\n  'itemaddons/iconaddon_needandthread.png': 'MedKit / Needle & Thread',\n  'itemaddons/iconaddon_oddbulb.png': 'Flashlight / Odd Bulb',\n  'itemaddons/iconaddon_oilycoil.png': 'Killer / Trapper / Oily Coil',\n  'itemaddons/iconaddon_paddedjaws.png': 'Killer / Trapper / Padded Jaws',\n  'itemaddons/iconaddon_plaidflannel.png': 'Killer / Nurse / Plaid Flannel',\n  'itemaddons/iconaddon_pocketwatch.png': 'Killer / Nurse / Pocket Watch',\n  'itemaddons/iconaddon_powerbulb.png': 'Flashlight / Power Bulb',\n  'itemaddons/iconaddon_prayerbeads.png': 'Key / Prayer Beads',\n  'itemaddons/iconaddon_prayerrope.png': 'Key / Prayer Rope',\n  'itemaddons/iconaddon_primerbulb.png': 'Killer / Leatherface / Primer Bulb',\n  'itemaddons/iconaddon_protectivegloves.png': 'Toolbox / Protective Gloves',\n  'itemaddons/iconaddon_retardantjelly.png': 'Map / Retardant Jelly',\n  'itemaddons/iconaddon_ropeblack.png': 'Map / Black Silk Cord',\n  'itemaddons/iconaddon_ropered.png': 'Map / Red Twine',\n  'itemaddons/iconaddon_ropeyellow.png': 'Map / Yellow Wire',\n  'itemaddons/iconaddon_rubbergrip.png': 'Flashlight / Rubber Grip',\n  'itemaddons/iconaddon_rustedjaws.png': 'Killer / Trapper / Rusted Jaws',\n  'itemaddons/iconaddon_scissors.png': 'MedKit / Medical Scissors',\n  'itemaddons/iconaddon_scraps.png': 'Toolbox / Scraps',\n  'itemaddons/iconaddon_scratchedpearl.png': 'Key / Scratched Pearl',\n  'itemaddons/iconaddon_secondarycoil.png': 'Killer / Trapper / Secondary Coil',\n  'itemaddons/iconaddon_selfadherentwrap.png': 'MedKit / Self Adherent Wrap',\n  'itemaddons/iconaddon_serratedjaws.png': 'Killer / Trapper / Serrated Jaws',\n  'itemaddons/iconaddon_settingtools.png': 'Killer / Trapper / Setting Tools',\n  'itemaddons/iconaddon_shoplubricant.png':\n    'Killer / Hillbilly / Shop Lubricant',\n  'itemaddons/iconaddon_socketswivels.png': 'Toolbox / Socket Swivels',\n  'itemaddons/iconaddon_sootthebeast.png':\n    'Killer / Wraith / \"The Beast\" - Soot',\n  'itemaddons/iconaddon_soottheghost.png':\n    'Killer / Wraith / \"The Ghost\" - Soot',\n  'itemaddons/iconaddon_sootthehound.png':\n    'Killer / Wraith / \"The Hound\" - Soot',\n  'itemaddons/iconaddon_soottheserpent.png':\n    'Killer / Wraith / \"The Serpent\" - Soot',\n  'itemaddons/iconaddon_sparkplug.png': 'Killer / Hillbilly / Spark Plug',\n  'itemaddons/iconaddon_spasmodicbreath.png':\n    'Killer / Nurse / Spasmodic Breath',\n  'itemaddons/iconaddon_speedlimiter.png':\n    'Killer / Leatherface / Speed Limiter',\n  'itemaddons/iconaddon_spikedboots.png': 'Killer / Hillbilly / Spiked Boots',\n  'itemaddons/iconaddon_spiritallseeing.png':\n    'Killer / Wraith / \"All Seeing\" - Spirit',\n  'itemaddons/iconaddon_sponge.png': 'MedKit / Sponge',\n  'itemaddons/iconaddon_spoolofwire.png': 'Toolbox / Wire Spool',\n  'itemaddons/iconaddon_springclamp.png': 'Toolbox / Spring Clamp',\n  'itemaddons/iconaddon_stampodd.png': 'Map / Odd Stamp',\n  'itemaddons/iconaddon_stampunusual.png': 'Map / Unusual Stamp',\n  'itemaddons/iconaddon_stichedbag.png': 'Killer / Trapper / Stitched Bag',\n  'itemaddons/iconaddon_stypticagent.png': 'MedKit / Styptic Agent',\n  'itemaddons/iconaddon_surgicalsuture.png': 'MedKit / Surgical Suture',\n  'itemaddons/iconaddon_syringe.png': 'MedKit / Anti-Hemorrhagic Syringe',\n  'itemaddons/iconaddon_tapsetters.png': 'Killer / Trapper / Trap Setters',\n  'itemaddons/iconaddon_tarbottle.png': 'Killer / Trapper / Tar Bottle',\n  'itemaddons/iconaddon_thethompsonsmix.png':\n    \"Killer / Hillbilly / The Thompson's Mix\",\n  'itemaddons/iconaddon_thompsonsmoonshine.png':\n    \"Killer / Hillbilly / Thompson's Moonshine\",\n  'itemaddons/iconaddon_threadedfilament.png': 'Flashlight / Low Amp Filament',\n  'itemaddons/iconaddon_tiroptic.png': 'Flashlight / TIR Optic',\n  'itemaddons/iconaddon_tokenerroded.png': 'Key / Eroded Token',\n  'itemaddons/iconaddon_tokengold.png': 'Key / Gold Token',\n  'itemaddons/iconaddon_tornbookmark.png': 'Killer / Nurse / Torn Bookmark',\n  'itemaddons/iconaddon_trapperbag.png': 'Killer / Trapper / Trapper Bag',\n  'itemaddons/iconaddon_trappergloves.png': 'Killer / Trapper / Trapper Gloves',\n  'itemaddons/iconaddon_trappersack.png': 'Killer / Trapper / Trapper Sack',\n  'itemaddons/iconaddon_uniquering.png': 'Key / Unique Wedding Ring',\n  'itemaddons/iconaddon_vegetableoil.png':\n    'Killer / Leatherface / Vegetable Oil',\n  'itemaddons/iconaddon_waxbrick.png': 'Killer / Trapper / Wax Brick',\n  'itemaddons/iconaddon_weavedring.png': 'Key / Weaved Ring',\n  'itemaddons/iconaddon_whiteblindwarrior.png':\n    'Killer / Wraith / \"Blind Warrior\" - White',\n  'itemaddons/iconaddon_whiteblink.png': 'Killer / Wraith / \"Blink\" - White',\n  'itemaddons/iconaddon_whitekuntintakkho.png':\n    'Killer / Wraith / \"Swift Hunt\" - White',\n  'itemaddons/iconaddon_whitenitcomb.png': 'Killer / Nurse / White Nit Comb',\n  'itemaddons/iconaddon_whiteshadowdance.png':\n    'Killer / Wraith / \"Shadow Dance\" - White',\n  'itemaddons/iconaddon_whitewindstorm.png':\n    'Killer / Wraith / \"Windstorm\" - White',\n  'itemaddons/iconaddon_widelens.png': 'Flashlight / Wide Lens',\n  'itemaddons/iconaddon_woodenhorse.png': 'Killer / Nurse / Wooden Horse',\n  'itemaddons/kenya/iconaddon_colddirt.png': 'Killer / Legion / Cold Dirt',\n  'itemaddons/kenya/iconaddon_defacedsmileybutton.png':\n    'Killer / Legion / Defaced Smiley Pin',\n  'itemaddons/kenya/iconaddon_etchedruler.png':\n    'Killer / Legion / Etched Ruler',\n  'itemaddons/kenya/iconaddon_filthyblade.png':\n    'Killer / Legion / Filthy Blade',\n  'itemaddons/kenya/iconaddon_franksmixtape.png':\n    \"Killer / Legion / Frank's Mix Tape\",\n  'itemaddons/kenya/iconaddon_friendshipbracelet.png':\n    'Killer / Legion / Friendship Bracelet',\n  'itemaddons/kenya/iconaddon_fumingmixtape.png':\n    'Killer / Legion / Fuming Mix Tape',\n  'itemaddons/kenya/iconaddon_iridescentbutton.png':\n    'Killer / Legion / Iridescent Button',\n  'itemaddons/kenya/iconaddon_joeysmixtape.png':\n    \"Killer / Legion / Joey's Mix Tape\",\n  'itemaddons/kenya/iconaddon_juliesmixtape.png':\n    \"Killer / Legion / Julie's Mix Tape\",\n  'itemaddons/kenya/iconaddon_mischieflist.png':\n    'Killer / Legion / Mischief List',\n  'itemaddons/kenya/iconaddon_muralsketch.png':\n    'Killer / Legion / Mural Sketch',\n  'itemaddons/kenya/iconaddon_nastyblade.png': 'Killer / Legion / Nasty Blade',\n  'itemaddons/kenya/iconaddon_neversleeppills.png':\n    'Killer / Legion / Never-Sleep Pills',\n  'itemaddons/kenya/iconaddon_scratchedruler.png':\n    'Killer / Legion / Scratched Ruler',\n  'itemaddons/kenya/iconaddon_smileyfacebutton.png':\n    'Killer / Legion / Smiley Face Pin',\n  'itemaddons/kenya/iconaddon_stabwoundsstudy.png':\n    'Killer / Legion / Stab Wounds Study',\n  'itemaddons/kenya/iconaddon_stolensketchbook.png':\n    'Killer / Legion / Stolen Sketch Book',\n  'itemaddons/kenya/iconaddon_suziesmixtape.png':\n    \"Killer / Legion / Susie's Mix Tape\",\n  'itemaddons/kenya/iconaddon_thelegionbutton.png':\n    'Killer / Legion / The Legion Pin',\n  'itemaddons/mali/iconaddon_ashenapple.png': 'Killer / Plague / Ashen Apple',\n  'itemaddons/mali/iconaddon_blackincense.png':\n    'Killer / Plague / Black Incense',\n  'itemaddons/mali/iconaddon_devoteesamulet.png':\n    \"Killer / Plague / Devotee's Amulet\",\n  'itemaddons/mali/iconaddon_emeticpotion.png':\n    'Killer / Plague / Emetic potion',\n  'itemaddons/mali/iconaddon_exorcismamulet.png':\n    'Killer / Plague / Exorcism Amulet',\n  'itemaddons/mali/iconaddon_healingsalve.png':\n    'Killer / Plague / Healing Salve',\n  'itemaddons/mali/iconaddon_hematiteseal.png':\n    'Killer / Plague / Hematite Seal',\n  'itemaddons/mali/iconaddon_incensedointment.png':\n    'Killer / Plague / Incensed Ointment',\n  'itemaddons/mali/iconaddon_infectedemetic.png':\n    'Killer / Plague / Infected Emetic',\n  'itemaddons/mali/iconaddon_iridescentseal.png':\n    'Killer / Plague / Iridescent Seal',\n  'itemaddons/mali/iconaddon_limestoneseal.png':\n    'Killer / Plague / Limestone Seal',\n  'itemaddons/mali/iconaddon_olibanumincense.png':\n    'Killer / Plague / Olibanum Incense',\n  'itemaddons/mali/iconaddon_potenttincture.png':\n    'Killer / Plague / Potent Tincture',\n  'itemaddons/mali/iconaddon_prayerapple.png':\n    'Killer / Plague / Blessed Apple',\n  'itemaddons/mali/iconaddon_prayertabletfragment.png':\n    'Killer / Plague / Prayer Tablet Fragment',\n  'itemaddons/mali/iconaddon_prophylacticamulet.png':\n    'Killer / Plague / Prophylactic Amulet',\n  'itemaddons/mali/iconaddon_rubbingoil.png': 'Killer / Plague / Rubbing Oil',\n  'itemaddons/mali/iconaddon_severedtoe.png': 'Killer / Plague / Severed Toe',\n  'itemaddons/mali/iconaddon_vileemetic.png': 'Killer / Plague / Vile Emetic',\n  'itemaddons/mali/iconaddon_worshiptablet.png':\n    'Killer / Plague / Worship Tablet',\n  'itemaddons/oman/iconaddon_caughtontape.png':\n    'Killer / Ghostface / “Ghost Face Caught on Tape”',\n  'itemaddons/oman/iconaddon_cheapcologne.png':\n    'Killer / Ghostface / Cheap Cologne',\n  'itemaddons/oman/iconaddon_chewedpen.png': 'Killer / Ghostface / Chewed Pen',\n  'itemaddons/oman/iconaddon_driverslicense.png':\n    \"Killer / Ghostface / Driver's License\",\n  'itemaddons/oman/iconaddon_droplegknifesheath.png':\n    'Killer / Ghostface / Drop-Leg Knife Sheath',\n  'itemaddons/oman/iconaddon_headlinescutouts.png':\n    'Killer / Ghostface / Headlines Cutouts',\n  'itemaddons/oman/iconaddon_knifebeltclip.png':\n    'Killer / Ghostface / Knife Belt Clip',\n  'itemaddons/oman/iconaddon_lastingperfume.png':\n    'Killer / Ghostface / Lasting Perfume',\n  'itemaddons/oman/iconaddon_leatherknifesheath.png':\n    'Killer / Ghostface / Leather Knife Sheath',\n  'itemaddons/oman/iconaddon_markedmap.png': 'Killer / Ghostface / Marked Map',\n  'itemaddons/oman/iconaddon_nightvisionmoncular.png':\n    'Killer / Ghostface / Night Vision Monocular',\n  'itemaddons/oman/iconaddon_olsensaddressbook.png':\n    \"Killer / Ghostface / Olsen's Address Book\",\n  'itemaddons/oman/iconaddon_olsensjournal.png':\n    'Killer / Ghostface / Olsen’s Journal',\n  'itemaddons/oman/iconaddon_olsenswallet.png':\n    'Killer / Ghostface / Olsen’s Wallet',\n  'itemaddons/oman/iconaddon_outdoorsecuritycamera.png':\n    'Killer / Ghostface / Outdoor Security Camera',\n  'itemaddons/oman/iconaddon_philly.png': 'Killer / Ghostface / “Philly”',\n  'itemaddons/oman/iconaddon_reusuablecinchstraps.png':\n    'Killer / Ghostface / Cinch Straps ',\n  'itemaddons/oman/iconaddon_telephotolens.png':\n    'Killer / Ghostface / Telephoto Lens',\n  'itemaddons/oman/iconaddon_victimsdetailedroutine.png':\n    'Killer / Ghostface / Victim’s Detailed Routine',\n  'itemaddons/oman/iconaddon_walleyesmatchbook.png':\n    'Killer / Ghostface / Walleyes Matchbook',\n  'itemaddons/qatar/iconaddon_barbsglasses.png':\n    \"Killer / Demogorgon / Barb's Glasses\",\n  'itemaddons/qatar/iconaddon_blackheart.png':\n    'Killer / Demogorgon / Black Heart',\n  'itemaddons/qatar/iconaddon_brasscaselighter.png':\n    'Killer / Demogorgon / Brass Case Lighter',\n  'itemaddons/qatar/iconaddon_deerlung.png': 'Killer / Demogorgon / Deer Lung',\n  'itemaddons/qatar/iconaddon_elevenssoda.png':\n    \"Killer / Demogorgon / Eleven's Soda\",\n  'itemaddons/qatar/iconaddon_leproselichen.png':\n    'Killer / Demogorgon / Leprose Lichen',\n  'itemaddons/qatar/iconaddon_lifeguardwhistle.png':\n    'Killer / Demogorgon / Lifeguard Whistle',\n  'itemaddons/qatar/iconaddon_mewsguts.png': \"Killer / Demogorgon / Mew's Guts\",\n  'itemaddons/qatar/iconaddon_ratliver.png': 'Killer / Demogorgon / Rat Liver',\n  'itemaddons/qatar/iconaddon_rattail.png': 'Killer / Demogorgon / Rat Tail',\n  'itemaddons/qatar/iconaddon_redmoss.png': 'Killer / Demogorgon / Red Moss',\n  'itemaddons/qatar/iconaddon_rottengreentripe.png':\n    'Killer / Demogorgon / Rotten Green Tripe',\n  'itemaddons/qatar/iconaddon_rottenpumpkin.png':\n    'Killer / Demogorgon / Rotten Pumpkin',\n  'itemaddons/qatar/iconaddon_stickylining.png':\n    'Killer / Demogorgon / Sticky Lining',\n  'itemaddons/qatar/iconaddon_thornyvines.png':\n    'Killer / Demogorgon / Thorny Vines',\n  'itemaddons/qatar/iconaddon_unknownegg.png':\n    'Killer / Demogorgon / Unknown Egg',\n  'itemaddons/qatar/iconaddon_upsidedownresin.png':\n    'Killer / Demogorgon / Upside Down Resin',\n  'itemaddons/qatar/iconaddon_vermillionwebcap.png':\n    'Killer / Demogorgon / Vermillion Webcap',\n  'itemaddons/qatar/iconaddon_violetwaxcap.png':\n    'Killer / Demogorgon / Violet Waxcap',\n  'itemaddons/qatar/iconaddon_viscouswebbing.png':\n    'Killer / Demogorgon / Viscous Webbing',\n  'itemaddons/sweden/iconaddon_akitoscrutch.png':\n    \"Killer / Oni / Akito's Crutch\",\n  'itemaddons/sweden/iconaddon_blackenedtoenail.png':\n    'Killer / Oni / Blackened Toenail',\n  'itemaddons/sweden/iconaddon_bloodysash.png': 'Killer / Oni / Bloody Sash',\n  'itemaddons/sweden/iconaddon_childswoodensword.png':\n    \"Killer / Oni / Child's Wooden Sword\",\n  'itemaddons/sweden/iconaddon_chippedsaihai.png':\n    'Killer / Oni / Chipped Saihai',\n  'itemaddons/sweden/iconaddon_crackedsakazuki.png':\n    'Killer / Oni / Cracked Sakazuki',\n  'itemaddons/sweden/iconaddon_inklion.png': 'Killer / Oni / Ink Lion',\n  'itemaddons/sweden/iconaddon_iridescentfamilycrest.png':\n    'Killer / Oni / Iridescent Family Crest',\n  'itemaddons/sweden/iconaddon_kanaianzentalisman.png':\n    'Killer / Oni / Kanai-anzen Talisman',\n  'itemaddons/sweden/iconaddon_lionfang.png': 'Killer / Oni / Lion Fang',\n  'itemaddons/sweden/iconaddon_paperlantern.png':\n    'Killer / Oni / Yaku-Yoke Talisman',\n  'itemaddons/sweden/iconaddon_polishedmaedate.png':\n    'Killer / Oni / Polished Maedate',\n  'itemaddons/sweden/iconaddon_renirosbloodyglove.png':\n    'Killer / Oni / Renjiro’s Bloody Glove',\n  'itemaddons/sweden/iconaddon_rottingrope.png': 'Killer / Oni / Rotting Rope',\n  'itemaddons/sweden/iconaddon_scalpedtopknot.png':\n    'Killer / Oni / Scalped Topknot',\n  'itemaddons/sweden/iconaddon_shatteredwakizashi.png':\n    'Killer / Oni / Shattered Wakizashi',\n  'itemaddons/sweden/iconaddon_splinteredhull.png':\n    'Killer / Oni / Splintered Hull',\n  'itemaddons/sweden/iconaddon_tearsoakedtenugui.png':\n    'Killer / Oni / Tear Soaked Tenugui',\n  'itemaddons/sweden/iconaddon_woodenonimask.png':\n    'Killer / Oni / Wooden Oni Mask',\n  'itemaddons/sweden/iconaddon_yamaokasashimono.png':\n    'Killer / Oni / Yamaoka Sashimono',\n  'itemaddons/ukraine/iconaddon_barbedwire.png':\n    'Killer / Deathslinger / Barbed Wire',\n  'itemaddons/ukraine/iconaddon_bayshorescigar.png':\n    'Killer / Deathslinger / Bayshore’s Cigar',\n  'itemaddons/ukraine/iconaddon_bayshoresgoldtooth.png':\n    'Killer / Deathslinger / Bayshore’s Gold Tooth',\n  'itemaddons/ukraine/iconaddon_chewingtobacco.png':\n    'Killer / Deathslinger / Chewing Tobacco',\n  'itemaddons/ukraine/iconaddon_clearcreekwhiskey.png':\n    'Killer / Deathslinger / Gold Creek Whiskey',\n  'itemaddons/ukraine/iconaddon_hellshireiron.png':\n    'Killer / Deathslinger / Hellshire Iron',\n  'itemaddons/ukraine/iconaddon_honeylocustthorns.png':\n    'Killer / Deathslinger / Honey Locust Thorns ',\n  'itemaddons/ukraine/iconaddon_iridescentcoin.png':\n    'Killer / Deathslinger / Iridescent Coin',\n  'itemaddons/ukraine/iconaddon_jawsmasher.png':\n    'Killer / Deathslinger / Jaw Smasher ',\n  'itemaddons/ukraine/iconaddon_marshalsbadge.png':\n    \"Killer / Deathslinger / Marshal's Badge \",\n  'itemaddons/ukraine/iconaddon_modifiedammobelt.png':\n    'Killer / Deathslinger / Modified Ammo Belt ',\n  'itemaddons/ukraine/iconaddon_poisonoakleaves.png':\n    'Killer / Deathslinger / Poison Oak Leaves',\n  'itemaddons/ukraine/iconaddon_prisonchain.png':\n    'Killer / Deathslinger / Prison Chain',\n  'itemaddons/ukraine/iconaddon_ricketychain.png':\n    'Killer / Deathslinger / Rickety Chain',\n  'itemaddons/ukraine/iconaddon_rustedspike.png':\n    'Killer / Deathslinger / Rusted Spike ',\n  'itemaddons/ukraine/iconaddon_snakeoil.png':\n    'Killer / Deathslinger / Snake Oil ',\n  'itemaddons/ukraine/iconaddon_spitpolishrag.png':\n    'Killer / Deathslinger / Spit Polish Rag ',\n  'itemaddons/ukraine/iconaddon_tinoilcan.png':\n    'Killer / Deathslinger / Tin Oil Can ',\n  'itemaddons/ukraine/iconaddon_wantedposter.png':\n    'Killer / Deathslinger / Wanted Poster ',\n  'itemaddons/ukraine/iconaddon_wardenskeys.png':\n    'Killer / Deathslinger / Warden’s Keys ',\n  'itemaddons/dlc6/iconaddon_awardwinningchili.png':\n    'Killer / Cannibal / Award-Winning Chili',\n  'itemaddons/dlc6/iconaddon_chili.png': 'Killer / Cannibal / Chili',\n  'itemaddons/dlc6/iconaddon_knifescratches.png':\n    'Killer / Cannibal / Knife Scratches',\n  'itemaddons/dlc6/iconaddon_thebeastsmark.png':\n    \"Killer / Cannibal / Beast's Marks\",\n  'itemaddons/dlc6/iconaddon_thegrease.png': 'Killer / Cannibal / The Grease',\n  'itemaddons/guam/iconaddon_bottleofchloroform.png':\n    'Killer / Clown / Bottle of Chloroform',\n  'itemaddons/guam/iconaddon_cheapginbottle.png':\n    'Killer / Clown / Cheap Gin Bottle',\n  'itemaddons/guam/iconaddon_cigarbox.png': 'Killer / Clown / Cigar Box',\n  'itemaddons/guam/iconaddon_ether10.png': 'Killer / Clown / Ether 10 Vol%',\n  'itemaddons/guam/iconaddon_ether15.png': 'Killer / Clown / Ether 15 Vol%',\n  'itemaddons/guam/iconaddon_flaskofbleach.png':\n    'Killer / Clown / Flask of Bleach',\n  'itemaddons/guam/iconaddon_garishmakeupkit.png':\n    'Killer / Clown / Garish Makeup Kit',\n  'itemaddons/guam/iconaddon_sulfuricacidvial.png':\n    'Killer / Clown / Sulphuric Acid Vial',\n  'itemaddons/guam/iconaddon_tattoosmiddlefinger.png':\n    \"Killer / Clown / Tatto's Middle Finger\",\n  'itemaddons/guam/iconaddon_vhsporn.png': 'Killer / Clown / VHS Porn',\n  'itemaddons/iconaddon_gum.png': 'Unused / Gum',\n  'itemaddons/iconaddon_inhaler.png': 'Unused / Inhaler',\n  'itemaddons/iconaddon_sootshadowdance.png':\n    'Killer / Wraith / \"Shadow Dance\" - Soot',\n  'itemaddons/wales/iconaddon_blackstrap.png':\n    'Killer / Executioner / Black Strap',\n  'itemaddons/wales/iconaddon_burningmanpainting.png':\n    'Killer / Executioner / Burning Man Painting',\n  'itemaddons/wales/iconaddon_cinderellamusicbox.png':\n    'Killer / Executioner / Cinderella Music Box',\n  'itemaddons/wales/iconaddon_copperring.png':\n    'Killer / Executioner / Copper Ring',\n  'itemaddons/wales/iconaddon_crimsonceremonybook.png':\n    'Killer / Executioner / Crimson Ceremony Book',\n  'itemaddons/wales/iconaddon_deadbutterfly.png':\n    'Killer / Executioner / Dead Butterfly',\n  'itemaddons/wales/iconaddon_forgottenvideotape.png':\n    'Killer / Executioner / Forgotten Videotape',\n  'itemaddons/wales/iconaddon_iridescentseal.png':\n    'Killer / Executioner / Iridescent Seal of Metatron',\n  'itemaddons/wales/iconaddon_leadring.png': 'Killer / Executioner / Lead Ring',\n  'itemaddons/wales/iconaddon_leopardprintfabric.png':\n    'Killer / Executioner / Leopard Print Fabric',\n  'itemaddons/wales/iconaddon_lostmemoriesbook.png':\n    'Killer / Executioner / Lost Memories Book',\n  'itemaddons/wales/iconaddon_mannequinfoot.png':\n    'Killer / Executioner / Mannequin Foot',\n  'itemaddons/wales/iconaddon_mistyday.png':\n    'Killer / Executioner / Misty Day, Remains of Judgement',\n  'itemaddons/wales/iconaddon_obsidiangoblet.png':\n    'Killer / Executioner / Obsidian Goblet',\n  'itemaddons/wales/iconaddon_rustcoloredegg.png':\n    'Killer / Executioner / Rust Colored Egg',\n  'itemaddons/wales/iconaddon_scarletegg.png':\n    'Killer / Executioner / Scarlet Egg',\n  'itemaddons/wales/iconaddon_spearhead.png':\n    'Killer / Executioner / Spearhead',\n  'itemaddons/wales/iconaddon_tabletoftheoppressor.png':\n    'Killer / Executioner / Tablet of the Oppressor',\n  'itemaddons/wales/iconaddon_valtielsectphotograph.png':\n    'Killer / Executioner / Valtiel Sect Photograph',\n  'itemaddons/wales/iconaddon_waxdoll.png': 'Killer / Executioner / Wax Doll',\n  'itemaddons/cannibal/iconaddon_iridescentflesh.png':\n    'Killer / Cannibal / Iridescent Flesh',\n  'itemaddons/xipre/iconaddon_apexmuffler.png':\n    'Killer / Hillbilly / Apex Muffler',\n  'itemaddons/xipre/iconaddon_bigbuckle.png': 'Killer / Hillbilly / Big Buckle',\n  'itemaddons/xipre/iconaddon_blackgrease.png':\n    'Killer / Hillbilly / Black Grease',\n  'itemaddons/xipre/iconaddon_dadsboots.png':\n    \"Killer / Hillbilly / Dad's Boots\",\n  'itemaddons/xipre/iconaddon_deathengravings.png':\n    'Killer / Hillbilly / Death Engravings',\n  'itemaddons/xipre/iconaddon_doomengravings.png':\n    'Killer / Hillbilly / Doom Engravings',\n  'itemaddons/xipre/iconaddon_heavyclutch.png':\n    'Killer / Hillbilly / Heavy Clutch',\n  'itemaddons/xipre/iconaddon_iridescentbrick.png':\n    'Killer / Hillbilly / Iridescent Brick',\n  'itemaddons/xipre/iconaddon_junkyardairfilter.png':\n    'Killer / Hillbilly / Junkyard Air Filter',\n  'itemaddons/xipre/iconaddon_leafymash.png': 'Killer / Hillbilly / Leafy Mash',\n  'itemaddons/xipre/iconaddon_lowkickbackchains.png':\n    'Killer / Hillbilly / Low Kickback Chains',\n  'itemaddons/xipre/iconaddon_lowprochains.png':\n    'Killer / Hillbilly / LoPro Chains',\n  'itemaddons/xipre/iconaddon_mothershelpers.png':\n    \"Killer / Hillbilly / Mother's Helpers\",\n  'itemaddons/xipre/iconaddon_offbrandmotoroil.png':\n    'Killer / Hillbilly / Off-brand Motor Oil',\n  'itemaddons/xipre/iconaddon_pighousegloves.png':\n    'Killer / Hillbilly / Pighouse Gloves',\n  'itemaddons/xipre/iconaddon_puncturedmuffler.png':\n    'Killer / Hillbilly / Punctured Muffler',\n  'itemaddons/xipre/iconaddon_speedlimiter.png':\n    'Killer / Hillbilly / Speed Limiter',\n  'itemaddons/xipre/iconaddon_spikedboots.png':\n    'Killer / Hillbilly / Spiked Boots',\n  'itemaddons/xipre/iconaddon_steeltoeboots.png':\n    'Killer / Hillbilly / Steel toe Boots',\n  'itemaddons/xipre/iconaddon_tunedcarburetor.png':\n    'Killer / Hillbilly / Tuned Carburetor',\n  'itemaddons/yemen/iconaddon_adrenalinevial.png':\n    'Killer / Blight / Adrenaline Vial',\n  'itemaddons/yemen/iconaddon_alchemistsring.png':\n    \"Killer / Blight / Alchemist's Ring\",\n  'itemaddons/yemen/iconaddon_blightedcrow.png':\n    'Killer / Blight / Blighted Crow',\n  'itemaddons/yemen/iconaddon_blightedrat.png': 'Killer / Blight / Blighed Rat',\n  'itemaddons/yemen/iconaddon_cankerthorn.png':\n    'Killer / Blight / Canker Thorn',\n  'itemaddons/yemen/iconaddon_chippedmonocle.png':\n    'Killer / Blight / Chipped Monocle',\n  'itemaddons/yemen/iconaddon_compoundseven.png':\n    'Killer / Blight / Compound Seven',\n  'itemaddons/yemen/iconaddon_compoundthirtythree.png':\n    'Killer / Blight / Compound Thirty-Three',\n  'itemaddons/yemen/iconaddon_compoundtwentyone.png':\n    'Killer / Blight / Compond Twenty-One',\n  'itemaddons/yemen/iconaddon_foxglove.png': 'Killer / Blight / Foxglove',\n  'itemaddons/yemen/iconaddon_iridescentblighttag.png':\n    'Killer / Blight / Iridescent Blight Tag',\n  'itemaddons/yemen/iconaddon_placebotablet.png':\n    'Killer / Blight / Placebo Tablet',\n  'itemaddons/yemen/iconaddon_plaguebile.png': 'Killer / Blight / Plague Bile',\n  'itemaddons/yemen/iconaddon_pustuladust.png':\n    'Killer / Blight / Pustula Dust',\n  'itemaddons/yemen/iconaddon_rosetonic.png': 'Killer / Blight / Rose Tonic',\n  'itemaddons/yemen/iconaddon_shreddednotes.png':\n    'Killer / Blight / Shredded Notes',\n  'itemaddons/yemen/iconaddon_soulchemical.png':\n    'Killer / Blight / Soul Chemical',\n  'itemaddons/yemen/iconaddon_summoningstone.png':\n    'Killer / Blight / Summoning Stone',\n  'itemaddons/yemen/iconaddon_umbrasalts.png': 'Killer / Blight / Umbra Salts',\n  'itemaddons/yemen/iconaddon_vigosjournal.png':\n    \"Killer / Blight / Vigo's Journal\",\n  'itemaddons/zambia/iconaddon_blightedserum.png':\n    '2020 Halloween / Blighted Serum',\n  'itemaddons/zambia/iconaddon_blightedsyringe.png':\n    '2020 Halloween / Blighted Syringe',\n  'itemaddons/zambia/iconaddon_brokenflashlightbulb.png':\n    '2020 Halloween / Broken Flashlight Bulb',\n  'itemaddons/aurora/iconaddon_artifacter.png':\n    'Killer / The Twins / Artifacter',\n  'itemaddons/aurora/iconaddon_babyteeth.png':\n    'Killer / The Twins / Baby Teeth',\n  'itemaddons/aurora/iconaddon_bloodiedblackhood.png':\n    'Killer / The Twins / Bloodied Black Hood',\n  'itemaddons/aurora/iconaddon_catfigurine.png':\n    'Killer / The Twins / Cat Figurine',\n  'itemaddons/aurora/iconaddon_catseye.png': \"Killer / The Twins / Cat's Eye\",\n  'itemaddons/aurora/iconaddon_ceremonialcandelabrum.png':\n    'Killer / The Twins / Ceremonial Candelabrum',\n  'itemaddons/aurora/iconaddon_dropofperfume.png':\n    'Killer / The Twins / Drop of Perfume',\n  'itemaddons/aurora/iconaddon_foreststew.png':\n    'Killer / The Twins / Forest Stew',\n  'itemaddons/aurora/iconaddon_iridescentpendant.png':\n    'Killer / The Twins / Iridescent Pendant',\n  'itemaddons/aurora/iconaddon_madeleinesglove.png':\n    \"Killer / The Twins / Madeline's Glove\",\n  'itemaddons/aurora/iconaddon_madeleinesscarf.png':\n    \"Killer / The Twins / Madeline's Scarf\",\n  'itemaddons/aurora/iconaddon_rustedneedle.png':\n    'Killer / The Twins / Rusted Needle',\n  'itemaddons/aurora/iconaddon_sewersludge.png':\n    'Killer / The Twins / Sewer Sludge',\n  'itemaddons/aurora/iconaddon_silencingcloth.png':\n    'Killer / The Twins / Silencing Cloth',\n  'itemaddons/aurora/iconaddon_souredmilk.png':\n    'Killer / The Twins / Soured Milk',\n  'itemaddons/aurora/iconaddon_spinningtop.png':\n    'Killer / The Twins / Spinning Top',\n  'itemaddons/aurora/iconaddon_stalebiscuit.png':\n    'Killer / The Twins / Stale Biscuit',\n  'itemaddons/aurora/iconaddon_tinyfingernail.png':\n    'Killer / The Twins / Tiny Fingernail',\n  'itemaddons/aurora/iconaddon_toysword.png': 'Killer / The Twins / Toy Sword',\n  'itemaddons/aurora/iconaddon_victorssoldier.png':\n    \"Killer / The Twins / Victor's Soldier\",\n  'itemaddons/aurora/iconaddon_weightyrattle.png':\n    'Killer / The Twins / Weighty Rattle',\n  'itemaddons/comet/icons_addon_bloodyboa.png':\n    'Killer / The Trickster / Bloody Boa',\n  'itemaddons/comet/icons_addon_bloodyrose.png':\n    'Killer / The Trickster / Bloody Rose',\n  'itemaddons/comet/icons_addon_cagedheartshoes.png':\n    'Killer / The Trickster / Caged Heart Shoes',\n  'itemaddons/comet/icons_addon_cutthruusingle.png':\n    'Killer / The Trickster / Cut Thru U Single',\n  'itemaddons/comet/icons_addon_deaththroescompilation.png':\n    'Killer / The Trickster / Death Throes Compilation',\n  'itemaddons/comet/icons_addon_diamondcufflinks.png':\n    'Killer / The Trickster / Diamond Cufflinks',\n  'itemaddons/comet/icons_addon_edgeofrevivalalbum.png':\n    'Killer / The Trickster / Edge Of Revival Album',\n  'itemaddons/comet/icons_addon_fizzspinsoda.png':\n    'Killer / The Trickster / Fizz Spin Soda',\n  'itemaddons/comet/icons_addon_infernowires.png':\n    'Killer / The Trickster / Inferno Wires',\n  'itemaddons/comet/icons_addon_iridescentphotocard.png':\n    'Killer / The Trickster / Iridescent Photocard',\n  'itemaddons/comet/icons_addon_jiwoonsautograph.png':\n    \"Killer / The Trickster / Ji-Woon's Autograph\",\n  'itemaddons/comet/icons_addon_killingpartchords.png':\n    'Killer / The Trickster / Killing Part Chords',\n  'itemaddons/comet/icons_addon_luckyblade.png':\n    'Killer / The Trickster / Lucky Blade',\n  'itemaddons/comet/icons_addon_mementoblades.png':\n    'Killer / The Trickster / Memento Blades',\n  'itemaddons/comet/icons_addon_ontargetsingle.png':\n    'Killer / The Trickster / On Target Single',\n  'itemaddons/comet/icons_addon_ripperbrace.png':\n    'Killer / The Trickster / Ripper Brace',\n  'itemaddons/comet/icons_addon_tequilamoonrock.png':\n    'Killer / The Trickster / Tequila Moon Rock',\n  'itemaddons/comet/icons_addon_trickblades.png':\n    'Killer / The Trickster / Trick Blades',\n  'itemaddons/comet/icons_addon_trickpouch.png':\n    'Killer / The Trickster / Trick Pouch',\n  'itemaddons/comet/icons_addon_waitingforyouwatch.png':\n    'Killer / The Trickster / Waiting For You Watch',\n  'itemaddons/comet/icons_addon_yumismurder.png':\n    'Killer / The Trickster / Yumis Murder',\n  'itemaddons/guam/iconaddon_partybottle.png':\n    'Killer / The Clown / Party Bottle',\n  'itemaddons/guam/iconaddon_spiritofhartshorn.png':\n    'Killer / The Clown / Spirit of Harts Horn',\n  'itemaddons/eclipse/iconaddon_adminwristband.png':\n    'Killer / Nemesis / Admin Wristband',\n  'itemaddons/eclipse/iconaddon_adrenalineinjector.png':\n    'Killer / Nemesis / Adrenaline Injector',\n  'itemaddons/eclipse/iconaddon_briansintestines.png':\n    \"Killer / Nemesis / Brian's Intestines\",\n  'itemaddons/eclipse/iconaddon_brokenrecoverycoin.png':\n    'Killer / Nemesis / Broken Recovery Coin',\n  'itemaddons/eclipse/iconaddon_damagedsyringe.png':\n    'Killer / Nemesis / Damaged Syrings',\n  'itemaddons/eclipse/iconaddon_depletedinkribbon.png':\n    'Killer / Nemesis / Depleted Ink Ribbon',\n  'itemaddons/eclipse/iconaddon_iridescentumbrellabadge.png':\n    'Killer / Nemesis / Iridescent Umbrella Badge',\n  'itemaddons/eclipse/iconaddon_jillsandwich.png':\n    \"Killer / Nemesis / Jill's Sandwich\",\n  'itemaddons/eclipse/iconaddon_lickertongue.png':\n    'Killer / Nemesis / Licker Tongue',\n  'itemaddons/eclipse/iconaddon_marvinsblood.png':\n    \"Killer / Nemesis / Marvin's Blood\",\n  'itemaddons/eclipse/iconaddon_mikhailseye.png':\n    \"Killer / Nemesis / Mikhail's Eye\",\n  'itemaddons/eclipse/iconaddon_neaparasite.png':\n    'Killer / Nemesis / Nea Parasite',\n  'itemaddons/eclipse/iconaddon_plant43vines.png':\n    'Killer / Nemesis / Plant 43 Vines',\n  'itemaddons/eclipse/iconaddon_serotonininjector.png':\n    'Killer / Nemesis / Seratonin Injector',\n  'itemaddons/eclipse/iconaddon_shatteredstarsbadge.png':\n    'Killer / Nemesis / Shattered Stars Badge',\n  'itemaddons/eclipse/iconaddon_shreddedfedora.png':\n    'Killer / Nemesis / Shredded Fedora',\n  'itemaddons/eclipse/iconaddon_starsfieldcombatmanual.png':\n    'Killer / Nemesis / Starsfield Combat Manual',\n  'itemaddons/eclipse/iconaddon_tvirussample.png':\n    'Killer / Nemesis / T-Virus Sample',\n  'itemaddons/eclipse/iconaddon_tyrantgore.png':\n    'Killer / Nemesis / Tyrant Gore',\n  'itemaddons/eclipse/iconaddon_visitorwristband.png':\n    \"Killer / Nemesis / Visitor's Wristband\",\n  'itemaddons/eclipse/iconaddon_zombieheart.png':\n    'Killer / Nemesis / Zombie Heart',\n  'itemaddons/comet/icons_addon_smashnrungloves.png':\n    \"Killer / The Trickster / Smash 'N Run Gloves\",\n  'itemaddons/dlc4/iconaddon_obediencecartersnotes.png':\n    \"Killer / The Doctor / Obedience (Carter's Notes)\",\n  'itemaddons/dlc5/iconaddon_roseroot.png': 'Killer / The Huntress / Rose Root',\n  'itemaddons/dlc5/iconaddon_soldiersputtee.png':\n    \"Killer / The Huntress / Soldier's Puttee\",\n  'itemaddons/dlc5/iconaddon_weightedhead.png':\n    'Killer / The Huntress / Weighted Head',\n  'itemaddons/dlc5/iconaddon_woodenfox.png':\n    'Killer / The Huntress / Wooden Fox',\n  'itemaddons/dlc5/iconaddon_yellowedcloth.png':\n    'Killer / The Huntress / Yellowed Cloth',\n  'itemaddons/gemini/iconaddon_bentnail.png':\n    'Killer / The Cenobite / Bent Nail',\n  'itemaddons/gemini/iconaddon_burningcandle.png':\n    'Killer / The Cenobite / Burning Candle',\n  'itemaddons/gemini/iconaddon_chattererstooth.png':\n    \"Killer / The Cenobite / Chatterer's Tooth\",\n  'itemaddons/gemini/iconaddon_engineersfang.png':\n    \"Killer / The Cenobite / Engineer's Fang\",\n  'itemaddons/gemini/iconaddon_flickeringtelevision.png':\n    'Killer / The Cenobite / Flickering Television',\n  'itemaddons/gemini/iconaddon_franksheart.png':\n    \"Killer / The Cenobite / Frank's Heart\",\n  'itemaddons/gemini/iconaddon_greasyblacklens.png':\n    'Killer / The Cenobite / Greasy Black Lens',\n  'itemaddons/gemini/iconaddon_impalingwire.png':\n    'Killer / The Cenobite / Impaling Wire',\n  'itemaddons/gemini/iconaddon_iridescentlamentconfiguration.png':\n    'Killer / The Cenobite / Iridescent Lament Configuration',\n  'itemaddons/gemini/iconaddon_larrysblood.png':\n    \"Killer / The Cenobite / Larry's Blood\",\n  'itemaddons/gemini/iconaddon_larrysremains.png':\n    \"Killer / The Cenobite / Larry's Remains\",\n  'itemaddons/gemini/iconaddon_leatherstrip.png':\n    'Killer / The Cenobite / Leather Strip',\n  'itemaddons/gemini/iconaddon_liquifiedgore.png':\n    'Killer / The Cenobite / Liquified Gore',\n  'itemaddons/gemini/iconaddon_livelycrickets.png':\n    'Killer / The Cenobite / Lively Crickets',\n  'itemaddons/gemini/iconaddon_originalpain.png':\n    'Killer / The Cenobite / Original Pain',\n  'itemaddons/gemini/iconaddon_skeweredrat.png':\n    'Killer / The Cenobite / Skewered Rat',\n  'itemaddons/gemini/iconaddon_sliceoffrank.png':\n    'Killer / The Cenobite / Slice of Frank',\n  'itemaddons/gemini/iconaddon_spoiledmeal.png':\n    'Killer / The Cenobite / Spoiled Meal',\n  'itemaddons/gemini/iconaddon_torturepillar.png':\n    'Killer / The Cenobite / Torture Pillar',\n  'itemaddons/gemini/iconaddon_wrigglingmaggots.png':\n    'Killer / The Cenobite / Wriggling Maggots',\n  'itemaddons/hubble/iconaddon_furin.png': 'Killer / The Spirit / Furin',\n  'itemaddons/hubble/iconaddon_kintsugiteacup.png':\n    'Killer / The Spirit / Kintsugi Teacup',\n  'itemaddons/hubble/iconaddon_mothersglasses.png':\n    \"Killer / The Spirit / Mother's Glasses\",\n  'itemaddons/hubble/iconaddon_senkohanabi.png':\n    'Killer / The Spirit / Senko Hanabi',\n  'itemaddons/hubble/iconaddon_uchiwa.png': 'Killer / The Spirit / Uchiwa',\n  'itemaddons/iconaddon_bearoil.png': 'Killer / The Trapper / Bear Oil',\n  'itemaddons/iconaddon_coffeegrinds.png':\n    'Killer / The Trapper / Coffee Grinds',\n  'itemaddons/iconaddon_lengthenedjaws.png':\n    'Killer / The Trapper / Lengthened Jaws',\n  'itemaddons/iconaddon_makeshiftwrap.png':\n    'Killer / The Trapper / Makeshift Wrap',\n  'itemaddons/iconaddon_tensionspring.png':\n    'Killer / The Trapper / Tension Spring',\n  'itemaddons/ion/iconaddon_automaticdrawing.png':\n    'Killer / The Artist / Automatic Drawing',\n  'itemaddons/ion/iconaddon_charcoalstick.png':\n    'Killer / The Artist / Charcoal Stick',\n  'itemaddons/ion/iconaddon_choclocorn.png':\n    'Killer / The Artist / Choclo Corn',\n  'itemaddons/ion/iconaddon_darkestink.png':\n    'Killer / The Artist / Darkest Ink',\n  'itemaddons/ion/iconaddon_festeringcarrion.png':\n    'Killer / The Artist / Festering Carrion',\n  'itemaddons/ion/iconaddon_gardenofrot.png':\n    'Killer / The Artist / Garden Of Rot',\n  'itemaddons/ion/iconaddon_inkegg.png': 'Killer / The Artist / Ink Egg',\n  'itemaddons/ion/iconaddon_iridescentfeather.png':\n    'Killer / The Artist / Iridescent Feather',\n  'itemaddons/ion/iconaddon_jacobsbabyshoes.png':\n    \"Killer / The Artist / Jacob's Baby Shoes\",\n  'itemaddons/ion/iconaddon_ogriefolover.png':\n    'Killer / The Artist / O Grief, O Lover',\n  'itemaddons/ion/iconaddon_oilpaints.png': 'Killer / The Artist / Oil Paints',\n  'itemaddons/ion/iconaddon_severedhands.png':\n    'Killer / The Artist / Severed Hands',\n  'itemaddons/ion/iconaddon_severedtongue.png':\n    'Killer / The Artist / Severed Tongue',\n  'itemaddons/ion/iconaddon_silverbell.png':\n    'Killer / The Artist / Silver Bell',\n  'itemaddons/ion/iconaddon_stilllifecrow.png':\n    'Killer / The Artist / Still Life Crow',\n  'itemaddons/ion/iconaddon_thicktar.png': 'Killer / The Artist / Thicc Tar',\n  'itemaddons/ion/iconaddon_thornynest.png':\n    'Killer / The Artist / Thorny Nest',\n  'itemaddons/ion/iconaddon_untitledagony.png':\n    'Killer / The Artist / Untitled Agony',\n  'itemaddons/ion/iconaddon_velvetfabric.png':\n    'Killer / The Artist / Velvet Fabric',\n  'itemaddons/ion/iconaddon_vibrantobituary.png':\n    'Killer / The Artist / Vibrant Obituary',\n};\n\nexport default function getLanguage(filePath: string) {\n  return addons[filePath] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'archive/questicons_killer.png': 'Quest Icons - Killer',\n  'archive/questicons_killertrapper.png': 'Quest Icons - Trapper',\n  'archive/questicons_shared.png': 'Quest Icons - Shared',\n  'archive/questicons_survivor.png': 'Quest Icons - Survivor',\n  'archive/questicons_survivorclaudette.png': 'Quest Icons - Claudette',\n  'archive/togo/questicons_killer_do.png': 'Quest Icons - Doctor',\n  'archive/togo/questicons_killer_hk.png': 'Quest Icons - Spirit',\n  'archive/togo/questicons_survivor_dk.png': 'Quest Icons - David King',\n  'archive/togo/questicons_survivor_ms.png': 'Quest Icons - Jane Romero',\n  'archive/vietnam/questicons_killer_be.png': 'Quest Icons - Huntress',\n  'archive/vietnam/questicons_killer_kk.png': 'Quest Icons - Legion',\n  'archive/vietnam/questicons_survivor_df.png':\n    'Quest Icons - Dwight Fairfield',\n  'archive/vietnam/questicons_survivor_gs.png': 'Quest Icons - Kate Denson',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'packs/auriccellpack_01.png': 'Auric Cell Packs 1',\n  'packs/auriccellpack_02.png': 'Auric Cell Packs 2',\n  'packs/auriccellpack_03.png': 'Auric Cell Packs 3',\n  'packs/auriccellpack_04.png': 'Auric Cell Packs 4',\n  'packs/auriccellpack_05.png': 'Auric Cell Packs 5',\n  'packs/auriccellpack_06.png': 'Auric Cell Packs 6',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'dailyrituals/dailyritualicon_altruism.png': 'Altriusm',\n  'dailyrituals/dailyritualicon_boldness.png': 'Boldness',\n  'dailyrituals/dailyritualicon_brutality.png': 'Brutality',\n  'dailyrituals/dailyritualicon_deviousness.png': 'Deviousness',\n  'dailyrituals/dailyritualicon_hunter.png': 'Hunter',\n  'dailyrituals/dailyritualicon_objectives.png': 'Objectives',\n  'dailyrituals/dailyritualicon_sacrifice.png': 'Sacrifice',\n  'dailyrituals/dailyritualicon_survival.png': 'Survival',\n  'dailyrituals/dailyritualicon_halloween.png': 'Halloween',\n  'dailyrituals/dailyritualicon_lunar.png': 'Lunar',\n  'dailyrituals/dailyritualicon_winter.png': 'Winter',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'emblems/emblemicon_benevolent_bronze.png': 'Benevolent (Bronze)',\n  'emblems/emblemicon_benevolent_gold.png': 'Benevolent (Gold)',\n  'emblems/emblemicon_benevolent_none.png': 'Benevolent (None)',\n  'emblems/emblemicon_benevolent_platinum.png': 'Benevolent (Platinum)',\n  'emblems/emblemicon_benevolent_silver.png': 'Benevolent (Silver)',\n  'emblems/emblemicon_chaser_bronze.png': 'Chaser (Bronze)',\n  'emblems/emblemicon_chaser_gold.png': 'Chaser (Gold)',\n  'emblems/emblemicon_chaser_none.png': 'Chaser (None)',\n  'emblems/emblemicon_chaser_platinum.png': 'Chaser (Platinum)',\n  'emblems/emblemicon_chaser_silver.png': 'Chaser (Silver)',\n  'emblems/emblemicon_devout_bronze.png': 'Devout (Bronze)',\n  'emblems/emblemicon_devout_gold.png': 'Devout (Gold)',\n  'emblems/emblemicon_devout_none.png': 'Devout (None)',\n  'emblems/emblemicon_devout_platinum.png': 'Devout (Platinum)',\n  'emblems/emblemicon_devout_silver.png': 'Devout (Silver)',\n  'emblems/emblemicon_evader_bronze.png': 'Evader (Bronze)',\n  'emblems/emblemicon_evader_gold.png': 'Evader (Gold)',\n  'emblems/emblemicon_evader_none.png': 'Evader (None)',\n  'emblems/emblemicon_evader_platinum.png': 'Evader (Platinum)',\n  'emblems/emblemicon_evader_silver.png': 'Evader (Silver)',\n  'emblems/emblemicon_gatekeeper_bronze.png': 'Gatekeeper (Bronze)',\n  'emblems/emblemicon_gatekeeper_gold.png': 'Gatekeeper (Gold)',\n  'emblems/emblemicon_gatekeeper_none.png': 'Gatekeeper (None)',\n  'emblems/emblemicon_gatekeeper_platinum.png': 'Gatekeeper (Platinum)',\n  'emblems/emblemicon_gatekeeper_silver.png': 'Gatekeeper (Silver)',\n  'emblems/emblemicon_lightbringer_bronze.png': 'Lightbringer (Bronze)',\n  'emblems/emblemicon_lightbringer_gold.png': 'Lightbringer (Gold)',\n  'emblems/emblemicon_lightbringer_none.png': 'Lightbringer (None)',\n  'emblems/emblemicon_lightbringer_platinum.png': 'Lightbringer (Platinum)',\n  'emblems/emblemicon_lightbringer_silver.png': 'Lightbringer (Silver)',\n  'emblems/emblemicon_malicious_bronze.png': 'Malicious (Bronze)',\n  'emblems/emblemicon_malicious_gold.png': 'Malicious (Gold)',\n  'emblems/emblemicon_malicious_none.png': 'Malicious (None)',\n  'emblems/emblemicon_malicious_platinum.png': 'Malicious (Platinum)',\n  'emblems/emblemicon_malicious_silver.png': 'Malicious (Silver)',\n  'emblems/emblemicon_unbroken_bronze.png': 'Unbroken (Bronze)',\n  'emblems/emblemicon_unbroken_gold.png': 'Unbroken (Gold)',\n  'emblems/emblemicon_unbroken_none.png': 'Unbroken (None)',\n  'emblems/emblemicon_unbroken_platinum.png': 'Unbroken (Platinum)',\n  'emblems/emblemicon_unbroken_silver.png': 'Unbroken (Silver)',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'help/help_levelicon_killer.png': 'Killer',\n  'help/help_levelicon_survivor.png': 'Survivor',\n  'help/iconhelp_addons.png': 'Add-Ons',\n  'help/iconhelp_altruism.png': 'Altruism',\n  'help/iconhelp_archivesgeneral.png': 'Archives (General)',\n  'help/iconhelp_archivesquests.png': 'Archives (Quests)',\n  'help/iconhelp_archivesrewards.png': 'Archives (Rewards)',\n  'help/iconhelp_auras.png': 'Auras',\n  'help/iconhelp_basement.png': 'Basement',\n  'help/iconhelp_bloodlust.png': 'Bloodlust',\n  'help/iconhelp_bloodpoints.png': 'Bloodpoints',\n  'help/iconhelp_bloodstains.png': 'Bloodstains',\n  'help/iconhelp_bloodweb.png': 'Bloodweb',\n  'help/iconhelp_breakinggenerators.png': 'Breaking Generators',\n  'help/iconhelp_carrysurvivor.png': 'Carrying Survivors',\n  'help/iconhelp_chase.png': 'Chase',\n  'help/iconhelp_chests.png': 'Chests',\n  'help/iconhelp_cooperation.png': 'Cooperation',\n  'help/iconhelp_crows.png': 'Crows',\n  'help/iconhelp_dailyrituals.png': 'Daily Rituals',\n  'help/iconhelp_dbdlogo.png': 'DBD Logo',\n  'help/iconhelp_dying.png': 'Dying',\n  'help/iconhelp_endgame.png': 'Endgame Collapse',\n  'help/iconhelp_entity.png': 'Entity',\n  'help/iconhelp_exitgates.png': 'Exit Gates',\n  'help/iconhelp_fear.png': 'Fear',\n  'help/iconhelp_generators.png': 'Generators',\n  'help/iconhelp_hatch.png': 'Hatch',\n  'help/iconhelp_hearing.png': 'Hearing',\n  'help/iconhelp_hiddenkiller.png': 'Hidden Killer',\n  'help/iconhelp_hookstruggle.png': 'Hook Struggle',\n  'help/iconhelp_howtowin_killers.png': 'How To Win (Killers)',\n  'help/iconhelp_howtowin_survivors.png': 'How To Win (Survivors)',\n  'help/iconhelp_injured.png': 'Injured State',\n  'help/iconhelp_interrupt.png': 'Action Interrupt',\n  'help/iconhelp_items.png': 'Items',\n  'help/iconhelp_killervision.png': 'Killer Vision',\n  'help/iconhelp_loadingmissing.png': 'Unused / Loading Missing',\n  'help/iconhelp_loadout.png': 'Loadout',\n  'help/iconhelp_lockers.png': 'Lockers',\n  'help/iconhelp_meathooks.png': 'Meat Hooks',\n  'help/iconhelp_missing.png': 'Unused / Missing',\n  'help/iconhelp_momentomori.png': 'Mori',\n  'help/iconhelp_note.png': 'Note',\n  'help/iconhelp_obsession.png': 'Obsession',\n  'help/iconhelp_offerings.png': 'Offerings',\n  'help/iconhelp_perks.png': 'Perks',\n  'help/iconhelp_procedural.png': 'Procedural',\n  'help/iconhelp_proficiency.png': 'Proficiency',\n  'help/iconhelp_proficiencylist.png': 'Proficiency List',\n  'help/iconhelp_sabotage.png': 'Sabotage',\n  'help/iconhelp_scratchmarks.png': 'Scratch Marks',\n  'help/iconhelp_shrineofsecrets.png': 'Shrine of Secrets',\n  'help/iconhelp_skillchecks.png': 'Skill Checks',\n  'help/iconhelp_slashing.png': 'Slashing',\n  'help/iconhelp_sounds.png': 'Sounds',\n  'help/iconhelp_statuseffectlist.png': 'Status Effect List',\n  'help/iconhelp_statuseffects.png': 'Status Effects',\n  'help/iconhelp_stealth.png': 'Stealth',\n  'help/iconhelp_teachables.png': 'Teachables',\n  'help/iconhelp_topicmissing.png': 'Unused / Topic Missing',\n  'help/iconhelp_totems.png': 'Totems',\n  'help/iconhelp_vaultpalettes.png': 'Vaulting / Pallets',\n  'helploading/iconhelploading_addons.png': 'Add-Ons',\n  'helploading/iconhelploading_bloodpoints.png': 'Bloodpoints',\n  'helploading/iconhelploading_cannibal.png': 'Cannibal',\n  'helploading/iconhelploading_clown.png': 'Clown',\n  'helploading/iconhelploading_crows.png': 'Crows',\n  'helploading/iconhelploading_doctor.png': 'Doctor',\n  'helploading/iconhelploading_generators.png': 'Generators',\n  'helploading/iconhelploading_ghost.png': 'Ghostface',\n  'helploading/iconhelploading_hag.png': 'Hag',\n  'helploading/iconhelploading_hatch.png': 'Hatch',\n  'helploading/iconhelploading_health.png': 'Health',\n  'helploading/iconhelploading_hillbilly.png': 'Hillbilly',\n  'helploading/iconhelploading_hook.png': 'Hook',\n  'helploading/iconhelploading_huntress.png': 'Huntress',\n  'helploading/iconhelploading_info.png': 'Info',\n  'helploading/iconhelploading_items.png': 'Items',\n  'helploading/iconhelploading_killer.png': 'Killer',\n  'helploading/iconhelploading_killervision.png': 'Killer Vision',\n  'helploading/iconhelploading_legion.png': 'Legion',\n  'helploading/iconhelploading_lore.png': 'Lore',\n  'helploading/iconhelploading_nightmare.png': 'Nightmare',\n  'helploading/iconhelploading_nurse.png': 'Nurse',\n  'helploading/iconhelploading_offering.png': 'Offering',\n  'helploading/iconhelploading_pig.png': 'Pig',\n  'helploading/iconhelploading_plague.png': 'Plague',\n  'helploading/iconhelploading_players.png': 'Players',\n  'helploading/iconhelploading_settings.png': 'Settings',\n  'helploading/iconhelploading_shape.png': 'Shape',\n  'helploading/iconhelploading_skillcheck.png': 'Skill Check',\n  'helploading/iconhelploading_sound.png': 'Sound',\n  'helploading/iconhelploading_spirit.png': 'Spirit',\n  'helploading/iconhelploading_survivor.png': 'Survivor',\n  'helploading/iconhelploading_totem.png': 'Totem',\n  'helploading/iconhelploading_trapper.png': 'Trapper',\n  'helploading/iconhelploading_wraith.png': 'Wraith',\n  'helploading/qatar/iconhelploading_demogorgon.png': 'Demogorgon',\n  'helploading/sweden/iconhelploading_sk.png': 'Oni',\n  'helploading/ukraine/iconhelploading_uk.png': 'Deathslinger',\n  'helploading/wales/iconhelploading_wales.png': 'Executioner',\n  'helploading/aurora/iconhelploading_twins.png': 'The Twins',\n  'helploading/yemen/iconhelploading_k21.png': 'Blight',\n  'helploading/comet/iconhelploading_trickster.png': 'Trickster',\n  'helploading/eclipse/iconhelploading_t-virus.png': 'T-Virus',\n  'helploading/eclipse/iconhelploading_tyrantmutations.png': 'Tyrant Mutations',\n  'helploading/gemini/iconhelploading_summonsofpain.png': 'Summons of Pain',\n  'help/iconhelp_grades.png': 'Grades',\n  'help/iconhelp_scourgehooks.png': 'Scourge Hooks',\n  'helploading/ion/t_iconhelploading_birdsoftorment.png': 'Birds of Torment',\n};\n\nexport default function getLanguage(tag: string) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'items/anniversary/iconitems_flashlight_anniversary2020.png':\n    '4th Anniversary Flashlight',\n  'items/anniversary/iconitems_medkit_anniversary2020.png':\n    '4th Anniversary MedKit',\n  'items/anniversary/iconitems_partypopper.png': 'Party Popper',\n  'items/halloween/iconitems_flashlighthalloween.png': 'Halloween Flashlight',\n  'items/halloween/iconitems_medkithalloween.png': 'Halloween Medkit',\n  'items/iconitems_brokenkey.png': 'Broken Key',\n  'items/iconitems_chinesefirecracker.png': 'Chinese Firecracker',\n  'items/iconitems_dullkey.png': 'Dull Key',\n  'items/iconitems_firstaidkit.png': 'First Aid Kit',\n  'items/iconitems_flashlight.png': 'Flashlight',\n  'items/iconitems_flashlightsport.png': 'Sport Flashlight',\n  'items/iconitems_flashlightutility.png': 'Utility Flashlight',\n  'items/iconitems_key.png': 'Key',\n  'items/iconitems_map.png': 'Map',\n  'items/iconitems_medkit.png': 'MedKit',\n  'items/iconitems_rainbowmap.png': 'Rainbow Map',\n  'items/iconitems_rangersaidkit.png': \"Ranger's Aid Kit\",\n  'items/iconitems_rundownaidkit.png': 'Camping Aid Kit',\n  'items/iconitems_toolbox.png': 'Toolbox',\n  'items/iconitems_toolboxalexs.png': \"Alex's Toolbox\",\n  'items/iconitems_toolboxcommodious.png': 'Commodius Toolbox',\n  'items/iconitems_toolboxengineers.png': \"Engineer's Toolbox\",\n  'items/iconitems_toolboxmechanics.png': \"Mechanic's Toolbox\",\n  'items/iconitems_toolboxwornout.png': 'Worn-Out Tools',\n  'items/winterevent/iconitems_wintereventfirecracker.png':\n    'Winter Firecracker',\n  'items/lunarevent/iconitems_toolboxlunar.png': 'Lunar Toolbox',\n  'items/limited/iconitems_flashbanggrenade.png': 'Flashbang Grenade',\n  'items/limited/iconitems_limiteditemvaccine.png': 'Vaccine',\n  'items/anniversary/iconitems_toolbox_anniversary2021.png': '2021 Toolbox',\n  'items/iconitems_carriedbody.png': 'Carried Body',\n  'items/limited/iconitems_limitedlamentconfiguration.png':\n    'Limited Lament Configuration',\n  'items/iconitems_toolboxcommodious_-_copy.png': 'Toolbox (Copy)',\n  'items/limited/iconitems_limitedfragilemirror.png': 'Limited Fragile Mirror',\n  'items/limited/iconitems_limitedrepairedmirror.png':\n    'Limited Repaired Mirror',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'favors/anniversary/iconfavors_bloodypartystreamers.png':\n    'Bloody Party Streamers',\n  'favors/anniversary/iconfavors_escapecake.png': 'Escape! Cake',\n  'favors/anniversary/iconfavors_gruesomegateau.png': 'Gruesome Gateau',\n  'favors/anniversary/iconfavors_survivorpudding.png': 'Survivor Pudding',\n  'favors/cannibal/iconfavors_bonesplinter.png': 'Bone Splinter',\n  'favors/dlc2/iconfavors_blacksplinter.png': 'Black Splinter',\n  'favors/dlc2/iconfavors_decrepitclapboard.png': 'Decrepit Clapboard',\n  'favors/dlc2/iconfavors_harvestfestivalleaflet.png':\n    'Harvest Festival Leaflet',\n  'favors/dlc2/iconfavors_stroderealtykey.png': 'Strode Realty Key',\n  'favors/dlc3/iconfavors_fumingcordage.png': 'Fuming Cordage',\n  'favors/dlc3/iconfavors_fumingwelcomesign.png': 'Fuming Welcome Sign',\n  'favors/dlc3/iconfavors_granmascookbook.png': \"Grandma's Cookbook\",\n  'favors/dlc3/iconfavors_muddysplinter.png': 'Muddy Splinter',\n  'favors/dlc4/iconfavors_emergencycertificate.png': 'Emergency Certificate',\n  'favors/dlc4/iconfavors_psychiatricassessmentreport.png':\n    'Psychiatric Assessment Report',\n  'favors/dlc4/iconfavors_shatteredglasses.png': 'Shattered Glasses',\n  'favors/dlc4/iconfavors_shocksplinter.png': 'Shock Splinter',\n  'favors/dlc5/iconfavors_childrensbook.png': \"Children's Book\",\n  'favors/dlc5/iconfavors_paintedriverrock.png': 'Painted River Rock',\n  'favors/dlc5/iconfavors_thelastmask.png': 'The Last Mask',\n  'favors/england/iconfavors_smokingsplinter.png': 'Smoking Splinter',\n  'favors/england/iconfavors_thepiedpiper.png': 'The Pied Piper',\n  'favors/finland/iconfavors_glasssplinter.png': 'Glass Splinter',\n  'favors/finland/iconfavors_jigsawpiece.png': 'Jigsaw Piece',\n  'favors/haiti/iconfavors_yamaokascrest.png': 'Yamaoka Family Crest',\n  'favors/halloween/iconfavors_pustulapetals.png': 'Pustula Petals',\n  'favors/iconfavors_ardentravenwreath.png': 'Ardent Raven Wreath',\n  'favors/iconfavors_ardentshrikewreath.png': 'Ardent Shrike Wreath',\n  'favors/iconfavors_ardentspottedowlwreath.png': 'Ardent Spotted Owl Wreath',\n  'favors/iconfavors_ardenttanagerwreath.png': 'Ardent Tanager Wreath',\n  'favors/iconfavors_azarovskey.png': \"Azarov's Key\",\n  'favors/iconfavors_blacksaltstatuette.png': 'Black Salt Statuette',\n  'favors/iconfavors_boglaurelsachet.png': 'Bog Laurel Sachet',\n  'favors/iconfavors_boundenvelope.png': 'Bound Envelope',\n  'favors/iconfavors_cattletag28.png': 'Cattle Tag-28',\n  'favors/iconfavors_cattletag81.png': 'Coldwind Cattle Tag-81',\n  'favors/iconfavors_chalkpouch.png': 'Chalk Pouch',\n  'favors/iconfavors_charredweddingphotograph.png':\n    'Charred Wedding Photograph',\n  'favors/iconfavors_clearreagent.png': 'Clear Reagent',\n  'favors/iconfavors_creamchalkpouch.png': 'Cream Chalk Pouch',\n  'favors/iconfavors_crecentmoonbouquet.png': 'Crescent Moon Bouquet',\n  'favors/iconfavors_crispleafamaranthsachet.png': 'Crispleaf Amaranth Sachet',\n  'favors/iconfavors_cutcoin.png': 'Cut Coin',\n  'favors/iconfavors_devoutravenwreath.png': 'Devout Raven Wreath',\n  'favors/iconfavors_devoutshrikewreath.png': 'Devout Shrike Wreath',\n  'favors/iconfavors_devoutspottedowlwreath.png': 'Devout Spotted Owl Wreath',\n  'favors/iconfavors_devouttanagerwreath.png': 'Devout Tanager Wreath',\n  'favors/iconfavors_faintreagent.png': 'Faint Reagent',\n  'favors/iconfavors_fragrantboglaurel.png': 'Fragrant Bog Laurel',\n  'favors/iconfavors_fragrantcrispleafamaranth.png':\n    'Fragrant Crispleaf Amaranth',\n  'favors/iconfavors_fragrantprimroseblossom.png': 'Fragrant Primrose Blossom',\n  'favors/iconfavors_fragrantsweetwilliam.png': 'Fragrant Sweet William',\n  'favors/iconfavors_freshboglaurel.png': 'Fresh Bog Laurel',\n  'favors/iconfavors_freshcrispleafamaranth.png': 'Fresh Crispleaf Amaranth',\n  'favors/iconfavors_freshprimroseblossom.png': 'Fresh Primrose Blossom',\n  'favors/iconfavors_freshsweetwilliam.png': 'Fresh Sweet William',\n  'favors/iconfavors_fullmoonbouquet.png': 'Full Moon Bouquet',\n  'favors/iconfavors_hazyreagent.png': 'Hazy Reagent',\n  'favors/iconfavors_heartlocket.png': 'Heart Locket',\n  'favors/iconfavors_hollowshell.png': 'Hollow Shell',\n  'favors/iconfavors_ivorychalkpouch.png': 'Ivory Chalk Pouch',\n  'favors/iconfavors_jarofsaltylips.png': \"Vigo's Jar of Salty Lips\",\n  'favors/iconfavors_lunacyticket.png': 'Lunacy Ticket',\n  'favors/iconfavors_macmillianledgerpage.png': 'MacMillan Ledger Page',\n  'favors/iconfavors_macmilliansphalanxbone.png': \"MacMillan's Phalanx Bone\",\n  'favors/iconfavors_moldyoak.png': 'Moldy Oak',\n  'favors/iconfavors_momentomoricypress.png': 'Cypress Memento Mori',\n  'favors/iconfavors_momentomoriebony.png': 'Ebony Memento Mori',\n  'favors/iconfavors_momentomoriivory.png': 'Ivory Memento Mori',\n  'favors/iconfavors_murkyreagent.png': 'Murky Reagent',\n  'favors/iconfavors_newmoonbouquet.png': 'New Moon Bouquet',\n  'favors/iconfavors_pelliottlunacyticket.png': 'P.Elliott Lunacy Ticket',\n  'favors/iconfavors_petrifiedoak.png': 'Petrified Oak',\n  'favors/iconfavors_plateshredded.png': 'Shredded Plate',\n  'favors/iconfavors_platevirginia.png': 'Virginia Plate',\n  'favors/iconfavors_primroseblossomsachet.png': 'Primrose Blossom Sachet',\n  'favors/iconfavors_putridoak.png': 'Putrid Oak',\n  'favors/iconfavors_quartermoonbouquet.png': 'Quarter Moon Bouquet',\n  'favors/iconfavors_ravenwreath.png': 'Raven Wreath',\n  'favors/iconfavors_rottenoak.png': 'Rotten Oak',\n  'favors/iconfavors_saltpouch.png': 'Salt Pouch',\n  'favors/iconfavors_scratchedcoin.png': 'Scratched Coin',\n  'favors/iconfavors_sealedenvelope.png': 'Sealed Envelope',\n  'favors/iconfavors_shinycoin.png': 'Shiny Coin',\n  'favors/iconfavors_shrikewreath.png': 'Shrike Wreath',\n  'favors/iconfavors_shroudofbinding.png': 'Shroud of Binding',\n  'favors/iconfavors_shroudofseparation.png': 'Shroud of Separation',\n  'favors/iconfavors_shroudofunion.png': 'Shroud of Union',\n  'favors/iconfavors_signedledgerpage.png': 'Signed Ledger Page',\n  'favors/iconfavors_spottedowlwreath.png': 'Spotted Owl Wreath',\n  'favors/iconfavors_sweetwilliamsachet.png': 'Sweet William Sachet',\n  'favors/iconfavors_tanagerwreath.png': 'Tanager Wreath',\n  'favors/iconfavors_tarnishedcoin.png': 'Tarnished Coin',\n  'favors/iconfavors_vigosshroud.png': \"Vigo's Shroud\",\n  'favors/iconfavors_wardblack.png': 'Black Ward',\n  'favors/iconfavors_wardwhite.png': 'White Ward',\n  'favors/kenya/iconfavors_damagedphoto.png': 'Damaged Photo',\n  'favors/lunarnewyear/iconfavors_redmoneypacket.png': 'Red Envelope',\n  'favors/qatar/iconfavors_hawkinsnationallaboratoryid.png':\n    'Hawkins National Laboratory I.D. ',\n  'favors/summer/iconfavors_bbqinvitation.png': 'BBQ Invitation',\n  'favors/ukraine/iconfavors_dustynoose.png': 'Dusty Noose',\n  'favors/iconfavors_graduationcap.png': 'Graduation Cap',\n  'favors/anniversary/iconfavors_4thanniversary.png': 'Ghastly Gateau',\n  'favors/yemen/iconfavors_annotatedblueprint.png': 'Annotated Blueprint',\n  'favors/yemen/iconfavors_bloodiedblueprint.png': 'Bloodied Blueprint',\n  'favors/yemen/iconfavors_tornblueprint.png': 'Torn Blueprint',\n  'favors/yemen/iconfavors_vigosblueprint.png': \"Vigo's Blueprint\",\n  'favors/yemen/iconfavors_wardsacrificial.png': 'Sacrificial Ward',\n  'favors/wales/iconfavors_marysletter.png': \"Mary's Letter\",\n  'favors/anniversary/iconsfavors_5thanniversary.png': '5th Anniversary',\n  'favors/eclipse/iconsfavors_rpdbadge.png': 'RPD Badge',\n  'favors/anniversary/iconfavors_5thanniversary.png': '5th Anniversary',\n  'favors/xp/iconfavors_blacktea.png': 'Black Tea',\n  'favors/xp/iconfavors_blankpostcard.png': 'Blank Post',\n  'favors/xp/iconfavors_bloodstonechalice.png': 'Blood Stone Chalice',\n  'favors/xp/iconfavors_bonedoll.png': 'Bone Doll',\n  'favors/xp/iconfavors_burdocktea.png': 'Burdock Tea',\n  'favors/xp/iconfavors_ceramicchalice.png': 'Ceramic Chalice',\n  'favors/xp/iconfavors_claydoll.png': 'Clay Doll',\n  'favors/xp/iconfavors_copperchalice.png': 'Copper Chalice',\n  'favors/xp/iconfavors_crumpledpostcard.png': 'Crumpled Postcard',\n  'favors/xp/iconfavors_fleshdoll.png': 'Flesh Doll',\n  'favors/xp/iconfavors_lotusleaftea.png': 'Lotus Leaf Tea',\n  'favors/xp/iconfavors_loverspostcard.png': \"Lover's Postcard\",\n  'favors/xp/iconfavors_milktea.png': 'Milk Tea',\n  'favors/xp/iconfavors_stampedpostcard.png': 'Stamped Postcard',\n  'favors/xp/iconfavors_thorndoll.png': 'Thorn Doll',\n  'favors/xp/iconfavors_woodenchalice.png': 'Wooden Chalice',\n  'favors/halloween2021/iconfavors_cursedseed.png':\n    'Cursed Seed (Halloween 2021)',\n  'favors/ion/iconfavors_crowseye.png': 'Crows Eye',\n};\n\nexport default function getLanguage(tag: string) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'perks/ash/iconperks_buckleup.png': 'Survivor / Buckle Up',\n  'perks/ash/iconperks_flipflop.png': 'Survivor / Flip-Flop',\n  'perks/ash/iconperks_mettleofman.png': 'Survivor / Mettle of Man',\n  'perks/cannibal/iconperks_bbqandchili.png': 'Killer / Barbecue & Chili',\n  'perks/cannibal/iconperks_franklinsloss.png': \"Killer / Franklin's Demise\",\n  'perks/cannibal/iconperks_knockout.png': 'Killer / Knock Out',\n  'perks/dlc2/iconperks_decisivestrike.png': 'Survivor / Decisive Strike',\n  'perks/dlc2/iconperks_dyinglight.png': 'Killer / Dying Light',\n  'perks/dlc2/iconperks_objectofobsession.png':\n    'Survivor / Object of Obsession',\n  'perks/dlc2/iconperks_playwithyourfood.png': 'Killer / Play with your food',\n  'perks/dlc2/iconperks_savethebestforlast.png':\n    'Killer / Save the best for last',\n  'perks/dlc2/iconperks_solesurvivor.png': 'Survivor / Sole Survivor',\n  'perks/dlc3/iconperks_aceinthehole.png': 'Survivor / Ace in the Hole',\n  'perks/dlc3/iconperks_devourhope.png': 'Killer / Hex: Devour Hope',\n  'perks/dlc3/iconperks_openhanded.png': 'Survivor / Open-Handed',\n  'perks/dlc3/iconperks_ruin.png': 'Killer / Hex: Ruin',\n  'perks/dlc3/iconperks_thethirdseal.png': 'Killer / Hex: The Third Seal',\n  'perks/dlc3/iconperks_thrillofthehunt.png':\n    'Killer / Hex: Thrill of the Hunt',\n  'perks/dlc3/iconperks_uptheante.png': 'Survivor / Up the Ante',\n  'perks/dlc4/iconperks_alert.png': 'Survivor / Alert',\n  'perks/dlc4/iconperks_generatorovercharge.png': 'Killer / Overcharge',\n  'perks/dlc4/iconperks_lithe.png': 'Survivor / Lithe',\n  'perks/dlc4/iconperks_monitorandabuse.png': 'Killer / Monitor & Abuse',\n  'perks/dlc4/iconperks_overwhelmingpresence.png':\n    'Killer / Overwhelming Presence',\n  'perks/dlc4/iconperks_technician.png': 'Survivor / Technician',\n  'perks/dlc5/iconperks_beastofprey.png': 'Killer / Beast of Prey',\n  'perks/dlc5/iconperks_deadhard.png': 'Survivor / Dead Hard',\n  'perks/dlc5/iconperks_huntresslullaby.png': 'Killer / Hex: Huntress Lullaby',\n  'perks/dlc5/iconperks_nomither.png': 'Survivor / No Mither',\n  'perks/dlc5/iconperks_territorialimperative.png':\n    'Killer / Territorial Imperative',\n  'perks/dlc5/iconperks_weregonnaliveforever.png':\n    \"Survivor / We're Gonna Live Forever\",\n  'perks/england/iconperks_bloodwarden.png': 'Killer / Blood Warden',\n  'perks/england/iconperks_fireup.png': 'Killer / Fire Up',\n  'perks/england/iconperks_pharmacy.png': 'Survivor / Pharmacy',\n  'perks/england/iconperks_rememberme.png': 'Killer / Remember Me',\n  'perks/england/iconperks_vigil.png': 'Survivor / Vigil',\n  'perks/england/iconperks_wakeup.png': 'Survivor / Wake Up!',\n  'perks/finland/iconperks_detectiveshunch.png': \"Survivor / Detective's Hunch\",\n  'perks/finland/iconperks_hangmanstrick.png': \"Killer / Hangman's Trick\",\n  'perks/finland/iconperks_makeyourchoice.png': 'Killer / Make your Choice',\n  'perks/finland/iconperks_stakeout.png': 'Survivor / Stake Out',\n  'perks/finland/iconperks_surveillance.png': 'Killer / Surveillance',\n  'perks/finland/iconperks_tenacity.png': 'Survivor / Tenacity',\n  'perks/guam/iconperks_bamboozle.png': 'Killer / Bamboozle',\n  'perks/guam/iconperks_coulrophobia.png': 'Killer / Coulrophobia',\n  'perks/guam/iconperks_popgoestheweasel.png': 'Killer / Pop Goes the Weasel',\n  'perks/haiti/iconperks_autodidact.png': 'Survivor / Autodidact',\n  'perks/haiti/iconperks_deliverance.png': 'Survivor / Deliverance',\n  'perks/haiti/iconperks_diversion.png': 'Survivor / Diversion',\n  'perks/haiti/iconperks_hatred.png': 'Killer / Rancor',\n  'perks/haiti/iconperks_hauntedground.png': 'Killer / Hex: Haunted Ground',\n  'perks/haiti/iconperks_spiritfury.png': 'Killer / Spirit Fury',\n  'perks/iconperks_adrenaline.png': 'Survivor / Adrenaline',\n  'perks/iconperks_agitation.png': 'Killer / Agitation',\n  'perks/iconperks_anursescalling.png': \"Killer / A Nurse's Calling\",\n  'perks/iconperks_balancedlanding.png': 'Survivor / Balanced Landing',\n  'perks/iconperks_bittermurmur.png': 'Killer / Bitter Murmur',\n  'perks/iconperks_bloodhound.png': 'Killer / Bloodhound',\n  'perks/iconperks_bond.png': 'Survivor / Bond',\n  'perks/iconperks_botanyknowledge.png': 'Survivor / Botany Knowledge',\n  'perks/iconperks_brutalstrength.png': 'Killer / Brutal Strength',\n  'perks/iconperks_calmspirit.png': 'Survivor / Calm Spirit',\n  'perks/iconperks_darksense.png': 'Survivor / Dark Sense',\n  'perks/iconperks_deerstalker.png': 'Killer / Deerstalker',\n  'perks/iconperks_dejavu.png': 'Survivor / Deja Vu',\n  'perks/iconperks_distressing.png': 'Killer / Distressing',\n  'perks/iconperks_empathy.png': 'Survivor / Empathy',\n  'perks/iconperks_enduring.png': 'Killer / Enduring',\n  'perks/iconperks_hope.png': 'Survivor / Hope',\n  'perks/iconperks_insidious.png': 'Killer / Insidious',\n  'perks/iconperks_irongrasp.png': 'Killer / Iron Grasp',\n  'perks/iconperks_ironwill.png': 'Survivor / Iron Will',\n  'perks/iconperks_kindred.png': 'Survivor / Kindred',\n  'perks/iconperks_laststanding.png': 'Survivor / Last Standing',\n  'perks/iconperks_leader.png': 'Survivor / Leader',\n  'perks/iconperks_lightborn.png': 'Killer / Lightborn',\n  'perks/iconperks_lightweight.png': 'Survivor / Lightweight',\n  'perks/iconperks_monstrousshrine.png': 'Killer / Monstrous Shrine',\n  'perks/iconperks_nooneescapesdeath.png': 'Killer / Hex: No One Escapes Death',\n  'perks/iconperks_nooneleftbehind.png': 'Survivor / No One Left Behind',\n  'perks/iconperks_plunderersinstinct.png': \"Survivor / Plunderer's Instinct\",\n  'perks/iconperks_predator.png': 'Killer / Predator',\n  'perks/iconperks_premonition.png': 'Survivor / Premonition',\n  'perks/iconperks_provethyself.png': 'Survivor / Prove Thyself',\n  'perks/iconperks_quickandquiet.png': 'Survivor / Quick & Quiet',\n  'perks/iconperks_resilience.png': 'Survivor / Resilience',\n  'perks/iconperks_saboteur.png': 'Survivor / Saboteur',\n  'perks/iconperks_selfcare.png': 'Survivor / Self-Care',\n  'perks/iconperks_shadowborn.png': 'Killer / Shadowborn',\n  'perks/iconperks_slipperymeat.png': 'Survivor / Slippery Meat',\n  'perks/iconperks_sloppybutcher.png': 'Killer / Sloppy Butcher',\n  'perks/iconperks_smallgame.png': 'Survivor / Small Game',\n  'perks/iconperks_spiesfromtheshadows.png': 'Killer / Spies from the Shadows',\n  'perks/iconperks_spinechill.png': 'Survivor / Spine Chill',\n  'perks/iconperks_sprintburst.png': 'Survivor / Sprint Burst',\n  'perks/iconperks_streetwise.png': 'Survivor / Streetwise',\n  'perks/iconperks_stridor.png': 'Killer / Stridor',\n  'perks/iconperks_thatanophobia.png': 'Killer / Thatanophobia',\n  'perks/iconperks_thisisnothappening.png': 'Survivor / This Is Not Happening',\n  'perks/iconperks_tinkerer.png': 'Killer / Tinkerer',\n  'perks/iconperks_unnervingpresence.png': 'Killer / Unnerving Presence',\n  'perks/iconperks_unrelenting.png': 'Killer / Unrelenting',\n  'perks/iconperks_urbanevasion.png': 'Survivor / Urban Evasion',\n  'perks/iconperks_wellmakeit.png': \"Survivor / We'll make it\",\n  'perks/iconperks_whispers.png': 'Killer / Whispers',\n  'perks/kate/iconperks_boilover.png': 'Survivor / Boil Over',\n  'perks/kate/iconperks_dancewithme.png': 'Survivor / Dance With Me',\n  'perks/kate/iconperks_windowsofopportunity.png':\n    'Survivor / Windows of Opportunity',\n  'perks/kenya/iconperks_aftercare.png': 'Survivor / Aftercare',\n  'perks/kenya/iconperks_breakdown.png': 'Survivor / Breakdown',\n  'perks/kenya/iconperks_discordance.png': 'Killer / Discordance',\n  'perks/kenya/iconperks_distortion.png': 'Survivor / Distortion',\n  'perks/kenya/iconperks_ironmaiden.png': 'Killer / Iron Maiden',\n  'perks/kenya/iconperks_madgrit.png': 'Killer / Mad Grit',\n  'perks/l4d/iconperks_borrowedtime.png': 'Survivor / Borrowed Time',\n  'perks/l4d/iconperks_leftbehind.png': 'Survivor / Left Behind',\n  'perks/l4d/iconperks_unbreakable.png': 'Survivor / Unbreakable',\n  'perks/mali/iconperks_corruptintervention.png':\n    'Killer / Corrupt Intervention',\n  'perks/mali/iconperks_darkdevotion.png': 'Killer / Dark Devotion',\n  'perks/mali/iconperks_headon.png': 'Survivor / Head On',\n  'perks/mali/iconperks_infectiousfright.png': 'Killer / Infectious Fright',\n  'perks/mali/iconperks_poised.png': 'Survivor / Poised',\n  'perks/mali/iconperks_solidarity.png': 'Survivor / Solidarity',\n  'perks/oman/iconperks_furtivechase.png': 'Killer / Furtive Chase',\n  'perks/oman/iconperks_imallears.png': \"Killer / I'm All Ears\",\n  'perks/oman/iconperks_thrillingtremors.png': 'Killer / Thrilling Tremors',\n  'perks/qatar/iconperks_babysitter.png': 'Survivor / Babysitter',\n  'perks/qatar/iconperks_bettertogether.png': 'Survivor / Better Together',\n  'perks/qatar/iconperks_camaraderie.png': 'Survivor / Camaraderie',\n  'perks/qatar/iconperks_cruelconfinement.png': 'Killer / Cruel Limits',\n  'perks/qatar/iconperks_fixated.png': 'Survivor / Fixated',\n  'perks/qatar/iconperks_innerstrength.png': 'Survivor / Inner Strength',\n  'perks/qatar/iconperks_mindbreaker.png': 'Killer / Mindbreaker',\n  'perks/qatar/iconperks_secondwind.png': 'Survivor / Second Wind',\n  'perks/qatar/iconperks_surge.png': 'Killer / Surge',\n  'perks/sweden/iconperks_anymeansnecessary.png':\n    'Survivor / Any Means Necessary',\n  'perks/sweden/iconperks_bloodecho.png': 'Killer / Blood Echo',\n  'perks/sweden/iconperks_breakout.png': 'Survivor / Breakout',\n  'perks/sweden/iconperks_luckybreak.png': 'Survivor / Lucky Break',\n  'perks/sweden/iconperks_nemesis.png': 'Killer / Nemesis',\n  'perks/sweden/iconperks_zanshintactics.png': 'Killer / Zanshin Tactics',\n  'perks/ukraine/iconperks_deadmanswitch.png': 'Killer / Dead Man’s Switch\\t',\n  'perks/ukraine/iconperks_forthepeople.png': 'Survivor / For the People',\n  'perks/ukraine/iconperks_gearhead.png': 'Killer / Gearhead',\n  'perks/ukraine/iconperks_hexretribution.png': 'Killer / Hex: Retribution',\n  'perks/ukraine/iconperks_offtherecord.png': 'Survivor / Off the Record',\n  'perks/ukraine/iconperks_redherring.png': 'Survivor / Red Herring',\n  'perks/wales/iconperks_bloodpact.png': 'Survivor / Blood Pact',\n  'perks/wales/iconperks_deathbound.png': 'Killer / Deathbound',\n  'perks/wales/iconperks_forcedpenance.png': 'Killer / Forced Penance',\n  'perks/wales/iconperks_repressedalliance.png':\n    'Survivor / Repressed Alliance',\n  'perks/wales/iconperks_soulguard.png': 'Survivor / Soul Guard',\n  'perks/wales/iconperks_trailoftorment.png': 'Killer / Trail of Torment',\n  'perks/yemen/iconperks_builttolast.png': 'Survivor / Built To Last',\n  'perks/yemen/iconperks_desperatemeasures.png':\n    'Survivor / Desperate Measures',\n  'perks/yemen/iconperks_dragonsgrip.png': \"Killer / Dragon's Grip\",\n  'perks/yemen/iconperks_hexbloodfavor.png': 'Killer / Hex: Blood Favor',\n  'perks/yemen/iconperks_hexundying.png': 'Killer / Hex: Undying',\n  'perks/yemen/iconperks_visionary.png': 'Survivor / Visionary',\n  'perks/aurora/iconperks_appraisal.png': 'Survivor / Appraisal',\n  'perks/aurora/iconperks_coupdegrace.png': 'Killer / Coup De Grace',\n  'perks/aurora/iconperks_deception.png': 'Survivor / Deception',\n  'perks/aurora/iconperks_hoarder.png': 'Killer / Hoarder',\n  'perks/aurora/iconperks_oppression.png': 'Killer / Oppression',\n  'perks/aurora/iconperks_powerstruggle.png': 'Survivor / Power Struggle',\n  'perks/comet/iconperks_fasttrack.png': 'Survivor / Fast Track',\n  'perks/comet/iconperks_hexcrowdcontrol.png': 'Killer / Hex: Crowd Control',\n  'perks/comet/iconperks_nowayout.png': 'Killer / No Way Out',\n  'perks/comet/iconperks_self-preservation.png': 'Survivor / Self Preservation',\n  'perks/comet/iconperks_smashhit.png': 'Survivor / Smash Hit',\n  'perks/comet/iconperks_starstruck.png': 'Killer / Star Struck',\n  'perks/eclipse/iconperks_bitethebullet.png': 'Survivor / Bite the Bullet',\n  'perks/eclipse/iconperks_blastmine.png': 'Survivor / Blast Mine',\n  'perks/eclipse/iconperks_counterforce.png': 'Survivor / Counter Force',\n  'perks/eclipse/iconperks_eruption.png': 'Killer / Eruption',\n  'perks/eclipse/iconperks_flashbang.png': 'Survivor / Flashbang',\n  'perks/eclipse/iconperks_hysteria.png': 'Killer / Hysteria',\n  'perks/eclipse/iconperks_lethalpursuer.png': 'Killer / Lethal Pursuer',\n  'perks/eclipse/iconperks_resurgence.png': 'Survivor / Resurgence',\n  'perks/eclipse/iconperks_rookiespirit.png': 'Survivor / Rookie Spirit',\n  'perks/gemini/iconperks_deadlock.png': 'Killer / Deadlock',\n  'perks/gemini/iconperks_hexplaything.png': 'Killer / Hex: Plaything',\n  'perks/gemini/iconperks_scourgehookgiftofpain.png':\n    'Killer / Scourge Hook: Gift of Pain',\n  'perks/nolicense/iconperks_bloodwarden.png': '[NO LICENSE] Blood Warden',\n  'perks/nolicense/iconperks_decisivestrike.png':\n    '[NO LICENSE] Decisive Strike',\n  'perks/nolicense/iconperks_dyinglight.png': '[NO LICENSE] Dying Light',\n  'perks/nolicense/iconperks_fireup.png': '[NO LICENSE] Fire Up',\n  'perks/nolicense/iconperks_objectofobsession.png':\n    '[NO LICENSE] Object of Obsession',\n  'perks/nolicense/iconperks_pharmacy.png': '[NO LICENSE] Pharmacy',\n  'perks/nolicense/iconperks_playwithyourfood.png':\n    '[NO LICENSE] Play With Your Food',\n  'perks/nolicense/iconperks_rememberme.png': '[NO LICENSE] Remember Me',\n  'perks/nolicense/iconperks_savethebestforlast.png':\n    '[NO LICENSE] Save The Best For Last',\n  'perks/nolicense/iconperks_solesurvivor.png': '[NO LICENSE] Sole Survivor',\n  'perks/nolicense/iconperks_vigil.png': '[NO LICENSE] Vigil',\n  'perks/nolicense/iconperks_wakeup.png': '[NO LICENSE] Wake Up',\n  'perks/hubble/iconperks_booncircleofhealing.png':\n    'Survivor / Boon: Circle of Healing',\n  'perks/hubble/iconperks_boonshadowstep.png': 'Survivor / Boon: Shadow Step',\n  'perks/hubble/iconperks_clairvoyance.png': 'Survivor / Clairvoyance',\n  'perks/qatar/iconperks_guardian.png': 'Survivor / Guardian',\n  'perks/qatar/iconperks_pushthroughit.png': 'Survivor / Push Through It',\n  'perks/qatar/iconperks_situationalawareness.png':\n    'Survivor / Situtational Awareness',\n  'perks/qatar/iconperks_survivalinstincts.png':\n    'Survivor / Survival Instincts',\n  'perks/ion/t_iconperks_boonexponential.png': 'Survivor / Boon: Exponential',\n  'perks/ion/t_iconperks_correctiveaction.png': 'Survivor / Corrective Action',\n  'perks/ion/t_iconperks_grimembrace.png': 'Killer / Grim Embrace',\n  'perks/ion/t_iconperks_hexpentimento.png': 'Killer / Hex: Pentimento',\n  'perks/ion/t_iconperks_overcome.png': 'Survivor / Overcome',\n  'perks/ion/t_iconperks_painresonance.png': 'Killer / Pain Resonance',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'powers/cannibal/iconpowers_bubbaschainsaw.png':\n    \"Cannibal / Bubba's Chainsaw\",\n  'powers/cannibal/iconpowers_tantrum.png': 'Cannibal / Tantrum',\n  'powers/dlc2/iconpowers_stalker1.png': 'Shape / Stalker 1',\n  'powers/dlc2/iconpowers_stalker2.png': 'Shape / Stalker 2',\n  'powers/dlc2/iconpowers_stalker3.png': 'Shape / Stalker 3',\n  'powers/dlc3/iconpowers_blackenedcatalyst.png': 'Hag / Blackened Catalyst',\n  'powers/dlc4/iconpowers_cartersspark.png': \"Doctor / Carter's Spark\",\n  'powers/dlc5/iconpowers_huntinghatchets.png': 'Huntress / Hunting Hatchets',\n  'powers/england/iconpowers_dreammaster.png': 'Nightmare / Dream Demon',\n  'powers/finland/iconpowers_reversebeartrap.png': \"Pig / Jigsaw's Baptism\",\n  'powers/guam/iconpowers_gasbomb.png': 'Clown / The Afterpiece Tonic',\n  'powers/guam/iconpowers_gasbomb2.png': 'Clown / The Afterpiece Antidote',\n  'powers/haiti/iconpowers_yamaokashaunting.png': \"Spirit / Yamaoka's Haunting\",\n  'powers/iconpowers_bell.png': 'Wraith / Wailing Bell',\n  'powers/iconpowers_breath.png': \"Nurse / Spencer's Last Breath\",\n  'powers/iconpowers_chainsaw.png': 'Hillbilly / Chainsaw',\n  'powers/iconpowers_trap.png': 'Trapper / Bear Trap',\n  'powers/kenya/iconpowers_feralfrenzy.png': 'Legion / Feral Frenzy',\n  'powers/mali/iconpowers_vilepurge.png': 'Plague / Vile Purge',\n  'powers/oman/iconpowers_ghostpower_activated.png':\n    'GhostFace / Night Shroud (Activated)',\n  'powers/oman/iconpowers_ghostpower_available.png':\n    'GhostFace / Night Shroud (Available)',\n  'powers/qatar/iconpowers_oftheabyss.png': 'Demogorgon / Of The Abyss',\n  'powers/sweden/iconpowers_yamaokaswrath_demon.png':\n    \"Oni / Yamaoka's Wrath (Demon)\",\n  'powers/sweden/iconpowers_yamaokaswrath.png': \"Oni / Yamaoka's Wrath\",\n  'powers/ukraine/iconpowers_uk_chainbreak.png':\n    'Deathslinger / The Redeemer (Chain Break)',\n  'powers/ukraine/iconpowers_uk.png': 'Deathslinger / The Redeemer',\n  'powers/wales/iconpowers_wales_ritesofjudgement.png':\n    'Executioner / Rites of Judgement',\n  'powers/yemen/iconpowers_k21.png': 'Blight / Blighted Corruption',\n  'powers/aurora/iconpowers_bloodbond_01.png': 'The Twins / Blood Bond 01',\n  'powers/aurora/iconpowers_bloodbond_02.png':\n    'The Twins / Blood Bond 02 (Bebeh)',\n  'powers/comet/iconpowers_showstopper_01.png':\n    'The Trickster / Showstopper 01',\n  'powers/comet/iconpowers_showstopper_02.png':\n    'The Trickster / Showstopper 02',\n  'powers/eclipse/iconpowers_t-virus1.png': 'Nemesis / T-Virus 01',\n  'powers/eclipse/iconpowers_t-virus2.png': 'Nemesis / T-Virus 02',\n  'powers/eclipse/iconpowers_t-virus3.png': 'Nemesis / T-Virus 03',\n  'powers/eclipse/iconpowers_tyrantmutations.png': 'Nemesis / Tryant Mutations',\n  'powers/gemini/iconpowers_summonsofpain.png': 'Pin Daddy / Summons of Pain',\n  'powers/comet/iconpowers_showstopper_03.png':\n    'The Trickster / Showstopper 03',\n  'powers/ion/t_iconpowers_birdsoftorment.png': 'The Artist / Birds Of Torment',\n  'powers/atl_hud_atk_punishmentoffdamned.png':\n    'HUD / Punishment Of The Damned',\n  'powers/atl_hud_kill_icon.png': 'HUD / Kill',\n  'powers/atl_hud_pb_drop.png': 'HUD / Drop',\n  'powers/atl_hud_pb_iconabsorb.png': 'HUD / Absorb',\n  'powers/atl_hud_pb_iconbloodfury.png': 'HUD / Blood Fury',\n  'powers/atl_hud_pb_icondash.png': 'HUD / Dash',\n  'powers/atl_hud_pb_icondemonstrike.png': 'HUD / Demon Strike',\n  'powers/atl_hud_pb_iconinvisibilitybell_02.png': 'HUD / Invisibility Bell',\n  'powers/atl_hud_pb_iconpunishment.png': 'HUD / Punishment',\n  'powers/atl_hud_pb_iconresetbeartrap.png': 'HUD / Reset Bear Trap',\n  'powers/atl_hud_pb_iconstalking.png': 'HUD / Stalking',\n  'powers/atl_hud_pb_iconstealth.png': 'HUD / Stealth',\n  'powers/atl_hud_pb_ritesofjudgement.png': 'HUD / Rites of Judgement',\n  'powers/qatar/atl_hud_pb_demogorgondashmode.png': 'HUD / Demo Dash',\n  'powers/qatar/atl_hud_pb_shred.png': 'HUD / Shred',\n  'powers/qatar/atl_hud_pb_traverseupdown.png': 'HUD / Traverse Upside-Down',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'statuseffects/iconstatuseffects_bleeding.png': 'Bleeding',\n  'statuseffects/iconstatuseffects_bloodlust.png': 'Bloodlust',\n  'statuseffects/iconstatuseffects_broken.png': 'Broken',\n  'statuseffects/iconstatuseffects_cleansing.png': 'Cleansing',\n  'statuseffects/iconstatuseffects_deepwound.png': 'Deep Wound',\n  'statuseffects/iconstatuseffects_endurance.png': 'Endurance',\n  'statuseffects/iconstatuseffects_exhausted.png': 'Exhausted',\n  'statuseffects/iconstatuseffects_expertise.png': 'Expertise',\n  'statuseffects/iconstatuseffects_exposed.png': 'Exposed',\n  'statuseffects/iconstatuseffects_healing.png': 'Healing',\n  'statuseffects/iconstatuseffects_hearing.png': 'Hearing',\n  'statuseffects/iconstatuseffects_hindered.png': 'Hindered',\n  'statuseffects/iconstatuseffects_luck.png': 'Luck',\n  'statuseffects/iconstatuseffects_madness.png': 'Madness',\n  'statuseffects/iconstatuseffects_mangled.png': 'Mangled',\n  'statuseffects/iconstatuseffects_oblivious.png': 'Oblivious',\n  'statuseffects/iconstatuseffects_progressionspeed.png': 'Progression Speed',\n  'statuseffects/iconstatuseffects_repairing.png': 'Repairing',\n  'statuseffects/iconstatuseffects_sabotaging.png': 'Sabotaging',\n  'statuseffects/iconstatuseffects_skillcheckdifficulty.png':\n    'Skill Check Difficulty',\n  'statuseffects/iconstatuseffects_skillcheckprobability.png':\n    'Skill Check Probability',\n  'statuseffects/iconstatuseffects_skills.png': 'Skills',\n  'statuseffects/iconstatuseffects_sleeppenalty.png': 'Sleep Penalty',\n  'statuseffects/iconstatuseffects_speed.png': 'Speed',\n  'statuseffects/iconstatuseffects_undetectable.png': 'Undetectable',\n  'statuseffects/iconstatuseffects_vision.png': 'Vision',\n  'statuseffects/iconstatuseffects_incapacitated.png': 'Incapacitated',\n  'statuseffects/iconstatuseffects_blessed.png': 'Blessed',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","const languageMap: { [key: string]: string } = {\n  'storetabs/categoryicon_body.png': 'Body',\n  'storetabs/categoryicon_charms.png': 'Charms',\n  'storetabs/categoryicon_hand.png': 'Hand',\n  'storetabs/categoryicon_head.png': 'Head',\n  'storetabs/categoryicon_legs.png': 'Legs',\n  'storetabs/categoryicon_masks.png': 'Masks',\n  'storetabs/categoryicon_outfits.png': 'Outfits',\n  'storetabs/categoryicon_torso.png': 'Torso',\n  'storetabs/categoryicon_upperbody.png': 'Upper Body',\n  'storetabs/categoryicon_weapons.png': 'Weapons',\n};\n\nexport default function getLanguage(tag) {\n  return languageMap[tag] || null;\n}\n","import log from '../../../utils/log';\nimport getLanguageItemAddon from './ItemAddons';\nimport getLanguagePortrait from './Portraits';\nimport getLanguageActions from './Actions';\nimport getLanguageRoot from './Root';\nimport getLanguageArchive from './Archive';\nimport getLanguageAuric from './AuricCellPacks';\nimport getLanguageDaily from './DailyRituals';\nimport getLanguageEmblems from './Emblems';\nimport getLanguageHelp from './Help';\nimport getLanguageItems from './Items';\nimport getLanguageOfferings from './Offerings';\nimport getLanguagePerks from './Perks';\nimport getLanguagePowers from './Powers';\nimport getLanguageStatus from './StatusEffects';\nimport getLanguageStoreTabs from './StoreTabs';\n\nfunction getDefaultLanguage(filePath: string) {\n  log.info(`Getting default language for ${filePath}`);\n  return filePath;\n}\n\nexport default function getLanguage(filePath: string) {\n  return (\n    getLanguageActions(filePath) ||\n    getLanguageItemAddon(filePath) ||\n    getLanguagePortrait(filePath) ||\n    getLanguageRoot(filePath) ||\n    getLanguageArchive(filePath) ||\n    getLanguageAuric(filePath) ||\n    getLanguageDaily(filePath) ||\n    getLanguageEmblems(filePath) ||\n    getLanguageHelp(filePath) ||\n    getLanguageItems(filePath) ||\n    getLanguageOfferings(filePath) ||\n    getLanguagePerks(filePath) ||\n    getLanguagePowers(filePath) ||\n    getLanguageStatus(filePath) ||\n    getLanguageStoreTabs(filePath) ||\n    getDefaultLanguage(filePath)\n  );\n}\n","export default function getLanguage(action: String) {\n  switch (action) {\n    case 'actions/iconaction_carriedbody.png':\n      return 'Carried Body';\n  }\n  return null;\n}\n","export default function getLanguage(portrait: String) {\n  switch (portrait) {\n    case 'charportraits/cm_charselect_portrait.png':\n      return 'Survivor / Claudette Morel';\n    case 'charportraits/df_charselect_portrait.png':\n      return 'Survivor / Dwight Fairfield';\n    case 'charportraits/hb_charselect_portrait.png':\n      return 'Killer / Hillbilly';\n    case 'charportraits/jp_charselect_portrait.png':\n      return 'Survivor / Jake Park';\n    case 'charportraits/mt_charselect_portrait.png':\n      return 'Survivor / Meg Thomas';\n    case 'charportraits/nk_charselect_portrait.png':\n      return 'Survivor / Nea Karlsson';\n    case 'charportraits/nr_charselect_portrait.png':\n      return 'Killer / Nurse';\n    case 'charportraits/tr_charselect_portrait.png':\n      return 'Killer / Trapper';\n    case 'charportraits/wr_charselect_portrait.png':\n      return 'Killer / Wraith';\n    case 'charportraits/ash/ms2_charselect_portrait.png':\n      return 'Survivor / Ash';\n    case 'charportraits/cannibal/ca_charselect_portrait.png':\n      return 'Killer / Cannibal';\n    case 'charportraits/dlc2/ls_charselect_portrait.png':\n      return 'Survivor / Laurie Strode';\n    case 'charportraits/dlc2/sh_charselect_portrait.png':\n      return 'Killer / Shape';\n    case 'charportraits/dlc3/av_charselect_portrait.png':\n      return 'Survivor / Ace Visconti';\n    case 'charportraits/dlc3/ha_charselect_portrait.png':\n      return 'Killer / Hag';\n    case 'charportraits/dlc4/do_charselect_portrait.png':\n      return 'Killer / Doctor';\n    case 'charportraits/dlc4/fm_charselect_portrait.png':\n      return 'Survivor / Feng Min';\n    case 'charportraits/dlc5/be_charselect_portrait.png':\n      return 'Killer / Huntress';\n    case 'charportraits/dlc5/dk_charselect_portrait.png':\n      return 'Survivor / David King';\n    case 'charportraits/england/qs_charselect_portrait.png':\n      return 'Survivor / Quentin Smith';\n    case 'charportraits/england/sd_charselect_portrait.png':\n      return 'Killer / Freddy Krueger';\n    case 'charportraits/finland/fk_charselect_portrait.png':\n      return 'Killer / Pig';\n    case 'charportraits/finland/fs_charselect_portrait.png':\n      return 'Survivor / Detective Tapp';\n    case 'charportraits/guam/gk_charselect_portrait.png':\n      return 'Killer / Clown';\n    case 'charportraits/guam/gs_charselect_portrait.png':\n      return 'Survivor / Kate Denson';\n    case 'charportraits/haiti/af_charselect_portrait.png':\n      return 'Survivor / Adam Francis';\n    case 'charportraits/haiti/hk_charselect_portrait.png':\n      return 'Killer / Spirit';\n    case 'charportraits/kenya/kk_charselect_portrait.png':\n      return 'Killer / Legion';\n    case 'charportraits/kenya/ks_charselect_portrait.png':\n      return 'Survivor / Jeff Johansen';\n    case 'charportraits/l4d/bo_charselect_portrait.png':\n      return 'Survivor / Bill Overbeck';\n    case 'charportraits/mali/mk_charselect_portrait.png':\n      return 'Killer / Plague';\n    case 'charportraits/mali/ms_charselect_portrait.png':\n      return 'Survivor / Jane Romero';\n    case 'charportraits/oman/ok_charselect_portrait.png':\n      return 'Killer / Ghostface';\n    case 'charportraits/qatar/qf_charselect_portrait.png':\n      return 'Survivor / Nancy Wheeler';\n    case 'charportraits/qatar/qk_charselect_portrait.png':\n      return 'Killer / Demogorgon';\n    case 'charportraits/qatar/qm_charselect_portrait.png':\n      return 'Survivor / Steve Harrington';\n    case 'charportraits/sweden/sk_charselect_portrait.png':\n      return 'Killer / Oni';\n    case 'charportraits/sweden/ss_charselect_portrait.png':\n      return 'Survivor / Yui Kimura';\n    case 'charportraits/ukraine/uk_charselect_portrait.png':\n      return 'Killer / Deathslinger';\n    case 'charportraits/ukraine/us_charselect_portrait.png':\n      return 'Survivor / Zarina Kassir';\n    case 'charportraits/wales/s22_charselect_portrait.png':\n      return 'Survivor / Cheryl Mason';\n    case 'charportraits/wales/k20_charselect_portrait.png':\n      return 'Killer / Executioner';\n    case 'charportraits/yemen/k21_charselect_portrait.png':\n      return 'Killer / Blight';\n    case 'charportraits/yemen/s23_charselect_portrait.png':\n      return 'Survivor / Felix Richter';\n    case 'charportraits/aurora/k22_charselect_portrait.png':\n      return 'Killer / The Twins';\n    case 'charportraits/aurora/s24_charselect_portrait.png':\n      return 'Survivor / Élodie Rakoto';\n    case 'charportraits/comet/k23_charselect_portrait.png':\n      return 'Killer / The Trickster';\n    case 'charportraits/comet/s25_charselect_portrait.png':\n      return 'Survivor / Yun-Jin Lee';\n    case 'charportraits/eclipse/k24_charselect_portrait.png':\n      return 'Killer / Nemesis';\n    case 'charportraits/eclipse/s26_charselect_portrait.png':\n      return 'Survivor / Jill Valentine';\n    case 'charportraits/eclipse/s27_charselect_portrait.png':\n      return 'Survivor / Leon Kennedy';\n    case 'charportraits/gemini/k25_charselect_portrait.png':\n      return 'Killer / Pin Daddy';\n    case 'charportraits/hubble/s22j_charselect_portrait.png':\n      return 'Survivor / James Sunderland';\n    case 'charportraits/hubble/s28_charselect_portrait.png':\n      return 'Survivor / Mikaela Reid';\n    case 'charportraits/ion/t_k26_charselect_portrait.png':\n      return 'Killer / The Artist';\n    case 'charportraits/ion/t_s29_charselect_portrait.png':\n      return 'Survivor / Jonah Vasquez';\n  }\n}\n","export default function getLanguage(rootDir: String) {\n  switch (rootDir) {\n    case 'actions':\n      return 'Actions';\n    case 'charportraits':\n      return 'Character Portraits';\n    case 'dailyrituals':\n      return 'Daily Rituals';\n    case 'archive':\n      return 'Archive';\n    case 'favors':\n      return 'Offerings';\n    case 'help':\n      return 'Help';\n    case 'itemaddons':\n      return 'Item Add-Ons';\n    case 'packs':\n      return 'Auric Cell Packs';\n    case 'items':\n      return 'Items';\n    case 'emblems':\n      return 'Emblems';\n    case 'perks':\n      return 'Perks';\n    case 'powers':\n      return 'Powers';\n    case 'helploading':\n      return 'Help/Loading';\n    case 'storetabs':\n      return 'Store Tabs';\n    case 'statuseffects':\n      return 'Status Effects';\n    case 'events':\n      return 'Events';\n    case 'storebackgrounds':\n      return 'Store Backgrounds';\n  }\n\n  return null;\n}\n","import React, { Component, ReactNode, useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport slugify from '@sindresorhus/slugify';\nimport uuid from 'react-uuid';\nimport getLanguage from '../../language/Language';\n\ntype MyProps = {\n  meta: any;\n  id: string;\n  show: boolean;\n  onHide: Function;\n};\n\nfunction buildImgRow(\n  images: Array<string>,\n  label: string,\n  colWidth: number = 12,\n  className: string,\n): ReactNode {\n  const cols = images.map((url: string, index: number) => {\n    return (\n      <Col key={uuid()}>\n        <Image src={url} className={className} fluid />\n      </Col>\n    );\n  });\n\n  const colClass = `col-${colWidth}`;\n\n  return (\n    <Card.Body>\n      <b>{label}</b>\n      <Row className=\"justify-content-center mt-2\">\n        <Col className={colClass}>\n          <Row className=\"flex-nowrap\">{cols}</Row>\n        </Col>\n      </Row>\n    </Card.Body>\n  );\n}\n\nexport default function PerkPackDetails(props: MyProps) {\n  const baseUrl = props.meta.previewDir;\n  let portraitImg: ReactNode = undefined;\n  let perkImg: ReactNode = undefined;\n\n  const capabilities: string[] = [];\n\n  const imgClass = '';\n\n  if (props.meta.hasPerks) {\n    capabilities.push('perks');\n    perkImg = buildImgRow(\n      [0, 1, 2, 3].map(i => {\n        return `${baseUrl}perks_${i}.png`;\n      }),\n      'Perks',\n      12,\n      imgClass,\n    );\n  }\n\n  if (props.meta.hasPortraits) {\n    capabilities.push('charportraits');\n    portraitImg = buildImgRow(\n      [0, 1, 2, 3].map(i => {\n        return `${baseUrl}portraits_${i}.png`;\n      }),\n      'Portraits',\n      12,\n      imgClass,\n    );\n  }\n\n  let offeringsImg: ReactNode = undefined;\n  if (props.meta.hasFavors) {\n    capabilities.push('favors');\n    offeringsImg = buildImgRow(\n      [0, 1, 2, 3, 4].map(i => {\n        return `${baseUrl}favors_${i}.png`;\n      }),\n      'Offerings',\n      12,\n      imgClass,\n    );\n  }\n\n  let itemImg: ReactNode = undefined;\n  if (props.meta.hasItems) {\n    capabilities.push('items');\n    itemImg = buildImgRow(\n      [0, 1, 2, 3, 4].map(i => {\n        return `${baseUrl}items_${i}.png`;\n      }),\n      'Items',\n      12,\n      imgClass,\n    );\n  }\n\n  let addonsImg: ReactNode = undefined;\n  if (props.meta.hasItemAddOns) {\n    capabilities.push('itemaddons');\n    addonsImg = buildImgRow(\n      [0, 1, 2, 3].map(i => {\n        return `${baseUrl}addons_${i}.png`;\n      }),\n      'Add-Ons',\n      12,\n      imgClass,\n    );\n  }\n\n  let powersImg: ReactNode = undefined;\n  if (props.meta.hasPowers) {\n    capabilities.push('powers');\n    powersImg = buildImgRow(\n      [0, 1, 2, 3].map(i => {\n        return `${baseUrl}powers_${i}.png`;\n      }),\n      'Killer Powers',\n      12,\n      imgClass,\n    );\n  }\n\n  let statusImg: ReactNode = undefined;\n  if (props.meta.hasStatusEffects) {\n    capabilities.push('statuseffects');\n    statusImg = buildImgRow(\n      [0, 1, 2, 3].map(i => {\n        return `${baseUrl}statusEffects_${i}.png`;\n      }),\n      'Status Effects',\n      12,\n      imgClass,\n    );\n  }\n\n  if (props.meta.hasActions) {\n    capabilities.push('actions');\n  }\n\n  if (props.meta.hasArchive) {\n    capabilities.push('archive');\n  }\n\n  if (props.meta.hasBanners) {\n    capabilities.push('banners');\n  }\n\n  if (props.meta.hasDailyRituals) {\n    capabilities.push('dailyrituals');\n  }\n\n  if (props.meta.hasEmblems) {\n    capabilities.push('emblems');\n  }\n\n  if (props.meta.hasEvents) {\n    capabilities.push('events');\n  }\n\n  if (props.meta.hasHelp) {\n    capabilities.push('help');\n  }\n\n  if (props.meta.hasHelpLoading) {\n    capabilities.push('helploading');\n  }\n\n  if (props.meta.hasStoreBackgrounds) {\n    capabilities.push('storebackgrounds');\n  }\n\n  if (props.meta.hasStoreTabs) {\n    capabilities.push('storetabs');\n  }\n\n  return (\n    <Modal\n      closeVariant=\"white\"\n      show={props.show}\n      size=\"xl\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      // @ts-ignore\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton closeVariant=\"white\">\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.meta.name}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Tabs defaultActiveKey=\"overview\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"overview\" title=\"Overview\">\n            <Card.Body>\n              <b>Description: </b>\n              <i>{props.meta.description}</i>\n              <br />\n              <b>Latest Chapter: </b>\n              <i>{props.meta.latestChapter}</i>\n            </Card.Body>\n            {perkImg}\n            {portraitImg}\n            {offeringsImg}\n            {itemImg}\n            {addonsImg}\n            {powersImg}\n            {statusImg}\n          </Tab>\n          {capabilities.map(capability => (\n            <Tab\n              key={slugify(getLanguage(capability).toLowerCase())}\n              eventKey={slugify(getLanguage(capability).toLowerCase())}\n              title={getLanguage(capability)}\n              className=\"text-center\"\n            >\n              <Image\n                className={imgClass}\n                src={`${baseUrl}gallery_${capability}.png`}\n                fluid\n              />\n            </Tab>\n          ))}\n        </Tabs>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\ntype MyProps = {\n  installInProgress: boolean;\n  onClick: Function;\n  progressText?: string;\n};\n\nexport default function PackInstallButton(props: MyProps) {\n  let label = 'Download';\n\n  if (props.installInProgress && props.progressText) {\n    label += ` (${props.progressText})`;\n  }\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        props.onClick();\n      }}\n      className=\"m-1\"\n    >\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n        className=\"mr-2\"\n        hidden={!props.installInProgress}\n      />\n      {label}\n    </Button>\n  );\n}\n","import React, { useState } from 'react';\n\ntype MyProps = {\n  name: string;\n  onClick: Function;\n};\n\nexport default function Author(props: MyProps) {\n  const authorLinks = props.name\n    .split(/\\+|&/)\n    .map(author => author.trim())\n    .map<React.ReactNode>((author, index) => {\n      const authorTrimmed = author.trim();\n      return (\n        <a\n          key={`author-${index}`}\n          href=\"#\"\n          onClick={e => {\n            e.preventDefault();\n            props.onClick(authorTrimmed);\n          }}\n        >\n          {authorTrimmed}\n        </a>\n      );\n    });\n\n  return <span>{authorLinks.reduce((prev, curr) => [prev, ' + ', curr])}</span>;\n}\n","import React, { useState } from 'react';\n\ntype MyProps = {\n  name: string;\n  onClick: Function;\n};\n\nexport default function LatestChapter(props: MyProps) {\n  return (\n    <a\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        props.onClick();\n      }}\n    >\n      {props.name}\n    </a>\n  );\n}\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\n// @ts-ignore\nimport uuid from 'react-uuid';\nimport styled from 'styled-components';\nimport Badge from '../Badge';\n\ntype MyProps = {\n  images?: Array<string>;\n  urls?: Array<string>;\n  id?: string;\n  baseUrl?: string;\n  onPickImage?: any;\n};\n\nconst ImageContainer = styled.div`\n  display: flex;\n  position: relative;\n  text-align: center;\n`;\n\nfunction buildNormalPreview(props: MyProps, additionalImgClasses: string) {\n  const imageClass = `perk-preview-img${additionalImgClasses}`;\n  const images = props.urls?.map<React.ReactNode>(url => {\n    return (\n      <Col key={uuid()}>\n        <Image\n          key={Date.now()}\n          className={imageClass}\n          src={`${props.baseUrl}${url}`}\n          fluid\n        />\n      </Col>\n    );\n  });\n  return (\n    <Row className=\"flex-nowrap\">\n      <ImageContainer>{images} </ImageContainer>\n    </Row>\n  );\n}\n\nfunction buildStaticPreview(props: MyProps, additionalImgClasses: string) {\n  const imageClass = `perk-preview-img${additionalImgClasses}`;\n  const images = props.images?.map<React.ReactNode>((image, index) => {\n    return (\n      <Badge>\n        <Col\n          key={uuid()}\n          onClick={() => {\n            props.onPickImage(index);\n          }}\n        >\n          <Image key={Date.now()} className={imageClass} src={image} fluid />\n          <i className=\"fas fa-upload\"></i>\n        </Col>\n      </Badge>\n    );\n  });\n  return (\n    <Row className=\"flex-nowrap\">\n      <ImageContainer>{images} </ImageContainer>\n    </Row>\n  );\n}\n\nexport default function MainPreview(props: MyProps) {\n  let content;\n  const additionalImgClasses = '';\n  content = props.urls\n    ? buildNormalPreview(props, additionalImgClasses)\n    : buildStaticPreview(props, additionalImgClasses);\n  return content;\n}\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport log from '../../../utils/log';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nconst PackLinkWrapper = styled.span`\n  margin-left: 4px;\n  color: white;\n\n  &:hover {\n    color: var(--main-color);\n    cursor: pointer;\n  }\n\n  &:active {\n    color: var(--secondary-color);\n    cursor: pointer;\n  }\n`;\n\nconst renderTooltip = props => (\n  <Tooltip id={`copyid-${props.id}-tooltip`} {...props}>\n    Copy a direct link to this pack to send to friends! If clicked, the toolbox\n    will open and the linked pack will be shown. It can also be pasted directly\n    into the search bar.\n  </Tooltip>\n);\n\nexport default function PackLink(props: { id: string }) {\n  const buildPackAppLink = () => {\n    return `dbdicontoolbox://${props.id}`;\n  };\n\n  const copyAppLink = () => {\n    const appLink = buildPackAppLink();\n    log.info(`Copying ${appLink} to clipboard`);\n    window.navigator.clipboard.writeText(appLink);\n  };\n\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      delay={{ show: 250, hide: 400 }}\n      overlay={renderTooltip}\n      trigger={['hover']}\n    >\n      <PackLinkWrapper>\n        <i className=\"fas fa-link\" onClick={copyAppLink}></i>\n      </PackLinkWrapper>\n    </OverlayTrigger>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport api from '../../../utils/api/api';\nimport AppContext from '../../UserProvider';\nimport PackLink from './PackLink';\n\nconst FavoriteWrapper = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  color: #d4af37;\n\n  &:hover {\n    color: yellow;\n    cursor: pointer;\n  }\n`;\n\ntype MyProps = {\n  name: string;\n  id: string;\n  isApproved?: boolean;\n  isFeatured?: boolean;\n  preview?: boolean;\n};\n\nexport default function Title(props: MyProps) {\n  const appContext = useContext(AppContext);\n  const isFavorite =\n    appContext.user &&\n    appContext.user.favorites.find(pack => pack.id === props.id);\n\n  const ribbonClass = !props.isApproved ? 'ribbon-unapproved' : 'ribbon';\n  const ribbonText = !props.isApproved ? 'UNAPPROVED' : 'Featured';\n  const hasRibbon = !props.preview && (props.isFeatured || !props.isApproved);\n\n  const favoriteStarClass = isFavorite\n    ? 'fas fa-star fa-lg'\n    : 'far fa-star fa-lg';\n  const favoriteStar =\n    !props.preview && appContext.user != null ? (\n      <FavoriteWrapper\n        onClick={async () => {\n          await api.updateFavorite(props.id, !isFavorite);\n          await api.getUser();\n          appContext.setUser(api.currentUser);\n        }}\n      >\n        <i className={favoriteStarClass}></i>\n      </FavoriteWrapper>\n    ) : null;\n  if (hasRibbon) {\n    return (\n      <Card.Title>\n        {favoriteStar}\n        <div className=\"ribbon-wrapper\">\n          <div className={ribbonClass}>{ribbonText}</div>\n        </div>\n        {props.name}\n        <PackLink id={props.id}></PackLink>\n      </Card.Title>\n    );\n  } else {\n    return (\n      <Card.Title>\n        {favoriteStar}\n        {props.name}\n        {!props.preview && <PackLink id={props.id}></PackLink>}\n      </Card.Title>\n    );\n  }\n}\n","import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport PlainTextInput from '../Form/PlainTextInput';\nimport Spinner from 'react-bootstrap/Spinner';\n\ntype MyProps = {\n  show: any;\n  onHide: any;\n  onConfirm: any;\n  packName: string;\n  packDescription: string;\n  operationInProgress: boolean;\n  packAuthor: string;\n  canEditAuthor: boolean;\n};\n\nexport default function EditPackModal(props: MyProps) {\n  const [packName, setPackName] = useState(props.packName);\n  const [packDesc, setPackDesc] = useState(props.packDescription);\n  const [packAuthor, setPackAuthor] = useState(props.packAuthor);\n  return (\n    <Modal\n      closeVariant=\"white\"\n      show={props.show}\n      size=\"lg\"\n      onHide={() => {\n        props.onHide();\n      }}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton closeVariant=\"white\">\n        <Modal.Title id=\"contained-modal-title-vcenter\">Edit Pack</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <PlainTextInput\n            label=\"Pack Name\"\n            value={packName}\n            onChange={e => setPackName(e.target.value)}\n          />\n          <PlainTextInput\n            label=\"Pack Description\"\n            value={packDesc}\n            onChange={e => setPackDesc(e.target.value)}\n          />\n          {props.canEditAuthor && (\n            <PlainTextInput\n              label=\"Pack Author\"\n              value={packAuthor}\n              onChange={e => setPackAuthor(e.target.value)}\n            />\n          )}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"info\"\n          onClick={() => {\n            props.onConfirm(packName, packAuthor, packDesc);\n          }}\n        >\n          {' '}\n          {props.operationInProgress && (\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              className=\"mr-2\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          )}\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport AppContext from '../../UserProvider';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ErrorModal from '../ErrorModal';\nimport SuccessModal from '../SuccessModal';\nimport api from '../../../utils/api/api';\nimport EditPackModal from './EditPackModal';\nimport { Link } from 'react-router-dom';\nimport routes from 'app/routes';\n\ntype MyProps = {\n  id: string;\n  meta: any;\n  onModifyComplete: any;\n};\n\nconst AdminControlsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin-bottom: 4px;\n  margin-top: 4px;\n`;\n\nexport default function AdminControls(props: MyProps) {\n  const appContext = useContext(AppContext);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [errorText, setErrorText] = useState('');\n  const [showEditPack, setShowEditPack] = useState(false);\n  const [deleteInProgress, setDeleteInProgress] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [editInProgress, setEditInProgress] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successText, setSuccessText] = useState('');\n\n  const showAuthor: boolean =\n    appContext?.user?.abilities?.can('manage', 'all') ?? false;\n\n  const handleDeleteClose = async (doDelete = false) => {\n    setDeleteInProgress(true);\n    try {\n      if (doDelete) {\n        // @ts-ignore\n        await api.executor.apis.default.deletePack({ id: props.id });\n        props.onModifyComplete();\n      }\n    } catch (e: any) {\n      setErrorText(e.message);\n      setShowError(true);\n      // Show error\n    } finally {\n      setDeleteInProgress(false);\n      setShowConfirm(false);\n    }\n  };\n\n  return (\n    <AdminControlsWrapper>\n      <Button\n        className=\"w-100 mr-1 ml-1\"\n        variant=\"info\"\n        onClick={() => {\n          setShowEditPack(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Link\n        to={{\n          pathname: routes.CREATE,\n          state: { id: props.id },\n        }}\n        className=\"w-100 mr-1\"\n      >\n        {appContext.features.upload && <Button\n          className=\"w-100\"\n          variant=\"info\"\n          onClick={() => appContext.setPage(routes.CREATE)}\n        >\n          Update\n        </Button>}\n\n      </Link>\n\n      <Button\n        className=\"w-100 mr-1\"\n        variant=\"info\"\n        onClick={async () => {\n          setShowConfirm(true);\n        }}\n      >\n        Delete\n      </Button>\n      <Modal\n        closeVariant=\"white\"\n        show={showConfirm}\n        onHide={() => {\n          handleDeleteClose(false);\n        }}\n      >\n        <Modal.Header closeButton closeVariant=\"white\">\n          <Modal.Title>Are you sure?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          This will delete pack {props.meta.name}. Are you sure about that?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              handleDeleteClose(true);\n            }}\n          >\n            {deleteInProgress && (\n              <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            )}\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <ErrorModal\n        title=\"Error Modifying Pack\"\n        onHide={() => setShowError(false)}\n        show={showError}\n        text={errorText}\n      ></ErrorModal>\n      <SuccessModal\n        title={`${props.meta.name} Updated`}\n        show={showSuccess}\n        onHide={() => setShowSuccess(false)}\n        text={successText}\n      ></SuccessModal>\n      <EditPackModal\n        operationInProgress={editInProgress}\n        show={showEditPack}\n        onHide={() => {\n          setShowEditPack(false);\n        }}\n        onConfirm={async (name: string, author: string, desc: string) => {\n          if (\n            name !== props.meta.name ||\n            desc !== props.meta.description ||\n            author !== props.meta.author\n          ) {\n            setEditInProgress(true);\n            try {\n              // @ts-ignore\n              await api.executor.apis.default.editPack(\n                { id: props.id },\n                { requestBody: { name, description: desc, author } },\n              );\n              props.onModifyComplete();\n            } catch (e: any) {\n              setErrorText(e.message);\n              setShowError(true);\n              // Show error\n            } finally {\n              setEditInProgress(false);\n              setShowEditPack(false);\n            }\n          } else {\n            setShowEditPack(false);\n          }\n        }}\n        packName={props.meta.name}\n        canEditAuthor={showAuthor}\n        packAuthor={props.meta.author}\n        packDescription={props.meta.description}\n      ></EditPackModal>\n    </AdminControlsWrapper>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ErrorModal from '../ErrorModal';\nimport SuccessModal from '../SuccessModal';\nimport api from '../../../utils/api/api';\nimport { Form } from 'react-bootstrap';\n\ntype MyProps = {\n  id: string;\n  meta: any;\n  onModifyComplete: any;\n};\n\nconst AdminControlsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin-bottom: 4px;\n  margin-top: 4px;\n`;\n\nexport default function ApprovalControls(props: MyProps) {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [errorText, setErrorText] = useState('');\n  const [deleteInProgress, setDeleteInProgress] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successText, setSuccessText] = useState('');\n  const [rejectReason, setRejectReason] = useState('');\n\n  const handleDeleteClose = async (doDelete = false) => {\n    setDeleteInProgress(true);\n    try {\n      if (doDelete) {\n        // @ts-ignore\n        await api.executor.apis.default.rejectPack(\n          { id: props.id },\n          { requestBody: { reason: rejectReason } },\n        );\n        props.onModifyComplete();\n      }\n    } catch (e: any) {\n      setErrorText(e.message);\n      setShowError(true);\n      // Show error\n    } finally {\n      setDeleteInProgress(false);\n      setShowConfirm(false);\n    }\n  };\n\n  const handleApprovePack = async () => {\n    try {\n      await api.approvePack(props.id);\n      props.onModifyComplete();\n    } catch (e: any) {\n      setErrorText(e.message);\n      setShowError(true);\n    }\n  };\n\n  return (\n    <AdminControlsWrapper>\n      <Button\n        className=\"w-100 mr-1 ml-1 approve-button\"\n        variant=\"info\"\n        onClick={() => {\n          handleApprovePack();\n        }}\n      >\n        Approve\n      </Button>\n      <Button\n        className=\"w-100 mr-1 reject-button\"\n        variant=\"info\"\n        onClick={async () => {\n          setShowConfirm(true);\n        }}\n      >\n        Reject\n      </Button>\n      <Modal\n        closeVariant=\"white\"\n        show={showConfirm}\n        onHide={() => {\n          handleDeleteClose(false);\n        }}\n      >\n        <Modal.Header closeButton closeVariant=\"white\">\n          <Modal.Title>Are you sure?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              Please enter a reason for your rejection [REQUIRED]\n            </Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              onChange={e => setRejectReason(e.target.value)}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              if (rejectReason && rejectReason.length > 0) {\n                handleDeleteClose(true);\n              }\n            }}\n          >\n            {deleteInProgress && (\n              <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            )}\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <ErrorModal\n        title=\"Error Modifying Pack\"\n        onHide={() => setShowError(false)}\n        show={showError}\n        text={errorText}\n      ></ErrorModal>\n      <SuccessModal\n        title={`${props.meta.name} Updated`}\n        show={showSuccess}\n        onHide={() => setShowSuccess(false)}\n        text={successText}\n      ></SuccessModal>\n    </AdminControlsWrapper>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { subject } from '@casl/ability';\nimport log from '../../utils/log';\nimport { DateTime } from 'luxon';\nimport path from 'path';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Has from './IconPack/PerkPack/Has';\nimport Details from './IconPack/PerkPack/Details';\nimport InstallButton from './IconPack/InstallButton';\nimport Author from './IconPack/Author';\nimport LatestChapter from './IconPack/LatestChapter';\nimport MainPreview from './IconPack/MainPreview';\nimport Title from './IconPack/Title';\nimport AppContext from '../UserProvider';\nimport AdminControls from './IconPack/AdminControls';\nimport ApprovalControls from './IconPack/ApprovalControls';\nimport { ReactNode } from 'react-bootstrap/node_modules/@types/react';\n\nexport enum PackType {\n  Portraits,\n  Perks,\n}\n\nconst IMAGE_TAG_FROM_TYPE: { [key in PackType]: string } = {\n  [PackType.Portraits]: 'portraits',\n  [PackType.Perks]: 'perks',\n};\n\ntype MyProps = {\n  id: string;\n  downloads: number;\n  meta: any;\n  onAuthorClick: any;\n  setFilter: any;\n  onError: (message: string, link?: string) => void;\n  onInstallComplete: any;\n  onModifyComplete: any;\n  approvalRequired: boolean;\n  type: PackType;\n};\n\nexport default function Pack(props: MyProps) {\n  const [saving, setSaving] = useState(false);\n  const [installState, setInstallState] = useState('');\n  const [showDetails, setShowDetails] = useState(false);\n  const appContext = useContext(AppContext);\n\n  const imageTag = props.meta.hasCustomPreviews\n    ? 'preview'\n    : IMAGE_TAG_FROM_TYPE[props.type];\n  const numImages = props.meta.hasPreviewBanner ? 1 : 4;\n\n  // @ts-ignore\n  const urls = [...Array(numImages).keys()].map(i => {\n    return `${imageTag}_${i}.png`;\n  });\n\n  const lastUpdateStr = DateTime.fromISO(props.meta.lastUpdate).toRelative();\n\n  let cardBody = (\n    <Card.Body className=\"mb-0\">\n      <Row className=\"mb-2\">\n        <Col>\n          <b>Author:</b>{' '}\n          <Author\n            onClick={(name: string) => {\n              props.onAuthorClick(name);\n            }}\n            name={props.meta.author}\n          />\n        </Col>\n        <Col>\n          <b>Downloads:</b> {props.meta.downloads}\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <b>Latest Chapter:</b>{' '}\n          <LatestChapter\n            name={props.meta.latestChapter}\n            onClick={() => {\n              props.setFilter(props.meta.latestChapter);\n            }}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <b>Last Update:</b> {lastUpdateStr}\n        </Col>\n      </Row>\n\n      <Has\n        perks={props.meta.hasPerks}\n        portraits={props.meta.hasPortraits}\n        powers={props.meta.hasPowers}\n        items={props.meta.hasItems}\n        statusEffects={props.meta.hasStatusEffects}\n        addons={props.meta.hasItemAddOns}\n        offerings={props.meta.hasFavors}\n      />\n    </Card.Body>\n  );\n\n  const featured = props.meta.featured ? 'pack-featured' : '';\n\n  let adminButtons: ReactNode = null;\n  let approvalButtons: ReactNode = null;\n\n  if (\n    appContext.user &&\n    appContext.user.abilities.can('manage', subject('PerkPack', props.meta))\n  ) {\n    adminButtons = (\n      <AdminControls\n        id={props.id}\n        meta={props.meta}\n        onModifyComplete={props.onModifyComplete}\n      />\n    );\n  }\n\n  if (\n    appContext.user &&\n    appContext.user.abilities.can('update', 'UnmoderatedPacks') &&\n    !props.meta.approved\n  ) {\n    approvalButtons = (\n      <ApprovalControls\n        id={props.id}\n        meta={props.meta}\n        onModifyComplete={props.onModifyComplete}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <Card\n        className={`${featured} ml-0 mr-0 text-center shadow perk-card perk-card-border`}\n      >\n        <Card.Body>\n          <MainPreview\n            urls={urls}\n            id={props.id}\n            baseUrl={props.meta.previewDir}\n          />\n        </Card.Body>\n        <Title\n          isApproved={props.meta.approved}\n          name={props.meta.name}\n          isFeatured={props.meta.featured}\n          id={props.id}\n        />\n        {cardBody}\n        <InstallButton\n          installInProgress={false}\n          progressText={installState}\n          onClick={() => {\n            window.open(props.meta.url);\n            // const command = {command: 'installPack', id: props.id};\n            // window.open(`dbdicontoolbox://${JSON.stringify(command)}`);\n          }}\n        />\n        <Button\n          variant=\"secondary\"\n          className=\"m-1\"\n          onClick={() => {\n            setShowDetails(true);\n          }}\n        >\n          Details\n        </Button>\n        {adminButtons}\n        {approvalButtons}\n      </Card>\n      <Details\n        show={showDetails}\n        onHide={() => setShowDetails(false)}\n        id={props.id}\n        meta={props.meta}\n      />\n    </div>\n  );\n}\n","import React, { Component, useState, useContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\nimport ErrorModal from '../../components/ErrorModal';\nimport SuccessModal from '../../components/SuccessModal';\nimport AuthorModal from '../../components/AuthorModal';\nimport PackDisplayHeader from '../../components/PackDisplayHeader';\nimport PackDisplayFilters from '../../components/PackDisplayFilters';\nimport api from '../../../utils/api/api';\nimport Pack, { PackType } from '../../components/Pack';\nimport log from '../../../utils/log';\nimport { PackMeta, PackQueryParams } from 'utils/api/api-types';\n\ntype MyProps = {\n  showHeaderBar?: boolean;\n  paginate?: boolean;\n  featured?: boolean;\n  mine?: boolean;\n  defaultOnly?: boolean;\n  unapprovedOnly?: boolean;\n};\n\nconst DeckWrapper = styled.div`\n  overflow-y: scroll;\n  overflow-x: hidden;\n  flex: 1;\n`;\n\nconst PackDisplayContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PaginatorWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 3px;\n  padding: 3px;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.5);\n`;\n\nconst SORT_KEY_MAP: { [key: string]: { key: string; dir: string } } = {\n  Name: { key: 'name', dir: 'ascending' },\n  Date: { key: 'lastUpdate', dir: 'descending' },\n  Downloads: { key: 'downloads', dir: 'descending' },\n  Chapter: { key: 'latestChapter', dir: 'descending' },\n  Author: { key: 'author', dir: 'ascending' },\n};\n\nexport function PackDisplay(props: MyProps) {\n  const [errorModalShow, setErrorModalShow] = useState(false);\n  const [searchFilter, setSearchFilter] = useState('');\n  const [filters, setFilters] = useState<Array<string>>([]);\n  const [sortKey, setSortKey] = useState('Downloads');\n  const [errorText, setErrorText] = useState('');\n  const [errorLink, setErrorLink] = useState<string | undefined>('');\n  const [showAuthorPage, setShowAuthorPage] = useState(false);\n  const [currentAuthor, setCurrentAuthor] = useState('');\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(12);\n  const [successModalShow, setSuccessModalShow] = useState(false);\n  const [successModalText, setSuccessModalText] = useState('');\n  const [favoritesOnly, setFavoritesOnly] = useState(false);\n  const [packs, setPacks] = useState<{\n    meta: { totalDocs: number };\n    data: Array<PackMeta>;\n  }>({ meta: { totalDocs: 0 }, data: [] });\n  const deckWrapperRef = React.createRef<typeof DeckWrapper>();\n\n  type CardOpts = {\n    onError: (message: string, link?: string) => void;\n    onInstallComplete: (id: string) => void;\n    onSetFilter: (text: string) => void;\n    onAuthorClick: (author: string) => void;\n    onModifyComplete: () => void;\n  };\n\n  const fromPacksBuildCards = (opts: CardOpts) => {\n    const myPacks = packs.data;\n    return myPacks.map(pack => {\n      const primaryType = pack.hasPerks ? PackType.Perks : PackType.Portraits;\n      return (\n        <Pack\n          onError={opts.onError}\n          onInstallComplete={opts.onInstallComplete}\n          meta={pack}\n          id={pack.id}\n          downloads={pack.downloads}\n          setFilter={opts.onSetFilter}\n          onAuthorClick={(author: string) => {\n            opts.onAuthorClick(author);\n          }}\n          approvalRequired={!!props.unapprovedOnly}\n          onModifyComplete={opts.onModifyComplete}\n          type={primaryType}\n        />\n      );\n    });\n  };\n\n  const loadPacks = async () => {\n    if (props.defaultOnly) {\n      const packs = await api.getPacks({ defaultOnly: true });\n      setPacks(packs);\n      return;\n    }\n    const capabilities = filters.length > 0 ? filters.join('|') : undefined;\n\n    const params: PackQueryParams = {\n      page: page + 1,\n      limit: pageSize,\n      capabilities,\n      unapproved: props.unapprovedOnly,\n    };\n\n    if (searchFilter) {\n      params.search = searchFilter;\n    }\n\n    if (props.featured === true) {\n      params.isFeatured = true;\n    }\n\n    if (favoritesOnly) {\n      params.favorites = true;\n    }\n\n    if (props.mine) {\n      params.mine = true;\n    }\n\n    const apiSortKey = SORT_KEY_MAP[sortKey];\n\n    if (apiSortKey) {\n      params.sort = apiSortKey.key;\n      params.sortdir = apiSortKey.dir;\n    }\n\n    const packs = await api.getPacks(params);\n    setPacks(packs);\n  };\n\n  useEffect(() => {\n    loadPacks();\n  }, [searchFilter, page, pageSize, filters, favoritesOnly, sortKey]);\n\n  const fromCardsBuildDeck = (cards: JSX.Element[]) => {\n    return (\n      <Row key=\"pack-cards\" className=\"justify-content-center\">\n        {cards.map(card => (\n          <Col key={`card-${uuidv4()}`} className=\"col-auto\">\n            {card}\n          </Col>\n        ))}\n      </Row>\n    );\n  };\n\n  const showHeaderBar = !(props.showHeaderBar === false);\n  const paginate = !(props.paginate === false);\n  const errorModalText = errorText;\n\n  if (!packs.data) {\n    return (\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <Spinner\n          as=\"span\"\n          animation=\"border\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  const cards = fromPacksBuildCards({\n    onError: (msg: string, link?: string) => {\n      setErrorText(msg);\n      setErrorLink(link);\n      setErrorModalShow(true);\n    },\n    onInstallComplete: (id: string) => {\n      const pack = packs.data.find(pack => pack.id === id);\n      if (!pack) {\n        log.error('Pack not found after install!', id);\n        return;\n      }\n      setSuccessModalText(`Pack ${pack.name} installed!`);\n      setSuccessModalShow(true);\n    },\n    onAuthorClick: (author: string) => {\n      setCurrentAuthor(author);\n      setShowAuthorPage(true);\n    },\n    onSetFilter: (text: string) => {\n      setPage(0);\n      setSearchFilter(text);\n    },\n    onModifyComplete: () => {\n      loadPacks();\n    },\n  });\n  const deck = fromCardsBuildDeck(cards);\n\n  const numPages = Math.ceil(packs.meta.totalDocs / pageSize);\n\n  return (\n    <PackDisplayContainer>\n      {showHeaderBar && (\n        <div>\n          <PackDisplayHeader\n            initialPageSize={pageSize}\n            initialSortKey={sortKey}\n            onSearchFilter={(text: string) => {\n              setPage(0);\n              setSearchFilter(text);\n            }}\n            onSortKeySet={(text: string) => {\n              setSortKey(text);\n            }}\n            initialFilterText={searchFilter}\n            onPageSizeSet={(size: number) => {\n              setPage(0);\n              setPageSize(size);\n            }}\n            onShowFavoritesSet={(favoritesOnly: boolean) => {\n              setFavoritesOnly(favoritesOnly);\n              setPage(0);\n            }}\n            refresh={loadPacks}\n          />\n          <PackDisplayFilters\n            initialFilters={filters}\n            onFiltersSet={(newFilters: string[]) => {\n              setFilters(newFilters);\n            }}\n          />\n        </div>\n      )}\n\n      <DeckWrapper ref={deckWrapperRef as any}>{deck}</DeckWrapper>\n      {paginate && (\n        <PaginatorWrapper>\n          <ReactPaginate\n            previousLabel={'Previous'}\n            nextLabel={'Next'}\n            breakLabel={'...'}\n            pageCount={numPages}\n            marginPagesDisplayed={1}\n            pageRangeDisplayed={15}\n            forcePage={page}\n            onPageChange={arg => {\n              // @ts-ignore\n              deckWrapperRef?.current?.scrollTo?.(0, 0);\n              setPage(arg.selected);\n            }}\n            breakClassName={'page-item'}\n            breakLinkClassName={'page-link'}\n            containerClassName={'pagination'}\n            pageClassName={'page-item'}\n            pageLinkClassName={'page-link'}\n            previousClassName={'page-item'}\n            previousLinkClassName={'page-link'}\n            nextClassName={'page-item'}\n            nextLinkClassName={'page-link'}\n            activeClassName={'active'}\n          />\n        </PaginatorWrapper>\n      )}\n      <ErrorModal\n        text={errorModalText}\n        link={errorLink}\n        show={errorModalShow}\n        onHide={() => setErrorModalShow(false)}\n      />\n      <SuccessModal\n        title=\"Install Complete\"\n        text={successModalText}\n        show={successModalShow}\n        onHide={() => setSuccessModalShow(false)}\n      />\n      <AuthorModal\n        show={showAuthorPage}\n        author={currentAuthor}\n        onHide={() => setShowAuthorPage(false)}\n        onShowPacks={() => {\n          setPage(0);\n          setShowAuthorPage(false);\n          setSearchFilter(currentAuthor);\n        }}\n      />\n    </PackDisplayContainer>\n  );\n}\n"],"names":["Badge","styled","InputWrapper","InputValueWrapper","PlainTextInput","props","input","tooltip","undefined","helpTxt","help","placement","delay","show","hide","overlay","id","trigger","className","options","onChange","onInputChange","allowNew","labelKey","value","type","disabled","label","SuccessModal","closeVariant","size","onHide","centered","closeButton","title","text","variant","onClick","ErrorModal","link","length","href","target","Modal","Button","AuthorModal","params","state","authorData","links","prevProps","this","author","api","setState","viewPacksButton","onShowPacks","body","linkList","map","linkData","index","ListGroup","donateButton","donateLink","footer","Row","Col","blurb","Component","Container","DropdownButtonWrapper","ShowFavoritesWrapper","RefreshWrapper","ShowFavoritesStarWrapper","RefreshIconWrapper","PackDisplayHeader","appContext","useContext","AppContext","useState","initialFilterText","searchText","setSearchText","initialSortKey","sortKeyText","setSortKeyText","initialPageSize","pageSizeText","setPageSizeText","initialShowFavorites","showFavorites","setShowFavorites","debounceSearchCallback","useDebouncedCallback","log","onSearchFilter","useEffect","favoriteStarClass","DropdownButton","sortKey","NavDropdown","e","preventDefault","onSortKeySet","pageSize","onPageSizeSet","user","newShowFavorites","onShowFavoritesSet","refresh","Form","style","maxWidth","minWidth","marginLeft","placeholder","startsWith","split","CheckboxState","FilterCheckboxContainer","FilterCheckBox","PackDisplayFilter","field","UNCHECKED","ref","React","filters","setFilters","setFiltersAndNotify","newFilters","displayFilters","forEach","filter","push","CHECKED","console","onFiltersSet","checkBoxes","category","checked","newState","INDETERMINATE","nextCheckboxState","targetFilterIndex","findIndex","targetFilter","newFilter","splice","setFilterFieldState","current","ReactDOM","indeterminate","marginRight","newField","HasItem","has","PerkPackHas","perks","portraits","powers","items","statusEffects","offerings","addons","languageMap","getLanguage","filePath","getLanguageItemAddon","portrait","getLanguagePortrait","rootDir","getLanguageRoot","tag","getLanguageAuric","getLanguageDaily","getLanguageEmblems","getLanguageHelp","getLanguageItems","getLanguageOfferings","getLanguagePerks","getLanguagePowers","getLanguageStatus","getLanguageStoreTabs","getDefaultLanguage","buildImgRow","images","colWidth","cols","url","Image","src","fluid","uuid","colClass","Card","PerkPackDetails","baseUrl","meta","previewDir","portraitImg","perkImg","capabilities","imgClass","hasPerks","i","hasPortraits","offeringsImg","hasFavors","itemImg","hasItems","addonsImg","hasItemAddOns","powersImg","hasPowers","statusImg","hasStatusEffects","hasActions","hasArchive","hasBanners","hasDailyRituals","hasEmblems","hasEvents","hasHelp","hasHelpLoading","hasStoreBackgrounds","hasStoreTabs","name","Tabs","defaultActiveKey","Tab","eventKey","description","latestChapter","capability","slugify","toLowerCase","PackInstallButton","installInProgress","progressText","Spinner","as","animation","role","hidden","Author","authorLinks","trim","authorTrimmed","reduce","prev","curr","LatestChapter","ImageContainer","MainPreview","content","urls","additionalImgClasses","imageClass","Date","now","buildNormalPreview","image","onPickImage","buildStaticPreview","PackLinkWrapper","renderTooltip","Tooltip","PackLink","OverlayTrigger","appLink","window","navigator","clipboard","writeText","FavoriteWrapper","Title","isFavorite","favorites","find","pack","ribbonClass","isApproved","ribbonText","hasRibbon","preview","isFeatured","favoriteStar","setUser","EditPackModal","packName","setPackName","packDescription","packDesc","setPackDesc","packAuthor","setPackAuthor","canEditAuthor","onConfirm","operationInProgress","AdminControlsWrapper","AdminControls","showConfirm","setShowConfirm","errorText","setErrorText","showEditPack","setShowEditPack","deleteInProgress","setDeleteInProgress","showError","setShowError","editInProgress","setEditInProgress","showSuccess","setShowSuccess","successText","showAuthor","abilities","can","handleDeleteClose","doDelete","onModifyComplete","message","to","pathname","routes","features","upload","setPage","desc","requestBody","PackType","ApprovalControls","rejectReason","setRejectReason","reason","handleApprovePack","controlId","rows","IMAGE_TAG_FROM_TYPE","Portraits","Perks","Pack","installState","showDetails","setShowDetails","imageTag","hasCustomPreviews","numImages","hasPreviewBanner","Array","keys","lastUpdateStr","DateTime","lastUpdate","toRelative","cardBody","onAuthorClick","downloads","setFilter","featured","adminButtons","approvalButtons","subject","approved","open","DeckWrapper","PackDisplayContainer","PaginatorWrapper","SORT_KEY_MAP","Name","key","dir","Downloads","Chapter","PackDisplay","errorModalShow","setErrorModalShow","searchFilter","setSearchFilter","setSortKey","errorLink","setErrorLink","showAuthorPage","setShowAuthorPage","currentAuthor","setCurrentAuthor","page","setPageSize","successModalShow","setSuccessModalShow","successModalText","setSuccessModalText","favoritesOnly","setFavoritesOnly","totalDocs","data","packs","setPacks","deckWrapperRef","loadPacks","defaultOnly","join","limit","unapproved","unapprovedOnly","search","mine","apiSortKey","sort","sortdir","showHeaderBar","paginate","errorModalText","opts","deck","cards","card","uuidv4","fromCardsBuildDeck","onError","msg","onInstallComplete","onSetFilter","primaryType","approvalRequired","numPages","Math","ceil","initialFilters","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","forcePage","onPageChange","arg","scrollTo","selected","breakClassName","breakLinkClassName","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName"],"sourceRoot":""}